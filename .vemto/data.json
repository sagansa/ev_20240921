{
    "tables": {
        "projects": {
            "item_1": {
                "uuid": "2c933557-df9f-4f27-b050-9a9235d5a50f",
                "id": 1,
                "createdAt": "2024-07-29 10:31:45",
                "updatedAt": "2024-08-19 09:53:15",
                "settings": {
                    "cssFramework": "tailwind",
                    "uiStarterKit": "jetstream",
                    "usesLivewire": true,
                    "usesInertia": false,
                    "usesVue": false,
                    "usesReact": false,
                    "usesSvelte": false,
                    "isFreshLaravelProject": true,
                    "schemaReaderMode": "db",
                    "schemaReaderDbDriver": "mysql",
                    "schemaReaderDbHost": "127.0.0.1",
                    "schemaReaderDbPort": "3306",
                    "schemaReaderDbUsername": "root",
                    "schemaReaderDbPassword": "root",
                    "schemaReaderDbDatabase": "vemto_schema_reader_ev",
                    "laravelVersion": "11.9"
                },
                "canShowSchemaSourceChangesAlert": false,
                "codeGenerationSettings": {
                    "models": true,
                    "factories": true,
                    "seeders": true,
                    "policies": true,
                    "requests": true,
                    "controllers": true,
                    "routes": true,
                    "views": true,
                    "translationsOnViews": true,
                    "translationsFormat": "underscore"
                },
                "languages": [
                    "en"
                ],
                "defaultLanguage": "en",
                "translations": {
                    "en": {
                        "navigation.home": "Home",
                        "navigation.apps": "Apps",
                        "crud.payments.filament.name.helper_text": "",
                        "crud.payments.filament.name.label": "",
                        "crud.payments.filament.name.description": "",
                        "crud.providers.filament.name.helper_text": "",
                        "crud.providers.filament.name.label": "",
                        "crud.providers.filament.name.description": "",
                        "crud.providers.filament.status.helper_text": "",
                        "crud.providers.filament.status.label": "",
                        "crud.providers.filament.status.description": "",
                        "crud.providers.filament.user_id.helper_text": "",
                        "crud.providers.filament.user_id.loading_message": "",
                        "crud.providers.filament.user_id.no_result_message": "",
                        "crud.providers.filament.user_id.search_message": "",
                        "crud.providers.filament.user_id.label": "",
                        "crud.providers.filament.contact.helper_text": "",
                        "crud.providers.filament.contact.label": "",
                        "crud.providers.filament.contact.description": "",
                        "crud.providers.filament.address.helper_text": "",
                        "crud.providers.filament.address.label": "",
                        "crud.providers.filament.address.description": "",
                        "crud.providers.filament.province_id.helper_text": "",
                        "crud.providers.filament.province_id.loading_message": "",
                        "crud.providers.filament.province_id.no_result_message": "",
                        "crud.providers.filament.province_id.search_message": "",
                        "crud.providers.filament.province_id.label": "",
                        "crud.providers.filament.city_id.helper_text": "",
                        "crud.providers.filament.city_id.loading_message": "",
                        "crud.providers.filament.city_id.no_result_message": "",
                        "crud.providers.filament.city_id.search_message": "",
                        "crud.providers.filament.city_id.label": "",
                        "crud.providers.filament.district_id.helper_text": "",
                        "crud.providers.filament.district_id.loading_message": "",
                        "crud.providers.filament.district_id.no_result_message": "",
                        "crud.providers.filament.district_id.search_message": "",
                        "crud.providers.filament.district_id.label": "",
                        "crud.providers.filament.subdistrict_id.helper_text": "",
                        "crud.providers.filament.subdistrict_id.loading_message": "",
                        "crud.providers.filament.subdistrict_id.no_result_message": "",
                        "crud.providers.filament.subdistrict_id.search_message": "",
                        "crud.providers.filament.subdistrict_id.label": "",
                        "crud.providers.filament.payment_id.helper_text": "",
                        "crud.providers.filament.payment_id.loading_message": "",
                        "crud.providers.filament.payment_id.no_result_message": "",
                        "crud.providers.filament.payment_id.search_message": "",
                        "crud.providers.filament.payment_id.label": "",
                        "crud.providers.inputs.name.label": "Name",
                        "crud.providers.inputs.name.placeholder": "Name",
                        "crud.providers.inputs.status.label": "Status",
                        "crud.providers.inputs.status.placeholder": "Status",
                        "crud.providers.inputs.user_id.label": "User",
                        "crud.providers.inputs.user_id.placeholder": "User id",
                        "crud.providers.inputs.contact.label": "Contact",
                        "crud.providers.inputs.contact.placeholder": "Contact",
                        "crud.providers.inputs.address.label": "Address",
                        "crud.providers.inputs.address.placeholder": "Address",
                        "crud.providers.inputs.province_id.label": "Province",
                        "crud.providers.inputs.province_id.placeholder": "Province id",
                        "crud.providers.inputs.city_id.label": "City",
                        "crud.providers.inputs.city_id.placeholder": "City id",
                        "crud.providers.inputs.district_id.label": "District",
                        "crud.providers.inputs.district_id.placeholder": "District id",
                        "crud.providers.inputs.subdistrict_id.label": "Subdistrict",
                        "crud.providers.inputs.subdistrict_id.placeholder": "Subdistrict id",
                        "crud.providers.inputs.payment_id.label": "Payment",
                        "crud.providers.inputs.payment_id.placeholder": "Payment id",
                        "crud.chargerLocations.itemTitle": "Charger Location",
                        "crud.chargerLocations.collectionTitle": "Charger Locations",
                        "crud.chargerLocations.inputs.image.label": "Image",
                        "crud.chargerLocations.inputs.image.placeholder": "Image",
                        "crud.chargerLocations.filament.image.helper_text": "",
                        "crud.chargerLocations.filament.image.label": "",
                        "crud.chargerLocations.inputs.name.label": "Name",
                        "crud.chargerLocations.inputs.name.placeholder": "Name",
                        "crud.chargerLocations.filament.name.helper_text": "",
                        "crud.chargerLocations.filament.name.label": "",
                        "crud.chargerLocations.filament.name.description": "",
                        "crud.chargerLocations.inputs.provider_id.label": "Provider",
                        "crud.chargerLocations.inputs.provider_id.placeholder": "Provider id",
                        "crud.chargerLocations.filament.provider_id.helper_text": "",
                        "crud.chargerLocations.filament.provider_id.loading_message": "",
                        "crud.chargerLocations.filament.provider_id.no_result_message": "",
                        "crud.chargerLocations.filament.provider_id.search_message": "",
                        "crud.chargerLocations.filament.provider_id.label": "",
                        "crud.chargerLocations.inputs.location_on.label": "Location on",
                        "crud.chargerLocations.inputs.location_on.placeholder": "Location on",
                        "crud.chargerLocations.filament.location_on.helper_text": "",
                        "crud.chargerLocations.filament.location_on.label": "",
                        "crud.chargerLocations.filament.location_on.description": "",
                        "crud.chargerLocations.inputs.status.label": "Status",
                        "crud.chargerLocations.inputs.status.placeholder": "Status",
                        "crud.chargerLocations.filament.status.helper_text": "",
                        "crud.chargerLocations.filament.status.label": "",
                        "crud.chargerLocations.filament.status.description": "",
                        "crud.chargerLocations.inputs.description.label": "Description",
                        "crud.chargerLocations.inputs.description.placeholder": "Description",
                        "crud.chargerLocations.filament.description.helper_text": "",
                        "crud.chargerLocations.filament.description.label": "",
                        "crud.chargerLocations.inputs.latitude.label": "Latitude",
                        "crud.chargerLocations.inputs.latitude.placeholder": "Latitude",
                        "crud.chargerLocations.filament.latitude.helper_text": "",
                        "crud.chargerLocations.filament.latitude.label": "",
                        "crud.chargerLocations.filament.latitude.description": "",
                        "crud.chargerLocations.inputs.longitude.label": "Longitude",
                        "crud.chargerLocations.inputs.longitude.placeholder": "Longitude",
                        "crud.chargerLocations.filament.longitude.helper_text": "",
                        "crud.chargerLocations.filament.longitude.label": "",
                        "crud.chargerLocations.filament.longitude.description": "",
                        "crud.chargerLocations.inputs.system.label": "System",
                        "crud.chargerLocations.inputs.system.placeholder": "System",
                        "crud.chargerLocations.filament.system.helper_text": "",
                        "crud.chargerLocations.filament.system.label": "",
                        "crud.chargerLocations.filament.system.description": "",
                        "crud.chargerLocations.inputs.parking.label": "Parking",
                        "crud.chargerLocations.inputs.parking.placeholder": "Parking",
                        "crud.chargerLocations.filament.parking.helper_text": "",
                        "crud.chargerLocations.filament.parking.label": "",
                        "crud.chargerLocations.inputs.province_id.label": "Province",
                        "crud.chargerLocations.inputs.province_id.placeholder": "Province id",
                        "crud.chargerLocations.filament.province_id.helper_text": "",
                        "crud.chargerLocations.filament.province_id.loading_message": "",
                        "crud.chargerLocations.filament.province_id.no_result_message": "",
                        "crud.chargerLocations.filament.province_id.search_message": "",
                        "crud.chargerLocations.filament.province_id.label": "",
                        "crud.chargerLocations.inputs.city_id.label": "City",
                        "crud.chargerLocations.inputs.city_id.placeholder": "City id",
                        "crud.chargerLocations.filament.city_id.helper_text": "",
                        "crud.chargerLocations.filament.city_id.loading_message": "",
                        "crud.chargerLocations.filament.city_id.no_result_message": "",
                        "crud.chargerLocations.filament.city_id.search_message": "",
                        "crud.chargerLocations.filament.city_id.label": "",
                        "crud.chargerLocations.inputs.district_id.label": "District",
                        "crud.chargerLocations.inputs.district_id.placeholder": "District id",
                        "crud.chargerLocations.filament.district_id.helper_text": "",
                        "crud.chargerLocations.filament.district_id.loading_message": "",
                        "crud.chargerLocations.filament.district_id.no_result_message": "",
                        "crud.chargerLocations.filament.district_id.search_message": "",
                        "crud.chargerLocations.filament.district_id.label": "",
                        "crud.chargerLocations.inputs.subdistrict_id.label": "Subdistrict",
                        "crud.chargerLocations.inputs.subdistrict_id.placeholder": "Subdistrict id",
                        "crud.chargerLocations.filament.subdistrict_id.helper_text": "",
                        "crud.chargerLocations.filament.subdistrict_id.loading_message": "",
                        "crud.chargerLocations.filament.subdistrict_id.no_result_message": "",
                        "crud.chargerLocations.filament.subdistrict_id.search_message": "",
                        "crud.chargerLocations.filament.subdistrict_id.label": "",
                        "crud.chargerLocations.inputs.postal_code_id.label": "Postal Code",
                        "crud.chargerLocations.inputs.postal_code_id.placeholder": "Postal code id",
                        "crud.chargerLocations.filament.postal_code_id.helper_text": "",
                        "crud.chargerLocations.filament.postal_code_id.loading_message": "",
                        "crud.chargerLocations.filament.postal_code_id.no_result_message": "",
                        "crud.chargerLocations.filament.postal_code_id.search_message": "",
                        "crud.chargerLocations.filament.postal_code_id.label": "",
                        "crud.chargerLocations.inputs.user_id.label": "User",
                        "crud.chargerLocations.inputs.user_id.placeholder": "User id",
                        "crud.chargerLocations.filament.user_id.helper_text": "",
                        "crud.chargerLocations.filament.user_id.loading_message": "",
                        "crud.chargerLocations.filament.user_id.no_result_message": "",
                        "crud.chargerLocations.filament.user_id.search_message": "",
                        "crud.chargerLocations.filament.user_id.label": "",
                        "crud.payments.inputs.name.label": "Name",
                        "crud.payments.inputs.name.placeholder": "Name",
                        "crud.brandVehicles.itemTitle": "Brand Vehicle",
                        "crud.brandVehicles.collectionTitle": "Brand Vehicles",
                        "crud.brandVehicles.inputs.name.label": "Name",
                        "crud.brandVehicles.inputs.name.placeholder": "Name",
                        "crud.brandVehicles.filament.name.helper_text": "",
                        "crud.brandVehicles.filament.name.label": "",
                        "crud.brandVehicles.filament.name.description": "",
                        "crud.modelVehicles.itemTitle": "Model Vehicle",
                        "crud.modelVehicles.collectionTitle": "Model Vehicles",
                        "crud.modelVehicles.inputs.name.label": "Name",
                        "crud.modelVehicles.inputs.name.placeholder": "Name",
                        "crud.modelVehicles.filament.name.helper_text": "",
                        "crud.modelVehicles.filament.name.label": "",
                        "crud.modelVehicles.filament.name.description": "",
                        "crud.modelVehicles.inputs.brand_vehicle_id.label": "Brand vehicle",
                        "crud.modelVehicles.inputs.brand_vehicle_id.placeholder": "Brand vehicle id",
                        "crud.modelVehicles.filament.brand_vehicle_id.helper_text": "",
                        "crud.modelVehicles.filament.brand_vehicle_id.loading_message": "",
                        "crud.modelVehicles.filament.brand_vehicle_id.no_result_message": "",
                        "crud.modelVehicles.filament.brand_vehicle_id.search_message": "",
                        "crud.modelVehicles.filament.brand_vehicle_id.label": "",
                        "crud.typeVehicles.inputs.name.label": "Name",
                        "crud.typeVehicles.inputs.name.placeholder": "Name",
                        "crud.typeVehicles.filament.name.helper_text": "",
                        "crud.typeVehicles.filament.name.label": "",
                        "crud.typeVehicles.filament.name.description": "",
                        "crud.typeVehicles.inputs.model_vehicle_id.label": "Model vehicle",
                        "crud.typeVehicles.inputs.model_vehicle_id.placeholder": "Model vehicle id",
                        "crud.typeVehicles.filament.model_vehicle_id.helper_text": "",
                        "crud.typeVehicles.filament.model_vehicle_id.loading_message": "",
                        "crud.typeVehicles.filament.model_vehicle_id.no_result_message": "",
                        "crud.typeVehicles.filament.model_vehicle_id.search_message": "",
                        "crud.typeVehicles.filament.model_vehicle_id.label": "",
                        "crud.typeVehicles.inputs.battery_capacity.label": "Battery capacity",
                        "crud.typeVehicles.inputs.battery_capacity.placeholder": "Battery capacity",
                        "crud.typeVehicles.filament.battery_capacity.helper_text": "",
                        "crud.typeVehicles.filament.battery_capacity.label": "",
                        "crud.typeVehicles.filament.battery_capacity.description": "",
                        "crud.typeVehicles.inputs.type_charger_id.label": "Type charger",
                        "crud.typeVehicles.inputs.type_charger_id.placeholder": "Type charger id",
                        "crud.typeVehicles.filament.type_charger_id.helper_text": "",
                        "crud.typeVehicles.filament.type_charger_id.loading_message": "",
                        "crud.typeVehicles.filament.type_charger_id.no_result_message": "",
                        "crud.typeVehicles.filament.type_charger_id.search_message": "",
                        "crud.typeVehicles.filament.type_charger_id.label": "",
                        "crud.vehicles.itemTitle": "Vehicle",
                        "crud.vehicles.collectionTitle": "Vehicles",
                        "crud.vehicles.inputs.name.label": "Name",
                        "crud.vehicles.inputs.name.placeholder": "Name",
                        "crud.vehicles.filament.name.helper_text": "",
                        "crud.vehicles.filament.name.label": "",
                        "crud.vehicles.filament.name.description": "",
                        "crud.vehicles.inputs.brand_vehicle_id.label": "Brand",
                        "crud.vehicles.inputs.brand_vehicle_id.placeholder": "Brand vehicle id",
                        "crud.vehicles.filament.brand_vehicle_id.helper_text": "",
                        "crud.vehicles.filament.brand_vehicle_id.loading_message": "",
                        "crud.vehicles.filament.brand_vehicle_id.no_result_message": "",
                        "crud.vehicles.filament.brand_vehicle_id.search_message": "",
                        "crud.vehicles.filament.brand_vehicle_id.label": "",
                        "crud.vehicles.inputs.model_vehicle_id.label": "Model",
                        "crud.vehicles.inputs.model_vehicle_id.placeholder": "Model vehicle id",
                        "crud.vehicles.filament.model_vehicle_id.helper_text": "",
                        "crud.vehicles.filament.model_vehicle_id.loading_message": "",
                        "crud.vehicles.filament.model_vehicle_id.no_result_message": "",
                        "crud.vehicles.filament.model_vehicle_id.search_message": "",
                        "crud.vehicles.filament.model_vehicle_id.label": "",
                        "crud.vehicles.inputs.type_vehicle_id.label": "Type",
                        "crud.vehicles.inputs.type_vehicle_id.placeholder": "Type vehicle id",
                        "crud.vehicles.filament.type_vehicle_id.helper_text": "",
                        "crud.vehicles.filament.type_vehicle_id.loading_message": "",
                        "crud.vehicles.filament.type_vehicle_id.no_result_message": "",
                        "crud.vehicles.filament.type_vehicle_id.search_message": "",
                        "crud.vehicles.filament.type_vehicle_id.label": "",
                        "crud.vehicles.inputs.license_plate.label": "License Plate",
                        "crud.vehicles.inputs.license_plate.placeholder": "License plate",
                        "crud.vehicles.filament.license_plate.helper_text": "",
                        "crud.vehicles.filament.license_plate.label": "",
                        "crud.vehicles.filament.license_plate.description": "",
                        "crud.vehicles.inputs.ownership.label": "Ownership",
                        "crud.vehicles.inputs.ownership.placeholder": "Ownership",
                        "crud.vehicles.filament.ownership.helper_text": "",
                        "crud.vehicles.filament.ownership.label": "",
                        "crud.vehicles.inputs.status.label": "Status",
                        "crud.vehicles.inputs.status.placeholder": "Status",
                        "crud.vehicles.filament.status.helper_text": "",
                        "crud.vehicles.filament.status.label": "",
                        "crud.vehicles.filament.status.description": "",
                        "crud.chargers.itemTitle": "Charger",
                        "crud.chargers.collectionTitle": "Chargers",
                        "crud.chargers.inputs.charger_location_id.label": "Charger location",
                        "crud.chargers.inputs.charger_location_id.placeholder": "Charger location id",
                        "crud.chargers.filament.charger_location_id.helper_text": "",
                        "crud.chargers.filament.charger_location_id.loading_message": "",
                        "crud.chargers.filament.charger_location_id.no_result_message": "",
                        "crud.chargers.filament.charger_location_id.search_message": "",
                        "crud.chargers.filament.charger_location_id.label": "",
                        "crud.chargers.inputs.current_charger_id.label": "Current charger",
                        "crud.chargers.inputs.current_charger_id.placeholder": "Current charger id",
                        "crud.chargers.filament.current_charger_id.helper_text": "",
                        "crud.chargers.filament.current_charger_id.loading_message": "",
                        "crud.chargers.filament.current_charger_id.no_result_message": "",
                        "crud.chargers.filament.current_charger_id.search_message": "",
                        "crud.chargers.filament.current_charger_id.label": "",
                        "crud.chargers.inputs.type_charger_id.label": "Type charger",
                        "crud.chargers.inputs.type_charger_id.placeholder": "Type charger id",
                        "crud.chargers.filament.type_charger_id.helper_text": "",
                        "crud.chargers.filament.type_charger_id.loading_message": "",
                        "crud.chargers.filament.type_charger_id.no_result_message": "",
                        "crud.chargers.filament.type_charger_id.search_message": "",
                        "crud.chargers.filament.type_charger_id.label": "",
                        "crud.chargers.inputs.power_charger_id.label": "Power charger",
                        "crud.chargers.inputs.power_charger_id.placeholder": "Power charger id",
                        "crud.chargers.filament.power_charger_id.helper_text": "",
                        "crud.chargers.filament.power_charger_id.loading_message": "",
                        "crud.chargers.filament.power_charger_id.no_result_message": "",
                        "crud.chargers.filament.power_charger_id.search_message": "",
                        "crud.chargers.filament.power_charger_id.label": "",
                        "crud.chargers.inputs.unit.label": "Unit",
                        "crud.chargers.inputs.unit.placeholder": "Unit",
                        "crud.chargers.filament.unit.helper_text": "",
                        "crud.chargers.filament.unit.label": "",
                        "crud.chargers.filament.unit.description": "",
                        "crud.chargers.inputs.charger_cost.label": "Charger cost",
                        "crud.chargers.inputs.charger_cost.placeholder": "Charger cost",
                        "crud.chargers.filament.charger_cost.helper_text": "",
                        "crud.chargers.filament.charger_cost.label": "",
                        "crud.chargers.filament.charger_cost.description": "",
                        "crud.chargers.inputs.electric_lighting_tax.label": "Electric lighting tax",
                        "crud.chargers.inputs.electric_lighting_tax.placeholder": "Electric lighting tax",
                        "crud.chargers.filament.electric_lighting_tax.helper_text": "",
                        "crud.chargers.filament.electric_lighting_tax.label": "",
                        "crud.chargers.filament.electric_lighting_tax.description": "",
                        "crud.chargers.inputs.admin_cost.label": "Admin cost",
                        "crud.chargers.inputs.admin_cost.placeholder": "Admin cost",
                        "crud.chargers.filament.admin_cost.helper_text": "",
                        "crud.chargers.filament.admin_cost.label": "",
                        "crud.chargers.filament.admin_cost.description": "",
                        "crud.chargers.inputs.value_added_tax.label": "Value added tax",
                        "crud.chargers.inputs.value_added_tax.placeholder": "Value added tax",
                        "crud.chargers.filament.value_added_tax.helper_text": "",
                        "crud.chargers.filament.value_added_tax.label": "",
                        "crud.chargers.filament.value_added_tax.description": "",
                        "crud.chargers.inputs.status.label": "Status",
                        "crud.chargers.inputs.status.placeholder": "Status",
                        "crud.chargers.filament.status.helper_text": "",
                        "crud.chargers.filament.status.label": "",
                        "crud.chargers.filament.status.description": "",
                        "crud.chargers.inputs.user_id.label": "User",
                        "crud.chargers.inputs.user_id.placeholder": "User id",
                        "crud.chargers.filament.user_id.helper_text": "",
                        "crud.chargers.filament.user_id.loading_message": "",
                        "crud.chargers.filament.user_id.no_result_message": "",
                        "crud.chargers.filament.user_id.search_message": "",
                        "crud.chargers.filament.user_id.label": "",
                        "crud.powerChargers.itemTitle": "Power Charger",
                        "crud.powerChargers.collectionTitle": "Power Chargers",
                        "crud.powerChargers.inputs.name.label": "Name",
                        "crud.powerChargers.inputs.name.placeholder": "Name",
                        "crud.powerChargers.filament.name.helper_text": "",
                        "crud.powerChargers.filament.name.label": "",
                        "crud.powerChargers.filament.name.description": "",
                        "crud.powerChargers.inputs.type_charger_id.label": "Type charger id",
                        "crud.powerChargers.inputs.type_charger_id.placeholder": "Type charger id",
                        "crud.powerChargers.filament.type_charger_id.helper_text": "",
                        "crud.powerChargers.filament.type_charger_id.loading_message": "",
                        "crud.powerChargers.filament.type_charger_id.no_result_message": "",
                        "crud.powerChargers.filament.type_charger_id.search_message": "",
                        "crud.powerChargers.filament.type_charger_id.label": "",
                        "crud.currentChargers.itemTitle": "Current Charger",
                        "crud.currentChargers.collectionTitle": "Current Chargers",
                        "crud.currentChargers.inputs.name.label": "Name",
                        "crud.currentChargers.inputs.name.placeholder": "Name",
                        "crud.currentChargers.filament.name.helper_text": "",
                        "crud.currentChargers.filament.name.label": "",
                        "crud.currentChargers.filament.name.description": "",
                        "crud.typeChargers.itemTitle": "Type Charger",
                        "crud.typeChargers.collectionTitle": "Type Chargers",
                        "crud.typeChargers.inputs.name.label": "Name",
                        "crud.typeChargers.inputs.name.placeholder": "Name",
                        "crud.typeChargers.filament.name.helper_text": "",
                        "crud.typeChargers.filament.name.label": "",
                        "crud.typeChargers.filament.name.description": "",
                        "crud.typeChargers.inputs.current_charger_id.label": "Current charger",
                        "crud.typeChargers.inputs.current_charger_id.placeholder": "Current charger id",
                        "crud.typeChargers.filament.current_charger_id.helper_text": "",
                        "crud.typeChargers.filament.current_charger_id.loading_message": "",
                        "crud.typeChargers.filament.current_charger_id.no_result_message": "",
                        "crud.typeChargers.filament.current_charger_id.search_message": "",
                        "crud.typeChargers.filament.current_charger_id.label": "",
                        "crud.charges.itemTitle": "Charge",
                        "crud.charges.collectionTitle": "Charges",
                        "crud.charges.inputs.vehicle_id.label": "Vehicle",
                        "crud.charges.inputs.vehicle_id.placeholder": "Vehicle id",
                        "crud.charges.filament.vehicle_id.helper_text": "",
                        "crud.charges.filament.vehicle_id.loading_message": "",
                        "crud.charges.filament.vehicle_id.no_result_message": "",
                        "crud.charges.filament.vehicle_id.search_message": "",
                        "crud.charges.filament.vehicle_id.label": "",
                        "crud.charges.inputs.date.label": "Date",
                        "crud.charges.inputs.date.placeholder": "Date",
                        "crud.charges.filament.date.helper_text": "",
                        "crud.charges.filament.date.label": "",
                        "crud.charges.inputs.charger_location_id.label": "Charger location",
                        "crud.charges.inputs.charger_location_id.placeholder": "Charger location id",
                        "crud.charges.filament.charger_location_id.helper_text": "",
                        "crud.charges.filament.charger_location_id.loading_message": "",
                        "crud.charges.filament.charger_location_id.no_result_message": "",
                        "crud.charges.filament.charger_location_id.search_message": "",
                        "crud.charges.filament.charger_location_id.label": "",
                        "crud.charges.inputs.charger_id.label": "Charger",
                        "crud.charges.inputs.charger_id.placeholder": "Charger id",
                        "crud.charges.filament.charger_id.helper_text": "",
                        "crud.charges.filament.charger_id.label": "",
                        "crud.charges.filament.charger_id.description": "",
                        "crud.charges.inputs.km_now.label": "now",
                        "crud.charges.inputs.km_now.placeholder": "now",
                        "crud.charges.filament.km_now.helper_text": "",
                        "crud.charges.filament.km_now.label": "",
                        "crud.charges.filament.km_now.description": "",
                        "crud.charges.inputs.km_before.label": "before",
                        "crud.charges.inputs.km_before.placeholder": "before",
                        "crud.charges.filament.km_before.helper_text": "",
                        "crud.charges.filament.km_before.label": "",
                        "crud.charges.filament.km_before.description": "",
                        "crud.charges.inputs.start_charging_now.label": "Start charging now",
                        "crud.charges.inputs.start_charging_now.placeholder": "Start charging now",
                        "crud.charges.filament.start_charging_now.helper_text": "",
                        "crud.charges.filament.start_charging_now.label": "",
                        "crud.charges.filament.start_charging_now.description": "",
                        "crud.charges.inputs.finish_charging_now.label": "Finish charging now",
                        "crud.charges.inputs.finish_charging_now.placeholder": "Finish charging now",
                        "crud.charges.filament.finish_charging_now.helper_text": "",
                        "crud.charges.filament.finish_charging_now.label": "",
                        "crud.charges.filament.finish_charging_now.description": "",
                        "crud.charges.inputs.finish_charging_before.label": "Finish charging before",
                        "crud.charges.inputs.finish_charging_before.placeholder": "Finish charging before",
                        "crud.charges.filament.finish_charging_before.helper_text": "",
                        "crud.charges.filament.finish_charging_before.label": "",
                        "crud.charges.filament.finish_charging_before.description": "",
                        "crud.charges.inputs.parking.label": "Parking",
                        "crud.charges.inputs.parking.placeholder": "Parking",
                        "crud.charges.filament.parking.helper_text": "",
                        "crud.charges.filament.parking.label": "",
                        "crud.charges.filament.parking.description": "",
                        "crud.charges.inputs.kWh.label": "kWh",
                        "crud.charges.inputs.kWh.placeholder": "",
                        "crud.charges.filament.kWh.helper_text": "",
                        "crud.charges.filament.kWh.label": "",
                        "crud.charges.filament.kWh.description": "",
                        "crud.charges.inputs.street_lighting_tax.label": "Street lighting tax",
                        "crud.charges.inputs.street_lighting_tax.placeholder": "Street lighting tax",
                        "crud.charges.filament.street_lighting_tax.helper_text": "",
                        "crud.charges.filament.street_lighting_tax.label": "",
                        "crud.charges.filament.street_lighting_tax.description": "",
                        "crud.charges.inputs.value_added_tax.label": "Value added tax",
                        "crud.charges.inputs.value_added_tax.placeholder": "Value added tax",
                        "crud.charges.filament.value_added_tax.helper_text": "",
                        "crud.charges.filament.value_added_tax.label": "",
                        "crud.charges.filament.value_added_tax.description": "",
                        "crud.charges.inputs.admin_cost.label": "Admin cost",
                        "crud.charges.inputs.admin_cost.placeholder": "Admin cost",
                        "crud.charges.filament.admin_cost.helper_text": "",
                        "crud.charges.filament.admin_cost.label": "",
                        "crud.charges.filament.admin_cost.description": "",
                        "crud.charges.inputs.total_cost.label": "Total cost",
                        "crud.charges.inputs.total_cost.placeholder": "Total cost",
                        "crud.charges.filament.total_cost.helper_text": "",
                        "crud.charges.filament.total_cost.label": "",
                        "crud.charges.filament.total_cost.description": "",
                        "crud.charges.inputs.image.label": "Image",
                        "crud.charges.inputs.image.placeholder": "Image",
                        "crud.charges.filament.image.helper_text": "",
                        "crud.charges.filament.image.label": "",
                        "crud.stateOfHealths.itemTitle": "State Of Health",
                        "crud.stateOfHealths.collectionTitle": "State Of Healths",
                        "crud.stateOfHealths.inputs.image.label": "Image",
                        "crud.stateOfHealths.inputs.image.placeholder": "Image",
                        "crud.stateOfHealths.filament.image.helper_text": "",
                        "crud.stateOfHealths.filament.image.label": "",
                        "crud.stateOfHealths.inputs.vehicle_id.label": "Vehicle",
                        "crud.stateOfHealths.inputs.vehicle_id.placeholder": "Vehicle id",
                        "crud.stateOfHealths.filament.vehicle_id.helper_text": "",
                        "crud.stateOfHealths.filament.vehicle_id.loading_message": "",
                        "crud.stateOfHealths.filament.vehicle_id.no_result_message": "",
                        "crud.stateOfHealths.filament.vehicle_id.search_message": "",
                        "crud.stateOfHealths.filament.vehicle_id.label": "",
                        "crud.stateOfHealths.inputs.km.label": "km",
                        "crud.stateOfHealths.inputs.km.placeholder": "km",
                        "crud.stateOfHealths.filament.km.helper_text": "",
                        "crud.stateOfHealths.filament.km.label": "",
                        "crud.stateOfHealths.filament.km.description": "",
                        "crud.stateOfHealths.inputs.percentage.label": "Percentage",
                        "crud.stateOfHealths.inputs.percentage.placeholder": "Percentage",
                        "crud.stateOfHealths.filament.percentage.helper_text": "",
                        "crud.stateOfHealths.filament.percentage.label": "",
                        "crud.stateOfHealths.filament.percentage.description": "",
                        "crud.stateOfHealths.inputs.remaining_battery.label": "Remaining battery",
                        "crud.stateOfHealths.inputs.remaining_battery.placeholder": "Remaining battery",
                        "crud.stateOfHealths.filament.remaining_battery.helper_text": "",
                        "crud.stateOfHealths.filament.remaining_battery.label": "",
                        "crud.stateOfHealths.filament.remaining_battery.description": "",
                        "crud.stateOfHealths.inputs.user_id.label": "User",
                        "crud.stateOfHealths.inputs.user_id.placeholder": "User id",
                        "crud.stateOfHealths.filament.user_id.helper_text": "",
                        "crud.stateOfHealths.filament.user_id.loading_message": "",
                        "crud.stateOfHealths.filament.user_id.no_result_message": "",
                        "crud.stateOfHealths.filament.user_id.search_message": "",
                        "crud.stateOfHealths.filament.user_id.label": "",
                        "crud.vehicles.filament.status.loading_message": "",
                        "crud.vehicles.filament.status.no_result_message": "",
                        "crud.vehicles.filament.status.search_message": "",
                        "crud.chargerLocations.filament.status.loading_message": "",
                        "crud.chargerLocations.filament.status.no_result_message": "",
                        "crud.chargerLocations.filament.status.search_message": "",
                        "crud.chargerLocations.filament.location_on.loading_message": "",
                        "crud.chargerLocations.filament.location_on.no_result_message": "",
                        "crud.chargerLocations.filament.location_on.search_message": "",
                        "crud.providers.inputs.image.label": "Image",
                        "crud.providers.inputs.image.placeholder": "Image",
                        "crud.providers.filament.image.helper_text": "",
                        "crud.providers.filament.image.label": "",
                        "crud.providers.inputs.postal_code_id.label": "Postal code",
                        "crud.providers.inputs.postal_code_id.placeholder": "Postal code id",
                        "crud.providers.filament.postal_code_id.helper_text": "",
                        "crud.providers.filament.postal_code_id.loading_message": "",
                        "crud.providers.filament.postal_code_id.no_result_message": "",
                        "crud.providers.filament.postal_code_id.search_message": "",
                        "crud.providers.filament.postal_code_id.label": "",
                        "crud.providers.filament.status.loading_message": "",
                        "crud.providers.filament.status.no_result_message": "",
                        "crud.providers.filament.status.search_message": "",
                        "crud.typeVehicles.inputs.type_charger.label": "Type charger",
                        "crud.typeVehicles.inputs.type_charger.placeholder": "Type charger",
                        "crud.typeVehicles.filament.type_charger.helper_text": "",
                        "crud.typeVehicles.filament.type_charger.label": "",
                        "crud.typeVehicles.itemTitle": "Type Vehicle",
                        "crud.typeVehicles.collectionTitle": "Type Vehicles",
                        "crud.charges.inputs.user_id.label": "User",
                        "crud.charges.inputs.user_id.placeholder": "User id",
                        "crud.charges.filament.user_id.helper_text": "",
                        "crud.charges.filament.user_id.loading_message": "",
                        "crud.charges.filament.user_id.no_result_message": "",
                        "crud.charges.filament.user_id.search_message": "",
                        "crud.charges.filament.user_id.label": "",
                        "crud.charges.filament.charger_id.loading_message": "",
                        "crud.charges.filament.charger_id.no_result_message": "",
                        "crud.charges.filament.charger_id.search_message": "",
                        "crud.brandVehicles.inputs.image.label": "Image",
                        "crud.brandVehicles.inputs.image.placeholder": "Image",
                        "crud.brandVehicles.filament.image.helper_text": "",
                        "crud.brandVehicles.filament.image.label": "",
                        "crud.modelVehicles.inputs.image.label": "Image",
                        "crud.modelVehicles.inputs.image.placeholder": "Image",
                        "crud.modelVehicles.filament.image.helper_text": "",
                        "crud.modelVehicles.filament.image.label": "",
                        "crud.typeVehicles.filament.type_charger.loading_message": "",
                        "crud.typeVehicles.filament.type_charger.no_result_message": "",
                        "crud.typeVehicles.filament.type_charger.search_message": "",
                        "crud.providers.itemTitle": "Provider",
                        "crud.providers.collectionTitle": "Providers",
                        "crud.chargerLocations.inputs.address.label": "Address",
                        "crud.chargerLocations.inputs.address.placeholder": "Address",
                        "crud.chargerLocations.filament.address.helper_text": "",
                        "crud.chargerLocations.filament.address.label": "",
                        "crud.chargerLocations.filament.address.description": "",
                        "crud.users.itemTitle": "User",
                        "crud.users.collectionTitle": "Users",
                        "crud.users.inputs.name.label": "Name",
                        "crud.users.inputs.name.placeholder": "Name",
                        "crud.users.filament.name.helper_text": "",
                        "crud.users.filament.name.label": "",
                        "crud.users.filament.name.description": "",
                        "crud.users.inputs.email.label": "Email",
                        "crud.users.inputs.email.placeholder": "Email",
                        "crud.users.filament.email.helper_text": "",
                        "crud.users.filament.email.label": "",
                        "crud.users.filament.email.description": "",
                        "crud.users.inputs.password.label": "Password",
                        "crud.users.inputs.password.placeholder": "Password",
                        "crud.users.filament.password.helper_text": "",
                        "crud.users.filament.password.label": "",
                        "crud.users.filament.password.description": "",
                        "crud.discountHomeChargings.itemTitle": "Discount Home Charging",
                        "crud.discountHomeChargings.collectionTitle": "Discount Home Chargings",
                        "crud.discountHomeChargings.inputs.charger_location_id.label": "Charger location id",
                        "crud.discountHomeChargings.inputs.charger_location_id.placeholder": "Charger location id",
                        "crud.discountHomeChargings.filament.charger_location_id.helper_text": "",
                        "crud.discountHomeChargings.filament.charger_location_id.loading_message": "",
                        "crud.discountHomeChargings.filament.charger_location_id.no_result_message": "",
                        "crud.discountHomeChargings.filament.charger_location_id.search_message": "",
                        "crud.discountHomeChargings.filament.charger_location_id.label": "",
                        "crud.discountHomeChargings.inputs.month.label": "Month",
                        "crud.discountHomeChargings.inputs.month.placeholder": "Month",
                        "crud.discountHomeChargings.filament.month.helper_text": "",
                        "crud.discountHomeChargings.filament.month.label": "",
                        "crud.discountHomeChargings.inputs.total_kwh.label": "Total kwh",
                        "crud.discountHomeChargings.inputs.total_kwh.placeholder": "Total kwh",
                        "crud.discountHomeChargings.filament.total_kwh.helper_text": "",
                        "crud.discountHomeChargings.filament.total_kwh.label": "",
                        "crud.discountHomeChargings.filament.total_kwh.description": "",
                        "crud.discountHomeChargings.inputs.discount_kwh.label": "Discount kwh",
                        "crud.discountHomeChargings.inputs.discount_kwh.placeholder": "Discount kwh",
                        "crud.discountHomeChargings.filament.discount_kwh.helper_text": "",
                        "crud.discountHomeChargings.filament.discount_kwh.label": "",
                        "crud.discountHomeChargings.filament.discount_kwh.description": "",
                        "crud.discountHomeChargings.inputs.discount_total.label": "Discount total",
                        "crud.discountHomeChargings.inputs.discount_total.placeholder": "Discount total",
                        "crud.discountHomeChargings.filament.discount_total.helper_text": "",
                        "crud.discountHomeChargings.filament.discount_total.label": "",
                        "crud.discountHomeChargings.filament.discount_total.description": "",
                        "crud.discountHomeChargings.inputs.user_id.label": "User id",
                        "crud.discountHomeChargings.inputs.user_id.placeholder": "User id",
                        "crud.discountHomeChargings.filament.user_id.helper_text": "",
                        "crud.discountHomeChargings.filament.user_id.loading_message": "",
                        "crud.discountHomeChargings.filament.user_id.no_result_message": "",
                        "crud.discountHomeChargings.filament.user_id.search_message": "",
                        "crud.discountHomeChargings.filament.user_id.label": ""
                    }
                },
                "vthemeKeys": {
                    "default.delay": "opacity-75",
                    "table": "min-w-full divide-y divide-gray-200",
                    "table.container": "overflow-hidden border rounded-lg",
                    "table.head": "bg-gray-50",
                    "table.head.row": "text-gray-500",
                    "table.head.col": "px-5 py-3 text-xs font-medium text-left uppercase",
                    "table.body": "bg-white divide-y divide-gray-200 dark:divide-gray-700",
                    "table.body.row": "text-gray-800",
                    "table.body.col": "px-5 py-4 text-sm whitespace-nowrap",
                    "ui.button": "inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none",
                    "ui.input": "inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50",
                    "ui.input.checkbox": "",
                    "ui.label": "block mb-1.5 font-medium text-sm text-gray-700",
                    "ui.input.error": "text-sm text-red-600",
                    "ui.breadcrumbs.container": "flex justify-between py-1",
                    "ui.breadcrumbs.list": "inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0",
                    "ui.breadcrumbs.list.item": "",
                    "ui.breadcrumbs.list.item.link": "inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none",
                    "ui.breadcrumbs.separator": "w-5 h-5 text-gray-400/70",
                    "crud.index.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.table.head.col.extra": "cursor-pointer",
                    "crud.table.head.action-col": "px-5 py-3 text-xs font-medium text-right uppercase",
                    "crud.table.body.col.extra": "max-w-xs truncate",
                    "crud.table.body.action-col": "px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2",
                    "crud.action-link": "text-indigo-600 hover:text-indigo-700 cursor-pointer",
                    "crud.action-link-danger": "text-red-600 hover:text-red-700 cursor-pointer",
                    "crud.index.tools": "flex justify-between align-top py-4",
                    "crud.pagination.container": "mt-2",
                    "crud.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.header": "w-full text-gray-500 text-lg font-semibold py-4 uppercase",
                    "crud.form": "w-full mb-0",
                    "crud.form.container": "overflow-hidden border rounded-lg bg-white",
                    "crud.form.inputs.container": "p-6 space-y-3",
                    "crud.form.input.group": "w-full",
                    "crud.form.input.radio.group": "flex flex-wrap flex-col gap-2",
                    "crud.form.input.radio.box": "inline-flex justify-start gap-2",
                    "ui.input.radio": "!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500",
                    "crud.form.input.extra": "w-full",
                    "crud.form.input.image": "object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out",
                    "crud.form.input.image.button": "p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200",
                    "crud.form.input.file.name": "text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1",
                    "crud.form.buttons-container": "flex justify-between mt-4 border-t border-gray-50 p-4"
                },
                "vthemeCdn": "https://cdn.tailwindcss.com",
                "connectionFinished": true,
                "canIgnoreNextSchemaSourceChanges": false,
                "lastReadSchemaDataHash": "a92c6c12771bf23274aaf2b664f2a6a7",
                "currentZoom": 80,
                "currentSchemaError": null,
                "currentSchemaErrorStack": null,
                "filesQueueStatus": "idle",
                "currentRenderedFilesPaths": [
                    "/lang/en//navigation.php",
                    "/lang/en//crud.php",
                    "resources/views/components/ui//toast.blade.php",
                    "resources/views/components/ui//action/danger.blade.php",
                    "resources/views/components/ui//action/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/link.blade.php",
                    "resources/views/components/ui//breadcrumbs/separator.blade.php",
                    "resources/views/components/ui//button/danger.blade.php",
                    "resources/views/components/ui//button/index.blade.php",
                    "resources/views/components/ui//card/body.blade.php",
                    "resources/views/components/ui//card/header.blade.php",
                    "resources/views/components/ui//card/index.blade.php",
                    "resources/views/components/ui//card/title.blade.php",
                    "resources/views/components/ui//container/table.blade.php",
                    "resources/views/components/ui//input/checkbox.blade.php",
                    "resources/views/components/ui//input/color.blade.php",
                    "resources/views/components/ui//input/date.blade.php",
                    "resources/views/components/ui//input/date-time.blade.php",
                    "resources/views/components/ui//input/email.blade.php",
                    "resources/views/components/ui//input/error.blade.php",
                    "resources/views/components/ui//input/file.blade.php",
                    "resources/views/components/ui//input/hidden.blade.php",
                    "resources/views/components/ui//input/image.blade.php",
                    "resources/views/components/ui//input/index.blade.php",
                    "resources/views/components/ui//input/number.blade.php",
                    "resources/views/components/ui//input/password.blade.php",
                    "resources/views/components/ui//input/radio.blade.php",
                    "resources/views/components/ui//input/select.blade.php",
                    "resources/views/components/ui//input/text.blade.php",
                    "resources/views/components/ui//input/textarea.blade.php",
                    "resources/views/components/ui//input/time.blade.php",
                    "resources/views/components/ui//input/url.blade.php",
                    "resources/views/components/ui//label/index.blade.php",
                    "resources/views/components/ui//modal/confirm.blade.php",
                    "resources/views/components/ui//modal/index.blade.php",
                    "resources/views/components/ui//table/action-column.blade.php",
                    "resources/views/components/ui//table/action-header.blade.php",
                    "resources/views/components/ui//table/column.blade.php",
                    "resources/views/components/ui//table/header.blade.php",
                    "resources/views/components/ui//table/image.blade.php",
                    "resources/views/components/ui//table/index.blade.php",
                    "resources/views/components/ui//table/row.blade.php",
                    "resources/views/partials/app-menu.blade.php",
                    "resources/views/partials/app-responsive-menu.blade.php",
                    "routes/app.php",
                    "routes/app-api.php",
                    "bootstrap/app.php",
                    "database/factories/UserFactory.php",
                    "database/seeders/UserSeeder.php",
                    "app/Policies/UserPolicy.php",
                    "database/factories/ProvinceFactory.php",
                    "database/seeders/ProvinceSeeder.php",
                    "app/Policies/ProvincePolicy.php",
                    "database/factories/CityFactory.php",
                    "database/seeders/CitySeeder.php",
                    "app/Policies/CityPolicy.php",
                    "database/factories/DistrictFactory.php",
                    "database/seeders/DistrictSeeder.php",
                    "app/Policies/DistrictPolicy.php",
                    "database/factories/SubdistrictFactory.php",
                    "database/seeders/SubdistrictSeeder.php",
                    "app/Policies/SubdistrictPolicy.php",
                    "database/factories/PostalCodeFactory.php",
                    "database/seeders/PostalCodeSeeder.php",
                    "app/Policies/PostalCodePolicy.php",
                    "database/factories/ProviderFactory.php",
                    "database/seeders/ProviderSeeder.php",
                    "app/Policies/ProviderPolicy.php",
                    "database/factories/ChargerLocationFactory.php",
                    "database/seeders/ChargerLocationSeeder.php",
                    "app/Policies/ChargerLocationPolicy.php",
                    "database/factories/PaymentFactory.php",
                    "database/seeders/PaymentSeeder.php",
                    "app/Policies/PaymentPolicy.php",
                    "database/factories/BrandVehicleFactory.php",
                    "database/seeders/BrandVehicleSeeder.php",
                    "app/Policies/BrandVehiclePolicy.php",
                    "database/factories/ModelVehicleFactory.php",
                    "database/seeders/ModelVehicleSeeder.php",
                    "app/Policies/ModelVehiclePolicy.php",
                    "database/factories/TypeVehicleFactory.php",
                    "database/seeders/TypeVehicleSeeder.php",
                    "app/Policies/TypeVehiclePolicy.php",
                    "database/factories/VehicleFactory.php",
                    "database/seeders/VehicleSeeder.php",
                    "app/Policies/VehiclePolicy.php",
                    "database/factories/ChargerFactory.php",
                    "database/seeders/ChargerSeeder.php",
                    "app/Policies/ChargerPolicy.php",
                    "database/factories/PowerChargerFactory.php",
                    "database/seeders/PowerChargerSeeder.php",
                    "app/Policies/PowerChargerPolicy.php",
                    "database/factories/CurrentChargerFactory.php",
                    "database/seeders/CurrentChargerSeeder.php",
                    "app/Policies/CurrentChargerPolicy.php",
                    "database/factories/TypeChargerFactory.php",
                    "database/seeders/TypeChargerSeeder.php",
                    "app/Policies/TypeChargerPolicy.php",
                    "database/factories/ChargeFactory.php",
                    "database/seeders/ChargeSeeder.php",
                    "app/Policies/ChargePolicy.php",
                    "database/factories/StateOfHealthFactory.php",
                    "database/seeders/StateOfHealthSeeder.php",
                    "app/Policies/StateOfHealthPolicy.php",
                    "database/factories/DiscountHomeChargingFactory.php",
                    "database/seeders/DiscountHomeChargingSeeder.php",
                    "app/Policies/DiscountHomeChargingPolicy.php",
                    "app/Http/Controllers/Api/AuthController.php",
                    "app/Http/Requests/ChargeStoreRequest.php",
                    "app/Http/Requests/ChargeUpdateRequest.php",
                    "app/Http/Resources/ChargeCollection.php",
                    "app/Http/Resources/ChargeResource.php",
                    "app/Http/Controllers/Api/ChargeController.php",
                    "tests/Feature/Api/ChargeTest.php",
                    "app/Http/Requests/VehicleStoreRequest.php",
                    "app/Http/Requests/VehicleUpdateRequest.php",
                    "app/Http/Resources/VehicleCollection.php",
                    "app/Http/Resources/VehicleResource.php",
                    "app/Http/Controllers/Api/VehicleController.php",
                    "tests/Feature/Api/VehicleTest.php",
                    "app/Http/Resources/ChargeResource.php",
                    "app/Http/Resources/StateOfHealthResource.php",
                    "app/Http/Requests/ChargerLocationStoreRequest.php",
                    "app/Http/Resources/ChargeCollection.php",
                    "app/Http/Resources/StateOfHealthCollection.php",
                    "app/Http/Requests/ChargerLocationUpdateRequest.php",
                    "app/Http/Controllers/Api/VehiclesChargeController.php",
                    "app/Http/Controllers/Api/VehiclesStateOfHealthController.php",
                    "app/Http/Resources/ChargerLocationCollection.php",
                    "tests/Feature/Api/VehicleChargesTest.php",
                    "tests/Feature/Api/VehicleStateOfHealthsTest.php",
                    "app/Http/Resources/ChargerLocationResource.php",
                    "app/Http/Controllers/Api/ChargerLocationController.php",
                    "tests/Feature/Api/ChargerLocationTest.php",
                    "app/Http/Resources/ChargerResource.php",
                    "app/Http/Resources/ChargeResource.php",
                    "app/Http/Resources/DiscountHomeChargingResource.php",
                    "app/Http/Requests/ChargerStoreRequest.php"
                ]
            },
            "__tableData": {
                "count": 1,
                "lastPrimaryKey": 1,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                18,
                                19,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37
                            ],
                            "models.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                9,
                                10,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                25,
                                32,
                                249
                            ],
                            "app_sections.projectId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "schema_sections.projectId": [
                                1,
                                2,
                                3
                            ],
                            "navs.projectId": [
                                1,
                                2
                            ],
                            "relationships.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                41,
                                42,
                                43,
                                44,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                73,
                                74,
                                75,
                                76,
                                81,
                                82,
                                83,
                                84,
                                112,
                                113,
                                114,
                                115,
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                167,
                                168,
                                169,
                                170,
                                366,
                                367,
                                380,
                                381,
                                382,
                                383
                            ],
                            "cruds.projectId": [
                                4,
                                6,
                                7,
                                9,
                                11,
                                12,
                                13,
                                14,
                                16,
                                17,
                                18,
                                19,
                                21,
                                22,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34
                            ],
                            "renderable_files.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                88,
                                89,
                                90,
                                91,
                                92,
                                93,
                                94,
                                95,
                                96,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                119,
                                120,
                                121,
                                122,
                                123,
                                124,
                                125,
                                126,
                                127,
                                128,
                                129,
                                130,
                                131,
                                132,
                                133,
                                134,
                                135,
                                136,
                                137,
                                138,
                                144,
                                145,
                                146,
                                147,
                                148,
                                149,
                                150,
                                151,
                                152,
                                153,
                                154,
                                155,
                                156,
                                157,
                                158,
                                159,
                                160,
                                161,
                                162,
                                163,
                                164,
                                165,
                                166,
                                167,
                                168,
                                169,
                                170,
                                171,
                                172,
                                173,
                                174,
                                175,
                                176,
                                177,
                                178,
                                179,
                                180,
                                181,
                                182,
                                183,
                                184,
                                185,
                                186,
                                187,
                                188,
                                189,
                                190,
                                191,
                                196,
                                197,
                                198,
                                199,
                                200,
                                201,
                                202,
                                203,
                                204,
                                205,
                                206,
                                207,
                                208,
                                209,
                                210,
                                211,
                                212,
                                213,
                                214,
                                215,
                                216,
                                217,
                                218,
                                219,
                                220,
                                221,
                                222,
                                223,
                                224,
                                225,
                                226,
                                227,
                                228,
                                229,
                                230,
                                231
                            ],
                            "routes.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                20,
                                21,
                                24,
                                25,
                                26,
                                27,
                                28,
                                34,
                                35,
                                36,
                                37,
                                38
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            }
        },
        "tables": {
            "item_1": {
                "projectId": 1,
                "name": "cache",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "__tableData": {
                "count": 34,
                "lastPrimaryKey": 37,
                "index": {
                    "1": {
                        "hasMany": {
                            "columns.tableId": [
                                1,
                                2,
                                3
                            ],
                            "indices.tableId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "columns.tableId": [
                                4,
                                5,
                                6
                            ],
                            "indices.tableId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "columns.tableId": [
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "columns.tableId": [
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23
                            ],
                            "indices.tableId": [
                                3
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "columns.tableId": [
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "columns.tableId": [
                                31,
                                32,
                                33
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "columns.tableId": [
                                34,
                                35,
                                36
                            ],
                            "indices.tableId": [
                                4
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "columns.tableId": [
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46
                            ],
                            "indices.tableId": [
                                5
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "columns.tableId": [
                                47,
                                48,
                                49,
                                50,
                                51,
                                52
                            ],
                            "indices.tableId": [
                                6
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "columns.tableId": [
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65
                            ],
                            "models.tableId": [
                                1
                            ],
                            "indices.onTableId": [
                                21,
                                48,
                                56,
                                57,
                                76
                            ],
                            "cruds.tableId": [
                                33
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "columns.tableId": [
                                66,
                                81
                            ],
                            "models.tableId": [
                                2
                            ],
                            "indices.onTableId": [
                                7,
                                10,
                                16,
                                51
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "columns.tableId": [
                                69,
                                82,
                                85
                            ],
                            "models.tableId": [
                                3
                            ],
                            "indices.tableId": [
                                7
                            ],
                            "indices.onTableId": [
                                8,
                                11,
                                17,
                                52
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "columns.tableId": [
                                72,
                                83,
                                86
                            ],
                            "models.tableId": [
                                4
                            ],
                            "indices.tableId": [
                                8
                            ],
                            "indices.onTableId": [
                                9,
                                12,
                                18,
                                53
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "columns.tableId": [
                                75,
                                84,
                                87
                            ],
                            "models.tableId": [
                                5
                            ],
                            "indices.tableId": [
                                9
                            ],
                            "indices.onTableId": [
                                13,
                                19,
                                54
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "columns.tableId": [
                                78,
                                88,
                                89,
                                90,
                                91,
                                92
                            ],
                            "models.tableId": [
                                6
                            ],
                            "indices.tableId": [
                                10,
                                11,
                                12,
                                13
                            ],
                            "indices.onTableId": [
                                20,
                                55
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "columns.tableId": [
                                102,
                                103,
                                104,
                                105,
                                106,
                                238,
                                239,
                                240,
                                241,
                                242,
                                243,
                                244,
                                245
                            ],
                            "models.tableId": [
                                9
                            ],
                            "indices.tableId": [
                                51,
                                52,
                                53,
                                54,
                                55,
                                75
                            ],
                            "indices.onTableId": [
                                15
                            ],
                            "cruds.tableId": [
                                32
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "columns.tableId": [
                                109,
                                110,
                                111,
                                112,
                                113,
                                115,
                                116,
                                117,
                                118,
                                119,
                                120,
                                122,
                                124,
                                125,
                                126,
                                127,
                                128,
                                129,
                                271,
                                274
                            ],
                            "models.tableId": [
                                10
                            ],
                            "indices.tableId": [
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                70
                            ],
                            "indices.onTableId": [
                                41,
                                44,
                                77
                            ],
                            "cruds.tableId": [
                                4,
                                21
                            ]
                        }
                    },
                    "21": {
                        "hasMany": {
                            "columns.tableId": [
                                140,
                                141,
                                142,
                                143,
                                233
                            ],
                            "models.tableId": [
                                12
                            ],
                            "indices.onTableId": [],
                            "cruds.tableId": []
                        }
                    },
                    "22": {
                        "hasMany": {
                            "columns.tableId": [
                                145,
                                146,
                                147,
                                148,
                                251
                            ],
                            "models.tableId": [
                                13
                            ],
                            "indices.onTableId": [
                                27,
                                30
                            ],
                            "cruds.tableId": [
                                6
                            ]
                        }
                    },
                    "23": {
                        "hasMany": {
                            "columns.tableId": [
                                149,
                                150,
                                151,
                                152,
                                157,
                                252
                            ],
                            "models.tableId": [
                                14
                            ],
                            "indices.tableId": [
                                27
                            ],
                            "indices.onTableId": [
                                28,
                                31
                            ],
                            "cruds.tableId": [
                                7,
                                30
                            ]
                        }
                    },
                    "24": {
                        "hasMany": {
                            "columns.tableId": [
                                153,
                                154,
                                155,
                                156,
                                158,
                                221,
                                247
                            ],
                            "models.tableId": [
                                15
                            ],
                            "indices.tableId": [
                                28
                            ],
                            "indices.onTableId": [
                                32
                            ],
                            "cruds.tableId": [
                                28,
                                31
                            ]
                        }
                    },
                    "25": {
                        "hasMany": {
                            "columns.tableId": [
                                159,
                                160,
                                161,
                                163,
                                164,
                                165,
                                166,
                                168,
                                169,
                                234,
                                248,
                                276
                            ],
                            "models.tableId": [
                                16
                            ],
                            "indices.tableId": [
                                30,
                                31,
                                32,
                                56,
                                74
                            ],
                            "indices.onTableId": [
                                43,
                                47
                            ],
                            "cruds.tableId": [
                                9,
                                17
                            ]
                        }
                    },
                    "26": {
                        "hasMany": {
                            "columns.tableId": [
                                170,
                                171,
                                172,
                                190,
                                191,
                                192,
                                193,
                                194,
                                273
                            ],
                            "models.tableId": [
                                17
                            ],
                            "indices.tableId": [
                                38,
                                39,
                                40,
                                41,
                                71
                            ],
                            "indices.onTableId": [
                                45
                            ],
                            "cruds.tableId": [
                                22,
                                27
                            ]
                        }
                    },
                    "27": {
                        "hasMany": {
                            "columns.tableId": [
                                176,
                                177,
                                178,
                                187,
                                189
                            ],
                            "models.tableId": [
                                18
                            ],
                            "indices.tableId": [
                                37
                            ],
                            "indices.onTableId": [
                                40
                            ],
                            "cruds.tableId": [
                                11
                            ]
                        }
                    },
                    "28": {
                        "hasMany": {
                            "columns.tableId": [
                                179,
                                180,
                                181,
                                185
                            ],
                            "models.tableId": [
                                19
                            ],
                            "indices.onTableId": [
                                36,
                                38
                            ],
                            "cruds.tableId": [
                                12
                            ]
                        }
                    },
                    "29": {
                        "hasMany": {
                            "columns.tableId": [
                                182,
                                183,
                                184,
                                186,
                                188
                            ],
                            "models.tableId": [
                                20
                            ],
                            "indices.tableId": [
                                36
                            ],
                            "indices.onTableId": [
                                37,
                                39
                            ],
                            "cruds.tableId": [
                                13
                            ]
                        }
                    },
                    "30": {
                        "hasMany": {
                            "columns.tableId": [
                                201,
                                202,
                                203,
                                204,
                                205,
                                207,
                                208,
                                209,
                                210,
                                211,
                                212,
                                213,
                                214,
                                215,
                                216,
                                218,
                                219,
                                220,
                                227,
                                249,
                                277
                            ],
                            "models.tableId": [
                                25
                            ],
                            "indices.tableId": [
                                43,
                                44,
                                45,
                                57,
                                72
                            ],
                            "cruds.tableId": [
                                14,
                                16,
                                18
                            ]
                        }
                    },
                    "31": {
                        "hasMany": {
                            "columns.tableId": [
                                223,
                                224,
                                225,
                                226,
                                228,
                                229,
                                230,
                                231,
                                232,
                                272,
                                275
                            ],
                            "models.tableId": [
                                32
                            ],
                            "indices.tableId": [
                                47,
                                48,
                                73
                            ],
                            "cruds.tableId": [
                                19,
                                29
                            ]
                        }
                    },
                    "32": {
                        "hasMany": {
                            "columns.tableId": [
                                253,
                                254,
                                255
                            ],
                            "indices.tableId": [
                                59,
                                60,
                                61
                            ]
                        }
                    },
                    "33": {
                        "hasMany": {
                            "columns.tableId": [
                                256,
                                257,
                                258
                            ],
                            "indices.tableId": [
                                62,
                                63,
                                64
                            ]
                        }
                    },
                    "34": {
                        "hasMany": {
                            "columns.tableId": [
                                259,
                                260,
                                261,
                                262,
                                263
                            ],
                            "indices.onTableId": [
                                61,
                                68
                            ],
                            "indices.tableId": [
                                65
                            ]
                        }
                    },
                    "35": {
                        "hasMany": {
                            "columns.tableId": [
                                264,
                                265
                            ],
                            "indices.tableId": [
                                66,
                                67,
                                68
                            ]
                        }
                    },
                    "36": {
                        "hasMany": {
                            "columns.tableId": [
                                266,
                                267,
                                268,
                                269,
                                270
                            ],
                            "indices.onTableId": [
                                64,
                                67
                            ],
                            "indices.tableId": [
                                69
                            ]
                        }
                    },
                    "37": {
                        "hasMany": {
                            "columns.tableId": [
                                280,
                                281,
                                282,
                                283,
                                284,
                                285,
                                286,
                                287,
                                288
                            ],
                            "models.tableId": [
                                249
                            ],
                            "indices.tableId": [
                                76,
                                77
                            ],
                            "cruds.tableId": [
                                34
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "cache_locks",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache_locks",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_3": {
                "projectId": 1,
                "name": "failed_jobs",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "failed_jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 3,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_4": {
                "projectId": 1,
                "name": "job_batches",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "job_batches",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 4,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_5": {
                "projectId": 1,
                "name": "jobs",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 5,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_6": {
                "projectId": 1,
                "name": "migrations",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "migrations",
                    "oldNames": [],
                    "migrations": []
                },
                "id": 6,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_7": {
                "projectId": 1,
                "name": "password_reset_tokens",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "password_reset_tokens",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 7,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_8": {
                "projectId": 1,
                "name": "personal_access_tokens",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_013946_create_personal_access_tokens_table.php",
                        "relativePath": "/database/migrations/2024_07_29_013946_create_personal_access_tokens_table.php",
                        "migrationName": "2024_07_29_013946_create_personal_access_tokens_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_013946",
                        "createdTables": [
                            "personal_access_tokens"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "personal_access_tokens",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_013946_create_personal_access_tokens_table.php",
                            "relativePath": "/database/migrations/2024_07_29_013946_create_personal_access_tokens_table.php",
                            "migrationName": "2024_07_29_013946_create_personal_access_tokens_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_013946",
                            "createdTables": [
                                "personal_access_tokens"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 8,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_9": {
                "projectId": 1,
                "name": "sessions",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "sessions",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 9,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_10": {
                "projectId": 1,
                "name": "users",
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    },
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_013937_add_two_factor_columns_to_users_table.php",
                        "relativePath": "/database/migrations/2024_07_29_013937_add_two_factor_columns_to_users_table.php",
                        "migrationName": "2024_07_29_013937_add_two_factor_columns_to_users_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_013937",
                        "createdTables": [],
                        "changedTables": [
                            "users"
                        ]
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "users",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        },
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_013937_add_two_factor_columns_to_users_table.php",
                            "relativePath": "/database/migrations/2024_07_29_013937_add_two_factor_columns_to_users_table.php",
                            "migrationName": "2024_07_29_013937_add_two_factor_columns_to_users_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_013937",
                            "createdTables": [],
                            "changedTables": [
                                "users"
                            ]
                        }
                    ]
                },
                "id": 10,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 1,
                "removed": false
            },
            "item_11": {
                "projectId": 1,
                "sectionId": 1,
                "name": "provinces",
                "createdFromInterface": false,
                "id": 11,
                "createdAt": "2024-07-29 10:35:13",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-1399.75",
                "positionY": "403",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033805_001_create_provinces_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033805_001_create_provinces_table.php",
                        "migrationName": "2024_07_29_033805_001_create_provinces_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033805",
                        "createdTables": [
                            "provinces"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "provinces",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033805_001_create_provinces_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033805_001_create_provinces_table.php",
                            "migrationName": "2024_07_29_033805_001_create_provinces_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033805",
                            "createdTables": [
                                "provinces"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_12": {
                "projectId": 1,
                "sectionId": 1,
                "name": "cities",
                "createdFromInterface": false,
                "id": 12,
                "createdAt": "2024-07-29 10:35:22",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-951.333",
                "positionY": "472.667",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033805_002_create_cities_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033805_002_create_cities_table.php",
                        "migrationName": "2024_07_29_033805_002_create_cities_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033805",
                        "createdTables": [
                            "cities"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "cities",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033805_002_create_cities_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033805_002_create_cities_table.php",
                            "migrationName": "2024_07_29_033805_002_create_cities_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033805",
                            "createdTables": [
                                "cities"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_13": {
                "projectId": 1,
                "sectionId": 1,
                "name": "districts",
                "createdFromInterface": false,
                "id": 13,
                "createdAt": "2024-07-29 10:35:41",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-485.333",
                "positionY": "565",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033805_003_create_districts_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033805_003_create_districts_table.php",
                        "migrationName": "2024_07_29_033805_003_create_districts_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033805",
                        "createdTables": [
                            "districts"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "districts",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033805_003_create_districts_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033805_003_create_districts_table.php",
                            "migrationName": "2024_07_29_033805_003_create_districts_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033805",
                            "createdTables": [
                                "districts"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_14": {
                "projectId": 1,
                "sectionId": 1,
                "name": "subdistricts",
                "createdFromInterface": false,
                "id": 14,
                "createdAt": "2024-07-29 10:35:52",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-34",
                "positionY": "663",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_004_create_subdistricts_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033806_004_create_subdistricts_table.php",
                        "migrationName": "2024_07_29_033806_004_create_subdistricts_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033806",
                        "createdTables": [
                            "subdistricts"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "subdistricts",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_004_create_subdistricts_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033806_004_create_subdistricts_table.php",
                            "migrationName": "2024_07_29_033806_004_create_subdistricts_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033806",
                            "createdTables": [
                                "subdistricts"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_15": {
                "projectId": 1,
                "sectionId": 1,
                "name": "postal_codes",
                "createdFromInterface": false,
                "id": 15,
                "createdAt": "2024-07-29 10:36:07",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "425.667",
                "positionY": "778.333",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_005_create_postal_codes_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033806_005_create_postal_codes_table.php",
                        "migrationName": "2024_07_29_033806_005_create_postal_codes_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033806",
                        "createdTables": [
                            "postal_codes"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "postal_codes",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_005_create_postal_codes_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033806_005_create_postal_codes_table.php",
                            "migrationName": "2024_07_29_033806_005_create_postal_codes_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033806",
                            "createdTables": [
                                "postal_codes"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_18": {
                "projectId": 1,
                "sectionId": 1,
                "name": "providers",
                "createdFromInterface": false,
                "id": 18,
                "createdAt": "2024-07-29 10:41:24",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-1943",
                "positionY": "-278",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_034203_002_create_providers_table.php",
                        "relativePath": "/database/migrations/2024_07_29_034203_002_create_providers_table.php",
                        "migrationName": "2024_07_29_034203_002_create_providers_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_034203",
                        "createdTables": [
                            "providers"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "providers",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_034203_002_create_providers_table.php",
                            "relativePath": "/database/migrations/2024_07_29_034203_002_create_providers_table.php",
                            "migrationName": "2024_07_29_034203_002_create_providers_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_034203",
                            "createdTables": [
                                "providers"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_19": {
                "projectId": 1,
                "sectionId": 1,
                "name": "charger_locations",
                "createdFromInterface": false,
                "id": 19,
                "createdAt": "2024-07-29 10:45:50",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-1842",
                "positionY": "553",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_035303_001_create_charger_locations_table.php",
                        "relativePath": "/database/migrations/2024_07_29_035303_001_create_charger_locations_table.php",
                        "migrationName": "2024_07_29_035303_001_create_charger_locations_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_035303",
                        "createdTables": [
                            "charger_locations"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "charger_locations",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_035303_001_create_charger_locations_table.php",
                            "relativePath": "/database/migrations/2024_07_29_035303_001_create_charger_locations_table.php",
                            "migrationName": "2024_07_29_035303_001_create_charger_locations_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_035303",
                            "createdTables": [
                                "charger_locations"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_21": {
                "projectId": 1,
                "sectionId": 1,
                "name": "payments",
                "createdFromInterface": false,
                "id": 21,
                "createdAt": "2024-07-29 10:52:25",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-2348.33",
                "positionY": "-411",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_28_035304_003_create_payments_table.php",
                        "relativePath": "/database/migrations/2024_07_28_035304_003_create_payments_table.php",
                        "migrationName": "2024_07_28_035304_003_create_payments_table",
                        "datePrefix": "2024_07_28",
                        "fullPrefix": "2024_07_28_035304",
                        "createdTables": [
                            "payments"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "payments",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_28_035304_003_create_payments_table.php",
                            "relativePath": "/database/migrations/2024_07_28_035304_003_create_payments_table.php",
                            "migrationName": "2024_07_28_035304_003_create_payments_table",
                            "datePrefix": "2024_07_28",
                            "fullPrefix": "2024_07_28_035304",
                            "createdTables": [
                                "payments"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_22": {
                "projectId": 1,
                "sectionId": 1,
                "name": "brand_vehicles",
                "createdFromInterface": false,
                "id": 22,
                "createdAt": "2024-07-29 10:58:31",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-1394.67",
                "positionY": "-558.667",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_008_create_brand_vehicles_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033806_008_create_brand_vehicles_table.php",
                        "migrationName": "2024_07_29_033806_008_create_brand_vehicles_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033806",
                        "createdTables": [
                            "brand_vehicles"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "brand_vehicles",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_008_create_brand_vehicles_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033806_008_create_brand_vehicles_table.php",
                            "migrationName": "2024_07_29_033806_008_create_brand_vehicles_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033806",
                            "createdTables": [
                                "brand_vehicles"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_23": {
                "projectId": 1,
                "sectionId": 1,
                "name": "model_vehicles",
                "createdFromInterface": false,
                "id": 23,
                "createdAt": "2024-07-29 10:59:45",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-980.333",
                "positionY": "-452.333",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_009_create_model_vehicles_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033806_009_create_model_vehicles_table.php",
                        "migrationName": "2024_07_29_033806_009_create_model_vehicles_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033806",
                        "createdTables": [
                            "model_vehicles"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "model_vehicles",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_009_create_model_vehicles_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033806_009_create_model_vehicles_table.php",
                            "migrationName": "2024_07_29_033806_009_create_model_vehicles_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033806",
                            "createdTables": [
                                "model_vehicles"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_24": {
                "projectId": 1,
                "sectionId": 1,
                "name": "type_vehicles",
                "createdFromInterface": false,
                "id": 24,
                "createdAt": "2024-07-29 11:00:01",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-560.667",
                "positionY": "-348.667",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_010_create_type_vehicles_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033806_010_create_type_vehicles_table.php",
                        "migrationName": "2024_07_29_033806_010_create_type_vehicles_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033806",
                        "createdTables": [
                            "type_vehicles"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "type_vehicles",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_010_create_type_vehicles_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033806_010_create_type_vehicles_table.php",
                            "migrationName": "2024_07_29_033806_010_create_type_vehicles_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033806",
                            "createdTables": [
                                "type_vehicles"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_25": {
                "projectId": 1,
                "sectionId": 1,
                "name": "vehicles",
                "createdFromInterface": false,
                "id": 25,
                "createdAt": "2024-07-29 11:01:09",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-1887",
                "positionY": "-931",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_041640_006_create_vehicles_table.php",
                        "relativePath": "/database/migrations/2024_07_29_041640_006_create_vehicles_table.php",
                        "migrationName": "2024_07_29_041640_006_create_vehicles_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_041640",
                        "createdTables": [
                            "vehicles"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "vehicles",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_041640_006_create_vehicles_table.php",
                            "relativePath": "/database/migrations/2024_07_29_041640_006_create_vehicles_table.php",
                            "migrationName": "2024_07_29_041640_006_create_vehicles_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_041640",
                            "createdTables": [
                                "vehicles"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_26": {
                "projectId": 1,
                "sectionId": 1,
                "name": "chargers",
                "createdFromInterface": false,
                "id": 26,
                "createdAt": "2024-07-29 11:06:06",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-2926.67",
                "positionY": "691.667",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_041640_009_create_chargers_table.php",
                        "relativePath": "/database/migrations/2024_07_29_041640_009_create_chargers_table.php",
                        "migrationName": "2024_07_29_041640_009_create_chargers_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_041640",
                        "createdTables": [
                            "chargers"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "chargers",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_041640_009_create_chargers_table.php",
                            "relativePath": "/database/migrations/2024_07_29_041640_009_create_chargers_table.php",
                            "migrationName": "2024_07_29_041640_009_create_chargers_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_041640",
                            "createdTables": [
                                "chargers"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_27": {
                "projectId": 1,
                "sectionId": 1,
                "name": "power_chargers",
                "createdFromInterface": false,
                "id": 27,
                "createdAt": "2024-07-29 11:14:19",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-2455",
                "positionY": "386.667",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_041640_008_create_power_chargers_table.php",
                        "relativePath": "/database/migrations/2024_07_29_041640_008_create_power_chargers_table.php",
                        "migrationName": "2024_07_29_041640_008_create_power_chargers_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_041640",
                        "createdTables": [
                            "power_chargers"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "power_chargers",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_041640_008_create_power_chargers_table.php",
                            "relativePath": "/database/migrations/2024_07_29_041640_008_create_power_chargers_table.php",
                            "migrationName": "2024_07_29_041640_008_create_power_chargers_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_041640",
                            "createdTables": [
                                "power_chargers"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_28": {
                "projectId": 1,
                "sectionId": 1,
                "name": "current_chargers",
                "createdFromInterface": false,
                "id": 28,
                "createdAt": "2024-07-29 11:14:50",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-3340",
                "positionY": "165.667",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_006_create_current_chargers_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033806_006_create_current_chargers_table.php",
                        "migrationName": "2024_07_29_033806_006_create_current_chargers_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033806",
                        "createdTables": [
                            "current_chargers"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "current_chargers",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_006_create_current_chargers_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033806_006_create_current_chargers_table.php",
                            "migrationName": "2024_07_29_033806_006_create_current_chargers_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033806",
                            "createdTables": [
                                "current_chargers"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_29": {
                "projectId": 1,
                "sectionId": 1,
                "name": "type_chargers",
                "createdFromInterface": false,
                "id": 29,
                "createdAt": "2024-07-29 11:14:59",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-2921.67",
                "positionY": "256.333",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_007_create_type_chargers_table.php",
                        "relativePath": "/database/migrations/2024_07_29_033806_007_create_type_chargers_table.php",
                        "migrationName": "2024_07_29_033806_007_create_type_chargers_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_033806",
                        "createdTables": [
                            "type_chargers"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "type_chargers",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_033806_007_create_type_chargers_table.php",
                            "relativePath": "/database/migrations/2024_07_29_033806_007_create_type_chargers_table.php",
                            "migrationName": "2024_07_29_033806_007_create_type_chargers_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_033806",
                            "createdTables": [
                                "type_chargers"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_30": {
                "projectId": 1,
                "sectionId": 1,
                "name": "charges",
                "createdFromInterface": false,
                "id": 30,
                "createdAt": "2024-07-29 11:24:20",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-2420",
                "positionY": "1321",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_042551_001_create_charges_table.php",
                        "relativePath": "/database/migrations/2024_07_29_042551_001_create_charges_table.php",
                        "migrationName": "2024_07_29_042551_001_create_charges_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_042551",
                        "createdTables": [
                            "charges"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "charges",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_042551_001_create_charges_table.php",
                            "relativePath": "/database/migrations/2024_07_29_042551_001_create_charges_table.php",
                            "migrationName": "2024_07_29_042551_001_create_charges_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_042551",
                            "createdTables": [
                                "charges"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_31": {
                "projectId": 1,
                "sectionId": 1,
                "name": "state_of_healths",
                "createdFromInterface": false,
                "id": 31,
                "createdAt": "2024-07-29 13:02:51",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-1616",
                "positionY": "1668",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_060453_001_create_state_of_healths_table.php",
                        "relativePath": "/database/migrations/2024_07_29_060453_001_create_state_of_healths_table.php",
                        "migrationName": "2024_07_29_060453_001_create_state_of_healths_table",
                        "datePrefix": "2024_07_29",
                        "fullPrefix": "2024_07_29_060453",
                        "createdTables": [
                            "state_of_healths"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "state_of_healths",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_07_29_060453_001_create_state_of_healths_table.php",
                            "relativePath": "/database/migrations/2024_07_29_060453_001_create_state_of_healths_table.php",
                            "migrationName": "2024_07_29_060453_001_create_state_of_healths_table",
                            "datePrefix": "2024_07_29",
                            "fullPrefix": "2024_07_29_060453",
                            "createdTables": [
                                "state_of_healths"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_32": {
                "projectId": 1,
                "name": "model_has_permissions",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "model_has_permissions",
                    "oldNames": [],
                    "migrations": []
                },
                "sectionId": 1,
                "id": 32,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "601.25",
                "positionY": "150",
                "removed": false
            },
            "item_33": {
                "projectId": 1,
                "name": "model_has_roles",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "model_has_roles",
                    "oldNames": [],
                    "migrations": []
                },
                "sectionId": 1,
                "id": 33,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "692.5",
                "positionY": "-157.5",
                "removed": false
            },
            "item_34": {
                "projectId": 1,
                "name": "permissions",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "permissions",
                    "oldNames": [],
                    "migrations": []
                },
                "sectionId": 1,
                "id": 34,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "1041.25",
                "positionY": "-160.75",
                "removed": false
            },
            "item_35": {
                "projectId": 1,
                "name": "role_has_permissions",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "role_has_permissions",
                    "oldNames": [],
                    "migrations": []
                },
                "sectionId": 1,
                "id": 35,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "928.75",
                "positionY": "519.75",
                "removed": false
            },
            "item_36": {
                "projectId": 1,
                "name": "roles",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "roles",
                    "oldNames": [],
                    "migrations": []
                },
                "sectionId": 1,
                "id": 36,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "1049.25",
                "positionY": "145.75",
                "removed": false
            },
            "item_37": {
                "projectId": 1,
                "sectionId": 1,
                "name": "discount_home_chargings",
                "createdFromInterface": false,
                "id": 37,
                "createdAt": "2024-08-19 08:50:30",
                "updatedAt": "2024-08-19 08:58:39",
                "positionX": "-1234.75",
                "positionY": "1005.25",
                "removed": false,
                "migrations": [
                    {
                        "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_08_19_015504_001_create_discount_home_chargings_table.php",
                        "relativePath": "/database/migrations/2024_08_19_015504_001_create_discount_home_chargings_table.php",
                        "migrationName": "2024_08_19_015504_001_create_discount_home_chargings_table",
                        "datePrefix": "2024_08_19",
                        "fullPrefix": "2024_08_19_015504",
                        "createdTables": [
                            "discount_home_chargings"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "discount_home_chargings",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "/Users/dityoenggar/development/ev/database/migrations/2024_08_19_015504_001_create_discount_home_chargings_table.php",
                            "relativePath": "/database/migrations/2024_08_19_015504_001_create_discount_home_chargings_table.php",
                            "migrationName": "2024_08_19_015504_001_create_discount_home_chargings_table",
                            "datePrefix": "2024_08_19",
                            "fullPrefix": "2024_08_19_015504",
                            "createdTables": [
                                "discount_home_chargings"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            }
        },
        "columns": {
            "item_1": {
                "name": "key",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "__tableData": {
                "count": 232,
                "lastPrimaryKey": 288,
                "index": {
                    "1": {
                        "hasMany": {
                            "index_column.columnId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "index_column.columnId": [
                                2
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {
                            "index_column.columnId": [
                                3
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {
                            "index_column.columnId": [
                                4
                            ]
                        }
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {
                            "index_column.columnId": [
                                5
                            ]
                        }
                    },
                    "39": {
                        "hasMany": {
                            "index_column.columnId": [
                                6
                            ]
                        }
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {
                            "index_column.columnId": [
                                7
                            ]
                        }
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                21,
                                48,
                                56,
                                57,
                                76
                            ],
                            "relationships.parentKeyId": [
                                29,
                                30,
                                83,
                                84,
                                167,
                                168,
                                169,
                                170,
                                380,
                                381
                            ]
                        }
                    },
                    "54": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                1
                            ],
                            "cruds.defaultSearchColumnId": [
                                33
                            ],
                            "inputs.columnId": [
                                269
                            ]
                        }
                    },
                    "55": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                2
                            ],
                            "inputs.columnId": [
                                270
                            ]
                        }
                    },
                    "56": {
                        "hasMany": {
                            "casts_model_column.columnId": [
                                1
                            ]
                        }
                    },
                    "57": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                3
                            ],
                            "hidden_model_column.columnId": [
                                1
                            ],
                            "casts_model_column.columnId": [
                                2
                            ],
                            "inputs.columnId": [
                                271
                            ]
                        }
                    },
                    "58": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                4
                            ]
                        }
                    },
                    "59": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                3
                            ]
                        }
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "62": {
                        "hasMany": {}
                    },
                    "63": {
                        "hasMany": {}
                    },
                    "64": {
                        "hasMany": {}
                    },
                    "65": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                33
                            ]
                        }
                    },
                    "66": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                7,
                                10,
                                16,
                                51
                            ],
                            "relationships.parentKeyId": [
                                1,
                                2,
                                7,
                                8,
                                19,
                                20,
                                112,
                                113
                            ]
                        }
                    },
                    "69": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                8,
                                11,
                                17,
                                52
                            ],
                            "relationships.parentKeyId": [
                                3,
                                4,
                                9,
                                10,
                                21,
                                22,
                                114,
                                115
                            ]
                        }
                    },
                    "72": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                9,
                                12,
                                18,
                                53
                            ],
                            "relationships.parentKeyId": [
                                5,
                                6,
                                11,
                                12,
                                23,
                                24,
                                116,
                                117
                            ]
                        }
                    },
                    "75": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                13,
                                19,
                                54
                            ],
                            "relationships.parentKeyId": [
                                13,
                                14,
                                25,
                                26,
                                118,
                                119
                            ]
                        }
                    },
                    "78": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                20,
                                55
                            ],
                            "relationships.parentKeyId": [
                                27,
                                28,
                                120,
                                121
                            ]
                        }
                    },
                    "81": {
                        "hasMany": {}
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {}
                    },
                    "84": {
                        "hasMany": {}
                    },
                    "85": {
                        "hasMany": {
                            "index_column.columnId": [
                                8
                            ],
                            "relationships.foreignKeyId": [
                                1,
                                2
                            ]
                        }
                    },
                    "86": {
                        "hasMany": {
                            "index_column.columnId": [
                                9
                            ],
                            "relationships.foreignKeyId": [
                                3,
                                4
                            ]
                        }
                    },
                    "87": {
                        "hasMany": {
                            "index_column.columnId": [
                                10
                            ],
                            "relationships.foreignKeyId": [
                                5,
                                6
                            ]
                        }
                    },
                    "88": {
                        "hasMany": {
                            "index_column.columnId": [
                                11
                            ],
                            "relationships.foreignKeyId": [
                                7,
                                8
                            ]
                        }
                    },
                    "89": {
                        "hasMany": {
                            "index_column.columnId": [
                                12
                            ],
                            "relationships.foreignKeyId": [
                                9,
                                10
                            ]
                        }
                    },
                    "90": {
                        "hasMany": {
                            "index_column.columnId": [
                                13
                            ],
                            "relationships.foreignKeyId": [
                                11,
                                12
                            ]
                        }
                    },
                    "91": {
                        "hasMany": {
                            "index_column.columnId": [
                                14
                            ],
                            "relationships.foreignKeyId": [
                                13,
                                14
                            ]
                        }
                    },
                    "92": {
                        "hasMany": {}
                    },
                    "102": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                15
                            ],
                            "relationships.parentKeyId": [
                                17,
                                18
                            ],
                            "index_column.columnId": [
                                85
                            ]
                        }
                    },
                    "103": {
                        "hasMany": {}
                    },
                    "104": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                32
                            ]
                        }
                    },
                    "105": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                32
                            ],
                            "inputs.columnId": [
                                258
                            ]
                        }
                    },
                    "106": {
                        "hasMany": {
                            "inputs.columnId": [
                                267
                            ]
                        }
                    },
                    "109": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                41,
                                44,
                                77
                            ],
                            "relationships.parentKeyId": [
                                69,
                                70,
                                75,
                                76,
                                382,
                                383
                            ],
                            "index_column.columnId": [
                                80
                            ]
                        }
                    },
                    "110": {
                        "hasMany": {}
                    },
                    "111": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                4,
                                21
                            ]
                        }
                    },
                    "112": {
                        "hasMany": {
                            "inputs.columnId": [
                                24,
                                144
                            ],
                            "fillable_model_column.columnId": [
                                4
                            ]
                        }
                    },
                    "113": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                4,
                                21
                            ],
                            "inputs.columnId": [
                                25,
                                145
                            ],
                            "fillable_model_column.columnId": [
                                5
                            ]
                        }
                    },
                    "115": {
                        "hasMany": {
                            "index_column.columnId": [
                                16
                            ],
                            "relationships.foreignKeyId": [
                                17,
                                18
                            ],
                            "inputs.columnId": [
                                26,
                                146
                            ],
                            "fillable_model_column.columnId": [
                                6
                            ]
                        }
                    },
                    "116": {
                        "hasMany": {
                            "inputs.columnId": [
                                147,
                                206
                            ],
                            "fillable_model_column.columnId": [
                                7
                            ]
                        }
                    },
                    "117": {
                        "hasMany": {
                            "inputs.columnId": [
                                148,
                                205
                            ],
                            "fillable_model_column.columnId": [
                                8
                            ]
                        }
                    },
                    "118": {
                        "hasMany": {
                            "inputs.columnId": [
                                29,
                                149
                            ],
                            "fillable_model_column.columnId": [
                                9
                            ]
                        }
                    },
                    "119": {
                        "hasMany": {
                            "inputs.columnId": [
                                30,
                                150
                            ],
                            "fillable_model_column.columnId": [
                                10
                            ]
                        }
                    },
                    "120": {
                        "hasMany": {
                            "inputs.columnId": [
                                31,
                                151
                            ],
                            "fillable_model_column.columnId": [
                                11
                            ]
                        }
                    },
                    "122": {
                        "hasMany": {
                            "inputs.columnId": [
                                33,
                                153
                            ],
                            "fillable_model_column.columnId": [
                                12
                            ]
                        }
                    },
                    "124": {
                        "hasMany": {
                            "index_column.columnId": [
                                17
                            ],
                            "relationships.foreignKeyId": [
                                19,
                                20
                            ],
                            "inputs.columnId": [
                                34,
                                154
                            ],
                            "fillable_model_column.columnId": [
                                13
                            ]
                        }
                    },
                    "125": {
                        "hasMany": {
                            "index_column.columnId": [
                                18
                            ],
                            "relationships.foreignKeyId": [
                                21,
                                22
                            ],
                            "inputs.columnId": [
                                35,
                                155
                            ],
                            "fillable_model_column.columnId": [
                                14
                            ]
                        }
                    },
                    "126": {
                        "hasMany": {
                            "index_column.columnId": [
                                19
                            ],
                            "relationships.foreignKeyId": [
                                23,
                                24
                            ],
                            "inputs.columnId": [
                                36,
                                156
                            ],
                            "fillable_model_column.columnId": [
                                15
                            ]
                        }
                    },
                    "127": {
                        "hasMany": {
                            "index_column.columnId": [
                                20
                            ],
                            "relationships.foreignKeyId": [
                                25,
                                26
                            ],
                            "inputs.columnId": [
                                37,
                                157
                            ],
                            "fillable_model_column.columnId": [
                                16
                            ]
                        }
                    },
                    "128": {
                        "hasMany": {
                            "index_column.columnId": [
                                21
                            ],
                            "relationships.foreignKeyId": [
                                27,
                                28
                            ],
                            "inputs.columnId": [
                                38,
                                158
                            ],
                            "fillable_model_column.columnId": [
                                17
                            ]
                        }
                    },
                    "129": {
                        "hasMany": {
                            "index_column.columnId": [
                                22
                            ],
                            "relationships.foreignKeyId": [
                                29,
                                30
                            ],
                            "inputs.columnId": [
                                159,
                                246
                            ],
                            "fillable_model_column.columnId": [
                                18
                            ]
                        }
                    },
                    "140": {
                        "hasMany": {
                            "indices.referencesColumnId": [],
                            "relationships.parentKeyId": []
                        }
                    },
                    "141": {
                        "hasMany": {}
                    },
                    "142": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": []
                        }
                    },
                    "143": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [],
                            "inputs.columnId": []
                        }
                    },
                    "145": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                27,
                                30
                            ],
                            "relationships.parentKeyId": [
                                41,
                                42,
                                47,
                                48
                            ]
                        }
                    },
                    "146": {
                        "hasMany": {}
                    },
                    "147": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                6
                            ]
                        }
                    },
                    "148": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                6
                            ],
                            "inputs.columnId": [
                                41
                            ]
                        }
                    },
                    "149": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                28,
                                31
                            ],
                            "relationships.parentKeyId": [
                                43,
                                44,
                                49,
                                50
                            ]
                        }
                    },
                    "150": {
                        "hasMany": {}
                    },
                    "151": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                7,
                                30
                            ]
                        }
                    },
                    "152": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                7,
                                30
                            ],
                            "inputs.columnId": [
                                42,
                                251
                            ]
                        }
                    },
                    "153": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                32
                            ],
                            "relationships.parentKeyId": [
                                51,
                                52
                            ]
                        }
                    },
                    "154": {
                        "hasMany": {}
                    },
                    "155": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                28,
                                31
                            ]
                        }
                    },
                    "156": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                28,
                                31
                            ],
                            "inputs.columnId": [
                                234,
                                252
                            ]
                        }
                    },
                    "157": {
                        "hasMany": {
                            "index_column.columnId": [
                                28
                            ],
                            "relationships.foreignKeyId": [
                                41,
                                42
                            ],
                            "inputs.columnId": [
                                43
                            ]
                        }
                    },
                    "158": {
                        "hasMany": {
                            "index_column.columnId": [
                                29
                            ],
                            "relationships.foreignKeyId": [
                                43,
                                44
                            ],
                            "inputs.columnId": [
                                235
                            ]
                        }
                    },
                    "159": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                43,
                                47
                            ],
                            "relationships.parentKeyId": [
                                73,
                                74,
                                81,
                                82
                            ],
                            "index_column.columnId": [
                                84
                            ]
                        }
                    },
                    "160": {
                        "hasMany": {}
                    },
                    "161": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                9,
                                17
                            ]
                        }
                    },
                    "163": {
                        "hasMany": {
                            "index_column.columnId": [
                                31
                            ],
                            "relationships.foreignKeyId": [
                                47,
                                48
                            ],
                            "inputs.columnId": [
                                49,
                                110
                            ]
                        }
                    },
                    "164": {
                        "hasMany": {
                            "index_column.columnId": [
                                32
                            ],
                            "relationships.foreignKeyId": [
                                49,
                                50
                            ],
                            "inputs.columnId": [
                                50,
                                111
                            ]
                        }
                    },
                    "165": {
                        "hasMany": {
                            "index_column.columnId": [
                                33
                            ],
                            "relationships.foreignKeyId": [
                                51,
                                52
                            ],
                            "inputs.columnId": [
                                51,
                                112
                            ]
                        }
                    },
                    "166": {
                        "hasMany": {
                            "inputs.columnId": [
                                52,
                                113
                            ]
                        }
                    },
                    "168": {
                        "hasMany": {
                            "inputs.columnId": [
                                53,
                                114
                            ]
                        }
                    },
                    "169": {
                        "hasMany": {
                            "inputs.columnId": [
                                115,
                                204
                            ]
                        }
                    },
                    "170": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                45
                            ],
                            "relationships.parentKeyId": [
                                366,
                                367
                            ],
                            "index_column.columnId": [
                                81
                            ]
                        }
                    },
                    "171": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                22,
                                27
                            ]
                        }
                    },
                    "172": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                22,
                                27
                            ]
                        }
                    },
                    "176": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                40
                            ],
                            "relationships.parentKeyId": [
                                67,
                                68
                            ]
                        }
                    },
                    "177": {
                        "hasMany": {}
                    },
                    "178": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                11
                            ]
                        }
                    },
                    "179": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                36,
                                38
                            ],
                            "relationships.parentKeyId": [
                                59,
                                60,
                                63,
                                64
                            ]
                        }
                    },
                    "180": {
                        "hasMany": {}
                    },
                    "181": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                12
                            ]
                        }
                    },
                    "182": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                37,
                                39
                            ],
                            "relationships.parentKeyId": [
                                61,
                                62,
                                65,
                                66
                            ]
                        }
                    },
                    "183": {
                        "hasMany": {}
                    },
                    "184": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                13
                            ]
                        }
                    },
                    "185": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                12
                            ],
                            "inputs.columnId": [
                                68
                            ]
                        }
                    },
                    "186": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                13
                            ],
                            "inputs.columnId": [
                                255
                            ]
                        }
                    },
                    "187": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                11
                            ],
                            "inputs.columnId": [
                                66
                            ]
                        }
                    },
                    "188": {
                        "hasMany": {
                            "index_column.columnId": [
                                37
                            ],
                            "relationships.foreignKeyId": [
                                59,
                                60
                            ],
                            "inputs.columnId": [
                                70
                            ]
                        }
                    },
                    "189": {
                        "hasMany": {
                            "index_column.columnId": [
                                38
                            ],
                            "relationships.foreignKeyId": [
                                61,
                                62
                            ],
                            "inputs.columnId": [
                                67
                            ]
                        }
                    },
                    "190": {
                        "hasMany": {
                            "index_column.columnId": [
                                39
                            ],
                            "relationships.foreignKeyId": [
                                63,
                                64
                            ],
                            "inputs.columnId": [
                                161,
                                220
                            ]
                        }
                    },
                    "191": {
                        "hasMany": {
                            "index_column.columnId": [
                                40
                            ],
                            "relationships.foreignKeyId": [
                                65,
                                66
                            ],
                            "inputs.columnId": [
                                162,
                                221
                            ]
                        }
                    },
                    "192": {
                        "hasMany": {
                            "index_column.columnId": [
                                41
                            ],
                            "relationships.foreignKeyId": [
                                67,
                                68
                            ],
                            "inputs.columnId": [
                                163,
                                222
                            ]
                        }
                    },
                    "193": {
                        "hasMany": {
                            "index_column.columnId": [
                                42
                            ],
                            "relationships.foreignKeyId": [
                                69,
                                70
                            ],
                            "inputs.columnId": [
                                160,
                                219
                            ]
                        }
                    },
                    "194": {
                        "hasMany": {
                            "inputs.columnId": [
                                164,
                                223
                            ]
                        }
                    },
                    "201": {
                        "hasMany": {
                            "index_column.columnId": [
                                82
                            ]
                        }
                    },
                    "202": {
                        "hasMany": {}
                    },
                    "203": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                14,
                                16,
                                18
                            ]
                        }
                    },
                    "204": {
                        "hasMany": {
                            "index_column.columnId": [
                                44
                            ],
                            "relationships.foreignKeyId": [
                                73,
                                74
                            ],
                            "inputs.columnId": [
                                71,
                                93,
                                116
                            ],
                            "fillable_model_column.columnId": [
                                20
                            ]
                        }
                    },
                    "205": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                14,
                                16,
                                18
                            ],
                            "inputs.columnId": [
                                72,
                                94,
                                117
                            ],
                            "fillable_model_column.columnId": [
                                21
                            ]
                        }
                    },
                    "207": {
                        "hasMany": {
                            "index_column.columnId": [
                                45
                            ],
                            "relationships.foreignKeyId": [
                                75,
                                76
                            ],
                            "inputs.columnId": [
                                73,
                                95,
                                118
                            ],
                            "fillable_model_column.columnId": [
                                22
                            ]
                        }
                    },
                    "208": {
                        "hasMany": {
                            "index_column.columnId": [
                                46
                            ],
                            "relationships.foreignKeyId": [
                                366,
                                367
                            ],
                            "inputs.columnId": [
                                96,
                                119,
                                248
                            ],
                            "fillable_model_column.columnId": [
                                23
                            ]
                        }
                    },
                    "209": {
                        "hasMany": {
                            "inputs.columnId": [
                                75,
                                97,
                                120
                            ],
                            "fillable_model_column.columnId": [
                                24
                            ]
                        }
                    },
                    "210": {
                        "hasMany": {
                            "inputs.columnId": [
                                76,
                                98,
                                121
                            ],
                            "fillable_model_column.columnId": [
                                34
                            ]
                        }
                    },
                    "211": {
                        "hasMany": {
                            "inputs.columnId": [
                                77,
                                99,
                                122
                            ],
                            "fillable_model_column.columnId": [
                                25
                            ]
                        }
                    },
                    "212": {
                        "hasMany": {
                            "inputs.columnId": [
                                78,
                                100,
                                123
                            ],
                            "fillable_model_column.columnId": [
                                26
                            ]
                        }
                    },
                    "213": {
                        "hasMany": {
                            "inputs.columnId": [
                                79,
                                101,
                                124
                            ],
                            "fillable_model_column.columnId": [
                                35
                            ]
                        }
                    },
                    "214": {
                        "hasMany": {
                            "inputs.columnId": [
                                80,
                                102,
                                125
                            ],
                            "fillable_model_column.columnId": [
                                27
                            ]
                        }
                    },
                    "215": {
                        "hasMany": {
                            "inputs.columnId": [
                                81,
                                103,
                                126
                            ],
                            "fillable_model_column.columnId": [
                                28
                            ]
                        }
                    },
                    "216": {
                        "hasMany": {
                            "inputs.columnId": [
                                82,
                                104,
                                127
                            ],
                            "fillable_model_column.columnId": [
                                29
                            ]
                        }
                    },
                    "218": {
                        "hasMany": {
                            "inputs.columnId": [
                                83,
                                105,
                                128
                            ],
                            "fillable_model_column.columnId": [
                                30
                            ]
                        }
                    },
                    "219": {
                        "hasMany": {
                            "inputs.columnId": [
                                84,
                                106,
                                129
                            ],
                            "fillable_model_column.columnId": [
                                31
                            ]
                        }
                    },
                    "220": {
                        "hasMany": {
                            "inputs.columnId": [
                                85,
                                107,
                                130
                            ],
                            "fillable_model_column.columnId": [
                                32
                            ]
                        }
                    },
                    "221": {
                        "hasMany": {
                            "inputs.columnId": [
                                236,
                                253
                            ]
                        }
                    },
                    "223": {
                        "hasMany": {
                            "index_column.columnId": [
                                83
                            ]
                        }
                    },
                    "224": {
                        "hasMany": {}
                    },
                    "225": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                19,
                                29
                            ]
                        }
                    },
                    "226": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                19,
                                29
                            ],
                            "inputs.columnId": [
                                132,
                                239
                            ]
                        }
                    },
                    "227": {
                        "hasMany": {
                            "inputs.columnId": [
                                86,
                                108,
                                131
                            ],
                            "fillable_model_column.columnId": [
                                19
                            ]
                        }
                    },
                    "228": {
                        "hasMany": {
                            "index_column.columnId": [
                                48
                            ],
                            "relationships.foreignKeyId": [
                                81,
                                82
                            ],
                            "inputs.columnId": [
                                133,
                                240
                            ]
                        }
                    },
                    "229": {
                        "hasMany": {
                            "inputs.columnId": [
                                134,
                                241
                            ]
                        }
                    },
                    "230": {
                        "hasMany": {
                            "inputs.columnId": [
                                135,
                                242
                            ]
                        }
                    },
                    "231": {
                        "hasMany": {
                            "inputs.columnId": [
                                136,
                                243
                            ]
                        }
                    },
                    "232": {
                        "hasMany": {
                            "index_column.columnId": [
                                49
                            ],
                            "relationships.foreignKeyId": [
                                83,
                                84
                            ],
                            "inputs.columnId": [
                                137,
                                245
                            ]
                        }
                    },
                    "233": {
                        "hasMany": {}
                    },
                    "234": {
                        "hasMany": {}
                    },
                    "238": {
                        "hasMany": {
                            "inputs.columnId": [
                                260
                            ]
                        }
                    },
                    "239": {
                        "hasMany": {
                            "inputs.columnId": [
                                261
                            ]
                        }
                    },
                    "240": {
                        "hasMany": {
                            "index_column.columnId": [
                                52
                            ],
                            "relationships.foreignKeyId": [
                                112,
                                113
                            ],
                            "inputs.columnId": [
                                262
                            ]
                        }
                    },
                    "241": {
                        "hasMany": {
                            "index_column.columnId": [
                                53
                            ],
                            "relationships.foreignKeyId": [
                                114,
                                115
                            ],
                            "inputs.columnId": [
                                263
                            ]
                        }
                    },
                    "242": {
                        "hasMany": {
                            "index_column.columnId": [
                                54
                            ],
                            "relationships.foreignKeyId": [
                                116,
                                117
                            ],
                            "inputs.columnId": [
                                264
                            ]
                        }
                    },
                    "243": {
                        "hasMany": {
                            "index_column.columnId": [
                                55
                            ],
                            "relationships.foreignKeyId": [
                                118,
                                119
                            ],
                            "inputs.columnId": [
                                265
                            ]
                        }
                    },
                    "244": {
                        "hasMany": {
                            "index_column.columnId": [
                                56
                            ],
                            "relationships.foreignKeyId": [
                                120,
                                121
                            ],
                            "inputs.columnId": [
                                266
                            ]
                        }
                    },
                    "245": {
                        "hasMany": {
                            "inputs.columnId": [
                                257
                            ]
                        }
                    },
                    "247": {
                        "hasMany": {
                            "inputs.columnId": [
                                254,
                                256
                            ],
                            "casts_model_column.columnId": [
                                3
                            ]
                        }
                    },
                    "248": {
                        "hasMany": {
                            "index_column.columnId": [
                                57
                            ],
                            "relationships.foreignKeyId": [
                                167,
                                168
                            ]
                        }
                    },
                    "249": {
                        "hasMany": {
                            "index_column.columnId": [
                                58
                            ],
                            "relationships.foreignKeyId": [
                                169,
                                170
                            ],
                            "inputs.columnId": [
                                247
                            ],
                            "fillable_model_column.columnId": [
                                33
                            ]
                        }
                    },
                    "251": {
                        "hasMany": {
                            "inputs.columnId": [
                                249
                            ]
                        }
                    },
                    "252": {
                        "hasMany": {
                            "inputs.columnId": [
                                250
                            ]
                        }
                    },
                    "253": {
                        "hasMany": {
                            "index_column.columnId": [
                                62,
                                65
                            ]
                        }
                    },
                    "254": {
                        "hasMany": {
                            "index_column.columnId": [
                                61,
                                64
                            ]
                        }
                    },
                    "255": {
                        "hasMany": {
                            "index_column.columnId": [
                                60,
                                63
                            ]
                        }
                    },
                    "256": {
                        "hasMany": {
                            "index_column.columnId": [
                                68,
                                71
                            ]
                        }
                    },
                    "257": {
                        "hasMany": {
                            "index_column.columnId": [
                                67,
                                70
                            ]
                        }
                    },
                    "258": {
                        "hasMany": {
                            "index_column.columnId": [
                                66,
                                69
                            ]
                        }
                    },
                    "259": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                61,
                                68
                            ]
                        }
                    },
                    "260": {
                        "hasMany": {
                            "index_column.columnId": [
                                72
                            ]
                        }
                    },
                    "261": {
                        "hasMany": {
                            "index_column.columnId": [
                                73
                            ]
                        }
                    },
                    "262": {
                        "hasMany": {}
                    },
                    "263": {
                        "hasMany": {}
                    },
                    "264": {
                        "hasMany": {
                            "index_column.columnId": [
                                74,
                                77
                            ]
                        }
                    },
                    "265": {
                        "hasMany": {
                            "index_column.columnId": [
                                75,
                                76
                            ]
                        }
                    },
                    "266": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                64,
                                67
                            ]
                        }
                    },
                    "267": {
                        "hasMany": {
                            "index_column.columnId": [
                                78
                            ]
                        }
                    },
                    "268": {
                        "hasMany": {
                            "index_column.columnId": [
                                79
                            ]
                        }
                    },
                    "269": {
                        "hasMany": {}
                    },
                    "270": {
                        "hasMany": {}
                    },
                    "271": {
                        "hasMany": {
                            "inputs.columnId": [
                                268
                            ]
                        }
                    },
                    "272": {
                        "hasMany": {}
                    },
                    "273": {
                        "hasMany": {}
                    },
                    "274": {
                        "hasMany": {}
                    },
                    "275": {
                        "hasMany": {}
                    },
                    "276": {
                        "hasMany": {}
                    },
                    "277": {
                        "hasMany": {}
                    },
                    "280": {
                        "hasMany": {}
                    },
                    "281": {
                        "hasMany": {}
                    },
                    "282": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                34
                            ]
                        }
                    },
                    "283": {
                        "hasMany": {
                            "index_column.columnId": [
                                86
                            ],
                            "relationships.foreignKeyId": [
                                380,
                                381
                            ],
                            "inputs.columnId": [
                                277
                            ]
                        }
                    },
                    "284": {
                        "hasMany": {
                            "inputs.columnId": [
                                273
                            ]
                        }
                    },
                    "285": {
                        "hasMany": {
                            "inputs.columnId": [
                                274
                            ]
                        }
                    },
                    "286": {
                        "hasMany": {
                            "inputs.columnId": [
                                275
                            ]
                        }
                    },
                    "287": {
                        "hasMany": {
                            "inputs.columnId": [
                                276
                            ]
                        }
                    },
                    "288": {
                        "hasMany": {
                            "index_column.columnId": [
                                87
                            ],
                            "relationships.foreignKeyId": [
                                382,
                                383
                            ],
                            "cruds.defaultSearchColumnId": [
                                34
                            ],
                            "inputs.columnId": [
                                272
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "value",
                "type": "mediumText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "value",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "mediumText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_3": {
                "name": "expiration",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 3,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_4": {
                "name": "key",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 4,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_5": {
                "name": "owner",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "owner",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 5,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_6": {
                "name": "expiration",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 6,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_7": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 7,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_8": {
                "name": "uuid",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": true,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "uuid",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->uuid()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 8,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_9": {
                "name": "connection",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "connection",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 9,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_10": {
                "name": "queue",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 10,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_11": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 11,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_12": {
                "name": "exception",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "exception",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 12,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_13": {
                "name": "failed_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "failed_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": "CURRENT_TIMESTAMP",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "CURRENT_TIMESTAMP",
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 13,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_14": {
                "name": "id",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 14,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_15": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 15,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_16": {
                "name": "total_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "total_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 16,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_17": {
                "name": "pending_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "pending_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 17,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_18": {
                "name": "failed_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "failed_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 18,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_19": {
                "name": "failed_job_ids",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "failed_job_ids",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 19,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_20": {
                "name": "options",
                "type": "mediumText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "options",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "mediumText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "[]",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 20,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_21": {
                "name": "cancelled_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "cancelled_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 21,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_22": {
                "name": "created_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 22,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_23": {
                "name": "finished_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "finished_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 23,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_24": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 24,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_25": {
                "name": "queue",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 25,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_26": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 26,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_27": {
                "name": "attempts",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "attempts",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(0, 127)",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 27,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_28": {
                "name": "reserved_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "reserved_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 28,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_29": {
                "name": "available_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "available_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 29,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_30": {
                "name": "created_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 30,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_31": {
                "name": "id",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 31,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_32": {
                "name": "migration",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "migration",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 32,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_33": {
                "name": "batch",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "batch",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 33,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_34": {
                "name": "email",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 34,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_35": {
                "name": "token",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "token",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 35,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_36": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 36,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_37": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 37,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_38": {
                "name": "tokenable_type",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "tokenable_type",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 38,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_39": {
                "name": "tokenable_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "tokenable_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 39,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_40": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 40,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_41": {
                "name": "token",
                "type": "string",
                "index": false,
                "length": "64",
                "unique": true,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "token",
                    "length": "64",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 41,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_42": {
                "name": "abilities",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "abilities",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 42,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_43": {
                "name": "last_used_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "last_used_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 43,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_44": {
                "name": "expires_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "expires_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 44,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_45": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 45,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_46": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 46,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_47": {
                "name": "id",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 47,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_48": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 48,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_49": {
                "name": "ip_address",
                "type": "string",
                "index": false,
                "length": "45",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "ip_address",
                    "length": "45",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->ipv4()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 49,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_50": {
                "name": "user_agent",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "user_agent",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->userAgent()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 50,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_51": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 51,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_52": {
                "name": "last_activity",
                "type": "integer",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "last_activity",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 52,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_53": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 53,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_54": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 54,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_55": {
                "name": "email",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": true,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 55,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_56": {
                "name": "email_verified_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "email_verified_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "now()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 56,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_57": {
                "name": "password",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "password",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "\\Hash::make('password')",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 57,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_58": {
                "name": "two_factor_secret",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_secret",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 58,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_59": {
                "name": "two_factor_recovery_codes",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_recovery_codes",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 59,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_60": {
                "name": "two_factor_confirmed_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "two_factor_confirmed_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 60,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_61": {
                "name": "remember_token",
                "type": "string",
                "index": false,
                "length": "100",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "remember_token",
                    "length": "100",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "Str::random(10)",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 61,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_62": {
                "name": "current_team_id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "current_team_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 62,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_63": {
                "name": "profile_photo_path",
                "type": "string",
                "index": false,
                "length": "2048",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "profile_photo_path",
                    "length": "2048",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 10,
                "total": null,
                "places": null,
                "options": [],
                "id": 63,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_64": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 11,
                "total": null,
                "places": null,
                "options": [],
                "id": 64,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_65": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 12,
                "total": null,
                "places": null,
                "options": [],
                "id": 65,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_66": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 66,
                "createdAt": "2024-07-29 10:35:13",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_69": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 69,
                "createdAt": "2024-07-29 10:35:22",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_72": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 72,
                "createdAt": "2024-07-29 10:35:41",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_75": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 75,
                "createdAt": "2024-07-29 10:35:52",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_78": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 78,
                "createdAt": "2024-07-29 10:36:07",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_81": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 11,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 81,
                "createdAt": "2024-07-29 10:36:15",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_82": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 82,
                "createdAt": "2024-07-29 10:36:20",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_83": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 83,
                "createdAt": "2024-07-29 10:36:25",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_84": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 84,
                "createdAt": "2024-07-29 10:36:29",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_85": {
                "name": "province_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "province_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 85,
                "createdAt": "2024-07-29 10:36:44",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_86": {
                "name": "city_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "city_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 86,
                "createdAt": "2024-07-29 10:36:53",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_87": {
                "name": "district_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "district_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 87,
                "createdAt": "2024-07-29 10:37:09",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_88": {
                "name": "province_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "province_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 88,
                "createdAt": "2024-07-29 10:37:19",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_89": {
                "name": "city_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "city_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 89,
                "createdAt": "2024-07-29 10:37:25",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_90": {
                "name": "district_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "district_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 90,
                "createdAt": "2024-07-29 10:37:32",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_91": {
                "name": "subdistrict_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "subdistrict_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 91,
                "createdAt": "2024-07-29 10:37:38",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_92": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 92,
                "createdAt": "2024-07-29 10:37:42",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 5,
                "total": null,
                "places": null,
                "options": []
            },
            "item_102": {
                "name": "id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "id": 102,
                "createdAt": "2024-07-29 10:41:24",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_103": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 11,
                "id": 103,
                "createdAt": "2024-07-29 10:41:24",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_104": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 12,
                "id": 104,
                "createdAt": "2024-07-29 10:41:24",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_105": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 105,
                "createdAt": "2024-07-29 10:41:33",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_106": {
                "name": "status",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(1,2)",
                "id": 106,
                "createdAt": "2024-07-29 10:41:36",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "options": [],
                "total": null,
                "places": null
            },
            "item_109": {
                "name": "id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "id": 109,
                "createdAt": "2024-07-29 10:45:50",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_110": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 17,
                "id": 110,
                "createdAt": "2024-07-29 10:45:50",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_111": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 18,
                "id": 111,
                "createdAt": "2024-07-29 10:45:50",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_112": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->optional()",
                "id": 112,
                "createdAt": "2024-07-29 10:46:01",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_113": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 113,
                "createdAt": "2024-07-29 10:46:03",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_115": {
                "name": "provider_id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "provider_id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 115,
                "createdAt": "2024-07-29 10:46:19",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_116": {
                "name": "location_on",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "location_on",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(1,2)",
                "id": 116,
                "createdAt": "2024-07-29 10:46:34",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_117": {
                "name": "status",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(1,2)",
                "id": 117,
                "createdAt": "2024-07-29 10:46:42",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 5,
                "total": null,
                "places": null,
                "options": []
            },
            "item_118": {
                "name": "description",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "description",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->sentence(15)",
                "id": 118,
                "createdAt": "2024-07-29 10:46:56",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 6,
                "total": null,
                "places": null,
                "options": []
            },
            "item_119": {
                "name": "latitude",
                "type": "double",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "latitude",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "double",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->latitude()",
                "id": 119,
                "createdAt": "2024-07-29 10:47:08",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 7,
                "total": null,
                "places": null,
                "options": []
            },
            "item_120": {
                "name": "longitude",
                "type": "double",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "longitude",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "double",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->longitude()",
                "id": 120,
                "createdAt": "2024-07-29 10:47:16",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 8,
                "total": null,
                "places": null,
                "options": []
            },
            "item_122": {
                "name": "parking",
                "type": "boolean",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "parking",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "boolean",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->boolean()",
                "id": 122,
                "createdAt": "2024-07-29 10:47:56",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 9,
                "total": null,
                "places": null,
                "options": []
            },
            "item_124": {
                "name": "province_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "province_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 124,
                "createdAt": "2024-07-29 10:48:27",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 11,
                "total": null,
                "places": null,
                "options": []
            },
            "item_125": {
                "name": "city_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "city_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 125,
                "createdAt": "2024-07-29 10:48:34",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 12,
                "total": null,
                "places": null,
                "options": []
            },
            "item_126": {
                "name": "district_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "district_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 126,
                "createdAt": "2024-07-29 10:48:40",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 13,
                "total": null,
                "places": null,
                "options": []
            },
            "item_127": {
                "name": "subdistrict_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "subdistrict_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 127,
                "createdAt": "2024-07-29 10:48:46",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 14,
                "total": null,
                "places": null,
                "options": []
            },
            "item_128": {
                "name": "postal_code_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "postal_code_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 128,
                "createdAt": "2024-07-29 10:48:53",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 15,
                "total": null,
                "places": null,
                "options": []
            },
            "item_129": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 129,
                "createdAt": "2024-07-29 10:49:02",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 16,
                "total": null,
                "places": null,
                "options": []
            },
            "item_140": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 140,
                "createdAt": "2024-07-29 10:52:25",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_141": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "id": 141,
                "createdAt": "2024-07-29 10:52:25",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_142": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 142,
                "createdAt": "2024-07-29 10:52:25",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_143": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 143,
                "createdAt": "2024-07-29 10:52:44",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_145": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 145,
                "createdAt": "2024-07-29 10:58:31",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_146": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "id": 146,
                "createdAt": "2024-07-29 10:58:31",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_147": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 147,
                "createdAt": "2024-07-29 10:58:31",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_148": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 148,
                "createdAt": "2024-07-29 10:58:39",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_149": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 23,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 149,
                "createdAt": "2024-07-29 10:59:45",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_150": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 23,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 150,
                "createdAt": "2024-07-29 10:59:45",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_151": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 23,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 5,
                "id": 151,
                "createdAt": "2024-07-29 10:59:45",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_152": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 23,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 152,
                "createdAt": "2024-07-29 10:59:51",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_153": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 24,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 153,
                "createdAt": "2024-07-29 11:00:01",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_154": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 24,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 5,
                "id": 154,
                "createdAt": "2024-07-29 11:00:01",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_155": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 24,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "id": 155,
                "createdAt": "2024-07-29 11:00:01",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_156": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 24,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 156,
                "createdAt": "2024-07-29 11:00:07",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_157": {
                "name": "brand_vehicle_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 23,
                "removed": false,
                "schemaState": {
                    "name": "brand_vehicle_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 157,
                "createdAt": "2024-07-29 11:00:24",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_158": {
                "name": "model_vehicle_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 24,
                "removed": false,
                "schemaState": {
                    "name": "model_vehicle_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 158,
                "createdAt": "2024-07-29 11:00:40",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_159": {
                "name": "id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "id": 159,
                "createdAt": "2024-07-29 11:01:09",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_160": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 9,
                "id": 160,
                "createdAt": "2024-07-29 11:01:09",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_161": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 10,
                "id": 161,
                "createdAt": "2024-07-29 11:01:09",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_163": {
                "name": "brand_vehicle_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "brand_vehicle_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 163,
                "createdAt": "2024-07-29 11:03:15",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_164": {
                "name": "model_vehicle_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "model_vehicle_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 164,
                "createdAt": "2024-07-29 11:03:31",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_165": {
                "name": "type_vehicle_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "type_vehicle_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 165,
                "createdAt": "2024-07-29 11:03:38",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 5,
                "total": null,
                "places": null,
                "options": []
            },
            "item_166": {
                "name": "license_plate",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "license_plate",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 166,
                "createdAt": "2024-07-29 11:04:12",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_168": {
                "name": "ownership",
                "type": "date",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "ownership",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "date",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->date()",
                "id": 168,
                "createdAt": "2024-07-29 11:04:38",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 6,
                "total": null,
                "places": null,
                "options": []
            },
            "item_169": {
                "name": "status",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(1,2)",
                "id": 169,
                "createdAt": "2024-07-29 11:04:46",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 7,
                "total": null,
                "places": null,
                "options": []
            },
            "item_170": {
                "name": "id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "id": 170,
                "createdAt": "2024-07-29 11:06:06",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_171": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "id": 171,
                "createdAt": "2024-07-29 11:06:06",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_172": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 7,
                "id": 172,
                "createdAt": "2024-07-29 11:06:06",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_176": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 27,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 176,
                "createdAt": "2024-07-29 11:14:19",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_177": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 27,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "id": 177,
                "createdAt": "2024-07-29 11:14:19",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_178": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 27,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 178,
                "createdAt": "2024-07-29 11:14:19",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_179": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 28,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 179,
                "createdAt": "2024-07-29 11:14:50",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_180": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 28,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 2,
                "id": 180,
                "createdAt": "2024-07-29 11:14:50",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_181": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 28,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "id": 181,
                "createdAt": "2024-07-29 11:14:50",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_182": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 29,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "id": 182,
                "createdAt": "2024-07-29 11:14:59",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_183": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 29,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "id": 183,
                "createdAt": "2024-07-29 11:14:59",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_184": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 29,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 184,
                "createdAt": "2024-07-29 11:14:59",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_185": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 28,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 185,
                "createdAt": "2024-07-29 11:15:16",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_186": {
                "name": "name",
                "type": "enum",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 29,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "enum",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": [
                        "AC",
                        "DC"
                    ]
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 186,
                "createdAt": "2024-07-29 11:15:23",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": [
                    "AC",
                    "DC"
                ]
            },
            "item_187": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 27,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 187,
                "createdAt": "2024-07-29 11:15:28",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_188": {
                "name": "current_charger_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 29,
                "removed": false,
                "schemaState": {
                    "name": "current_charger_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 188,
                "createdAt": "2024-07-29 11:15:47",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_189": {
                "name": "type_charger_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 27,
                "removed": false,
                "schemaState": {
                    "name": "type_charger_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 189,
                "createdAt": "2024-07-29 11:15:58",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_190": {
                "name": "current_charger_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "current_charger_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 190,
                "createdAt": "2024-07-29 11:19:19",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_191": {
                "name": "type_charger_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "type_charger_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 191,
                "createdAt": "2024-07-29 11:19:26",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_192": {
                "name": "power_charger_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "power_charger_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 192,
                "createdAt": "2024-07-29 11:19:35",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_193": {
                "name": "charger_location_id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "charger_location_id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 193,
                "createdAt": "2024-07-29 11:20:41",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_194": {
                "name": "unit",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "unit",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": "1",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "1",
                "autoIncrement": false,
                "faker": "fake()->numberBetween(1,2)",
                "id": 194,
                "createdAt": "2024-07-29 11:20:57",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 5,
                "total": null,
                "places": null,
                "options": []
            },
            "item_201": {
                "name": "id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "id": 201,
                "createdAt": "2024-07-29 11:24:20",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_202": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 18,
                "id": 202,
                "createdAt": "2024-07-29 11:24:20",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_203": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 19,
                "id": 203,
                "createdAt": "2024-07-29 11:24:20",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_204": {
                "name": "vehicle_id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "vehicle_id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 204,
                "createdAt": "2024-07-29 11:24:43",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_205": {
                "name": "date",
                "type": "date",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "date",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "date",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->date()",
                "id": 205,
                "createdAt": "2024-07-29 11:24:54",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_207": {
                "name": "charger_location_id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "charger_location_id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 207,
                "createdAt": "2024-07-29 11:25:08",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_208": {
                "name": "charger_id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "charger_id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 208,
                "createdAt": "2024-07-29 11:25:22",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_209": {
                "name": "km_now",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "km_now",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 209,
                "createdAt": "2024-07-29 11:26:24",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 5,
                "total": null,
                "places": null,
                "options": []
            },
            "item_210": {
                "name": "km_before",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "km_before",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 210,
                "createdAt": "2024-07-29 11:26:28",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 6,
                "total": null,
                "places": null,
                "options": []
            },
            "item_211": {
                "name": "start_charging_now",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "start_charging_now",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 211,
                "createdAt": "2024-07-29 11:26:45",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 7,
                "total": null,
                "places": null,
                "options": []
            },
            "item_212": {
                "name": "finish_charging_now",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "finish_charging_now",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 212,
                "createdAt": "2024-07-29 11:26:59",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 8,
                "total": null,
                "places": null,
                "options": []
            },
            "item_213": {
                "name": "finish_charging_before",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "finish_charging_before",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 213,
                "createdAt": "2024-07-29 11:27:24",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 9,
                "total": null,
                "places": null,
                "options": []
            },
            "item_214": {
                "name": "parking",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "parking",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": "0",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": "0",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 214,
                "createdAt": "2024-07-29 11:27:46",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 10,
                "total": null,
                "places": null,
                "options": []
            },
            "item_215": {
                "name": "kWh",
                "type": "decimal",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "kWh",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "decimal",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": 8,
                    "places": 2,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomFloat(0,9999)",
                "id": 215,
                "createdAt": "2024-07-29 11:27:50",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 11,
                "total": 8,
                "places": 2,
                "options": []
            },
            "item_216": {
                "name": "street_lighting_tax",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "street_lighting_tax",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": "0",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": "0",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 216,
                "createdAt": "2024-07-29 11:28:09",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 12,
                "total": null,
                "places": null,
                "options": []
            },
            "item_218": {
                "name": "value_added_tax",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "value_added_tax",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": "0",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": "0",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 218,
                "createdAt": "2024-07-29 11:28:32",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 13,
                "total": null,
                "places": null,
                "options": []
            },
            "item_219": {
                "name": "admin_cost",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "admin_cost",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": "0",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": "0",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 219,
                "createdAt": "2024-07-29 11:28:52",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 14,
                "total": null,
                "places": null,
                "options": []
            },
            "item_220": {
                "name": "total_cost",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "total_cost",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": "0",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": "0",
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 220,
                "createdAt": "2024-07-29 11:28:56",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 15,
                "total": null,
                "places": null,
                "options": []
            },
            "item_221": {
                "name": "battery_capacity",
                "type": "decimal",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 24,
                "removed": false,
                "schemaState": {
                    "name": "battery_capacity",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "decimal",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": 8,
                    "places": 2,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(1,2)",
                "id": 221,
                "createdAt": "2024-07-29 11:30:45",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": 8,
                "places": 2,
                "options": []
            },
            "item_223": {
                "name": "id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 0,
                "id": 223,
                "createdAt": "2024-07-29 13:02:51",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_224": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "id": 224,
                "createdAt": "2024-07-29 13:02:51",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_225": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 9,
                "id": 225,
                "createdAt": "2024-07-29 13:02:51",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_226": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->optional()",
                "id": 226,
                "createdAt": "2024-07-29 13:03:02",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_227": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->optional()",
                "id": 227,
                "createdAt": "2024-07-29 13:03:22",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 16,
                "total": null,
                "places": null,
                "options": []
            },
            "item_228": {
                "name": "vehicle_id",
                "type": "char",
                "index": true,
                "length": "36",
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "vehicle_id",
                    "length": "36",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 228,
                "createdAt": "2024-07-29 13:03:42",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_229": {
                "name": "km",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "km",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 229,
                "createdAt": "2024-07-29 13:03:52",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_230": {
                "name": "percentage",
                "type": "decimal",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "percentage",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "decimal",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": 8,
                    "places": 2,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 230,
                "createdAt": "2024-07-29 13:03:53",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 5,
                "total": 8,
                "places": 2,
                "options": []
            },
            "item_231": {
                "name": "remaining_battery",
                "type": "decimal",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "remaining_battery",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "decimal",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": 8,
                    "places": 2,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 231,
                "createdAt": "2024-07-29 13:04:08",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 6,
                "total": 8,
                "places": 2,
                "options": []
            },
            "item_232": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 232,
                "createdAt": "2024-07-29 13:04:49",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 7,
                "total": null,
                "places": null,
                "options": []
            },
            "item_233": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 21,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 233,
                "createdAt": "2024-07-29 14:49:08",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_234": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 234,
                "createdAt": "2024-07-29 18:30:23",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_238": {
                "name": "contact",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "contact",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 238,
                "createdAt": "2024-07-29 21:29:46",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_239": {
                "name": "address",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "address",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->address()",
                "id": 239,
                "createdAt": "2024-07-29 21:29:59",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 5,
                "total": null,
                "places": null,
                "options": []
            },
            "item_240": {
                "name": "province_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "province_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 240,
                "createdAt": "2024-07-29 21:30:12",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 6,
                "total": null,
                "places": null,
                "options": []
            },
            "item_241": {
                "name": "city_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "city_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 241,
                "createdAt": "2024-07-29 21:30:20",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 7,
                "total": null,
                "places": null,
                "options": []
            },
            "item_242": {
                "name": "district_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "district_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 242,
                "createdAt": "2024-07-29 21:30:29",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 8,
                "total": null,
                "places": null,
                "options": []
            },
            "item_243": {
                "name": "subdistrict_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "subdistrict_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 243,
                "createdAt": "2024-07-29 21:30:36",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 9,
                "total": null,
                "places": null,
                "options": []
            },
            "item_244": {
                "name": "postal_code_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "postal_code_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 244,
                "createdAt": "2024-07-29 21:30:48",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 10,
                "total": null,
                "places": null,
                "options": []
            },
            "item_245": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 18,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->optional()",
                "id": 245,
                "createdAt": "2024-07-29 21:31:23",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_247": {
                "name": "type_charger",
                "type": "json",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 24,
                "removed": false,
                "schemaState": {
                    "name": "type_charger",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "json",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 247,
                "createdAt": "2024-07-29 22:53:21",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "options": [],
                "total": null,
                "places": null
            },
            "item_248": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 248,
                "createdAt": "2024-07-30 11:56:02",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 8,
                "total": null,
                "places": null,
                "options": []
            },
            "item_249": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 249,
                "createdAt": "2024-07-30 11:57:42",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 17,
                "total": null,
                "places": null,
                "options": []
            },
            "item_251": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 22,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 251,
                "createdAt": "2024-07-30 15:46:44",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_252": {
                "name": "image",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 23,
                "removed": false,
                "schemaState": {
                    "name": "image",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 252,
                "createdAt": "2024-07-30 15:48:37",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_253": {
                "name": "permission_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 32,
                "removed": false,
                "schemaState": {
                    "name": "permission_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 253,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_254": {
                "name": "model_type",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 32,
                "removed": false,
                "schemaState": {
                    "name": "model_type",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 254,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_255": {
                "name": "model_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 32,
                "removed": false,
                "schemaState": {
                    "name": "model_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 255,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_256": {
                "name": "role_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 33,
                "removed": false,
                "schemaState": {
                    "name": "role_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 256,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_257": {
                "name": "model_type",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 33,
                "removed": false,
                "schemaState": {
                    "name": "model_type",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 257,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_258": {
                "name": "model_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 33,
                "removed": false,
                "schemaState": {
                    "name": "model_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 258,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_259": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 34,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 259,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_260": {
                "name": "name",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 34,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 260,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_261": {
                "name": "guard_name",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 34,
                "removed": false,
                "schemaState": {
                    "name": "guard_name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 261,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_262": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 34,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 262,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_263": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 34,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 263,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_264": {
                "name": "permission_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 35,
                "removed": false,
                "schemaState": {
                    "name": "permission_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 264,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_265": {
                "name": "role_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 35,
                "removed": false,
                "schemaState": {
                    "name": "role_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 265,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_266": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 36,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "faker": "",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 266,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_267": {
                "name": "name",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 36,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 267,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_268": {
                "name": "guard_name",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 36,
                "removed": false,
                "schemaState": {
                    "name": "guard_name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 268,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_269": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 36,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 269,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_270": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 36,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 270,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39"
            },
            "item_271": {
                "name": "address",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "address",
                    "length": "255",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->address()",
                "id": 271,
                "createdAt": "2024-07-30 19:25:45",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 10,
                "total": null,
                "places": null,
                "options": []
            },
            "item_272": {
                "name": "date",
                "type": "date",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "date",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "date",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->date()",
                "id": 272,
                "createdAt": "2024-08-01 23:47:33",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_273": {
                "name": "deleted_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 26,
                "removed": false,
                "schemaState": {
                    "name": "deleted_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "project": 1,
                "id": 273,
                "createdAt": "2024-08-03 00:19:06",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 8,
                "total": null,
                "places": null,
                "options": []
            },
            "item_274": {
                "name": "deleted_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 19,
                "removed": false,
                "schemaState": {
                    "name": "deleted_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "project": 1,
                "id": 274,
                "createdAt": "2024-08-03 00:19:42",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 19,
                "total": null,
                "places": null,
                "options": []
            },
            "item_275": {
                "name": "deleted_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 31,
                "removed": false,
                "schemaState": {
                    "name": "deleted_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "project": 1,
                "id": 275,
                "createdAt": "2024-08-03 00:20:04",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 10,
                "total": null,
                "places": null,
                "options": []
            },
            "item_276": {
                "name": "deleted_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 25,
                "removed": false,
                "schemaState": {
                    "name": "deleted_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "project": 1,
                "id": 276,
                "createdAt": "2024-08-03 00:20:57",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 11,
                "total": null,
                "places": null,
                "options": []
            },
            "item_277": {
                "name": "deleted_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 30,
                "removed": false,
                "schemaState": {
                    "name": "deleted_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "project": 1,
                "id": 277,
                "createdAt": "2024-08-03 00:21:16",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 20,
                "total": null,
                "places": null,
                "options": []
            },
            "item_280": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "id": 280,
                "createdAt": "2024-08-19 08:50:30",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_281": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 7,
                "id": 281,
                "createdAt": "2024-08-19 08:50:30",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_282": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "id": 282,
                "createdAt": "2024-08-19 08:50:30",
                "updatedAt": "2024-08-19 08:58:39",
                "total": null,
                "places": null,
                "options": []
            },
            "item_283": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 283,
                "createdAt": "2024-08-19 08:50:46",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 6,
                "total": null,
                "places": null,
                "options": []
            },
            "item_284": {
                "name": "month",
                "type": "date",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "month",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "date",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->date()",
                "id": 284,
                "createdAt": "2024-08-19 08:50:50",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_285": {
                "name": "total_kwh",
                "type": "decimal",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "total_kwh",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "decimal",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": 8,
                    "places": 2,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomFloat(2, 0, 9999)",
                "id": 285,
                "createdAt": "2024-08-19 08:51:30",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 3,
                "total": 8,
                "places": 2,
                "options": []
            },
            "item_286": {
                "name": "discount_kwh",
                "type": "decimal",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "discount_kwh",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "decimal",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": 8,
                    "places": 2,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 286,
                "createdAt": "2024-08-19 08:52:40",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 4,
                "total": 8,
                "places": 2,
                "options": []
            },
            "item_287": {
                "name": "discount_total",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "discount_total",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomFloat(2, 0, 9999)",
                "id": 287,
                "createdAt": "2024-08-19 08:53:08",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 5,
                "total": null,
                "places": null,
                "options": []
            },
            "item_288": {
                "name": "charger_location_id",
                "type": "char",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 37,
                "removed": false,
                "schemaState": {
                    "name": "charger_location_id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "char",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word({LENGTH})",
                "id": 288,
                "createdAt": "2024-08-19 08:53:50",
                "updatedAt": "2024-08-19 08:58:39",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            }
        },
        "indices": {
            "item_1": {
                "tableId": 1,
                "name": "",
                "columns": [
                    "key"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "key"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "__tableData": {
                "count": 62,
                "lastPrimaryKey": 77,
                "index": {
                    "1": {
                        "hasMany": {
                            "index_column.indexId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "index_column.indexId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "index_column.indexId": [
                                3
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "index_column.indexId": [
                                4
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "index_column.indexId": [
                                5,
                                6
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "index_column.indexId": [
                                7
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "index_column.indexId": [
                                8
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "index_column.indexId": [
                                9
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "index_column.indexId": [
                                10
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "index_column.indexId": [
                                11
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "index_column.indexId": [
                                12
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "index_column.indexId": [
                                13
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "index_column.indexId": [
                                14
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "index_column.indexId": [
                                16
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "index_column.indexId": [
                                17
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "index_column.indexId": [
                                18
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "index_column.indexId": [
                                19
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "index_column.indexId": [
                                20
                            ]
                        }
                    },
                    "20": {
                        "hasMany": {
                            "index_column.indexId": [
                                21
                            ]
                        }
                    },
                    "21": {
                        "hasMany": {
                            "index_column.indexId": [
                                22
                            ]
                        }
                    },
                    "27": {
                        "hasMany": {
                            "index_column.indexId": [
                                28
                            ]
                        }
                    },
                    "28": {
                        "hasMany": {
                            "index_column.indexId": [
                                29
                            ]
                        }
                    },
                    "30": {
                        "hasMany": {
                            "index_column.indexId": [
                                31
                            ]
                        }
                    },
                    "31": {
                        "hasMany": {
                            "index_column.indexId": [
                                32
                            ]
                        }
                    },
                    "32": {
                        "hasMany": {
                            "index_column.indexId": [
                                33
                            ]
                        }
                    },
                    "36": {
                        "hasMany": {
                            "index_column.indexId": [
                                37
                            ]
                        }
                    },
                    "37": {
                        "hasMany": {
                            "index_column.indexId": [
                                38
                            ]
                        }
                    },
                    "38": {
                        "hasMany": {
                            "index_column.indexId": [
                                39
                            ]
                        }
                    },
                    "39": {
                        "hasMany": {
                            "index_column.indexId": [
                                40
                            ]
                        }
                    },
                    "40": {
                        "hasMany": {
                            "index_column.indexId": [
                                41
                            ]
                        }
                    },
                    "41": {
                        "hasMany": {
                            "index_column.indexId": [
                                42
                            ]
                        }
                    },
                    "43": {
                        "hasMany": {
                            "index_column.indexId": [
                                44
                            ]
                        }
                    },
                    "44": {
                        "hasMany": {
                            "index_column.indexId": [
                                45
                            ]
                        }
                    },
                    "45": {
                        "hasMany": {
                            "index_column.indexId": [
                                46
                            ]
                        }
                    },
                    "47": {
                        "hasMany": {
                            "index_column.indexId": [
                                48
                            ]
                        }
                    },
                    "48": {
                        "hasMany": {
                            "index_column.indexId": [
                                49
                            ]
                        }
                    },
                    "51": {
                        "hasMany": {
                            "index_column.indexId": [
                                52
                            ]
                        }
                    },
                    "52": {
                        "hasMany": {
                            "index_column.indexId": [
                                53
                            ]
                        }
                    },
                    "53": {
                        "hasMany": {
                            "index_column.indexId": [
                                54
                            ]
                        }
                    },
                    "54": {
                        "hasMany": {
                            "index_column.indexId": [
                                55
                            ]
                        }
                    },
                    "55": {
                        "hasMany": {
                            "index_column.indexId": [
                                56
                            ]
                        }
                    },
                    "56": {
                        "hasMany": {
                            "index_column.indexId": [
                                57
                            ]
                        }
                    },
                    "57": {
                        "hasMany": {
                            "index_column.indexId": [
                                58
                            ]
                        }
                    },
                    "59": {
                        "hasMany": {
                            "index_column.indexId": [
                                60,
                                61
                            ]
                        }
                    },
                    "60": {
                        "hasMany": {
                            "index_column.indexId": [
                                62,
                                63,
                                64
                            ]
                        }
                    },
                    "61": {
                        "hasMany": {
                            "index_column.indexId": [
                                65
                            ]
                        }
                    },
                    "62": {
                        "hasMany": {
                            "index_column.indexId": [
                                66,
                                67
                            ]
                        }
                    },
                    "63": {
                        "hasMany": {
                            "index_column.indexId": [
                                68,
                                69,
                                70
                            ]
                        }
                    },
                    "64": {
                        "hasMany": {
                            "index_column.indexId": [
                                71
                            ]
                        }
                    },
                    "65": {
                        "hasMany": {
                            "index_column.indexId": [
                                72,
                                73
                            ]
                        }
                    },
                    "66": {
                        "hasMany": {
                            "index_column.indexId": [
                                74,
                                75
                            ]
                        }
                    },
                    "67": {
                        "hasMany": {
                            "index_column.indexId": [
                                76
                            ]
                        }
                    },
                    "68": {
                        "hasMany": {
                            "index_column.indexId": [
                                77
                            ]
                        }
                    },
                    "69": {
                        "hasMany": {
                            "index_column.indexId": [
                                78,
                                79
                            ]
                        }
                    },
                    "70": {
                        "hasMany": {
                            "index_column.indexId": [
                                80
                            ]
                        }
                    },
                    "71": {
                        "hasMany": {
                            "index_column.indexId": [
                                81
                            ]
                        }
                    },
                    "72": {
                        "hasMany": {
                            "index_column.indexId": [
                                82
                            ]
                        }
                    },
                    "73": {
                        "hasMany": {
                            "index_column.indexId": [
                                83
                            ]
                        }
                    },
                    "74": {
                        "hasMany": {
                            "index_column.indexId": [
                                84
                            ]
                        }
                    },
                    "75": {
                        "hasMany": {
                            "index_column.indexId": [
                                85
                            ]
                        }
                    },
                    "76": {
                        "hasMany": {
                            "index_column.indexId": [
                                86
                            ]
                        }
                    },
                    "77": {
                        "hasMany": {
                            "index_column.indexId": [
                                87
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "tableId": 2,
                "name": "",
                "columns": [
                    "key"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "key"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_3": {
                "tableId": 4,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 3,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_4": {
                "tableId": 7,
                "name": "",
                "columns": [
                    "email"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "email"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 4,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_5": {
                "tableId": 8,
                "name": "personal_access_tokens_tokenable_type_tokenable_id_index",
                "columns": [
                    "tokenable_type",
                    "tokenable_id"
                ],
                "algorithm": null,
                "type": "index",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "personal_access_tokens_tokenable_type_tokenable_id_index",
                    "columns": [
                        "tokenable_type",
                        "tokenable_id"
                    ],
                    "algorithm": null,
                    "type": "index",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 5,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_6": {
                "tableId": 9,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 6,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_7": {
                "tableId": 12,
                "name": "cities_province_id_foreign",
                "columns": [
                    "province_id"
                ],
                "type": "foreign",
                "on": "provinces",
                "onTableId": 11,
                "references": "id",
                "referencesColumnId": 66,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 7,
                "createdAt": "2024-07-29 10:36:44",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "cities_province_id_foreign",
                    "columns": [
                        "province_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "provinces",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_8": {
                "tableId": 13,
                "name": "districts_city_id_foreign",
                "columns": [
                    "city_id"
                ],
                "type": "foreign",
                "on": "cities",
                "onTableId": 12,
                "references": "id",
                "referencesColumnId": 69,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 8,
                "createdAt": "2024-07-29 10:36:53",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "districts_city_id_foreign",
                    "columns": [
                        "city_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "cities",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_9": {
                "tableId": 14,
                "name": "subdistricts_district_id_foreign",
                "columns": [
                    "district_id"
                ],
                "type": "foreign",
                "on": "districts",
                "onTableId": 13,
                "references": "id",
                "referencesColumnId": 72,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 9,
                "createdAt": "2024-07-29 10:37:09",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "subdistricts_district_id_foreign",
                    "columns": [
                        "district_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "districts",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_10": {
                "tableId": 15,
                "name": "postal_codes_province_id_foreign",
                "columns": [
                    "province_id"
                ],
                "type": "foreign",
                "on": "provinces",
                "onTableId": 11,
                "references": "id",
                "referencesColumnId": 66,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 10,
                "createdAt": "2024-07-29 10:37:19",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "postal_codes_province_id_foreign",
                    "columns": [
                        "province_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "provinces",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_11": {
                "tableId": 15,
                "name": "postal_codes_city_id_foreign",
                "columns": [
                    "city_id"
                ],
                "type": "foreign",
                "on": "cities",
                "onTableId": 12,
                "references": "id",
                "referencesColumnId": 69,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 11,
                "createdAt": "2024-07-29 10:37:25",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "postal_codes_city_id_foreign",
                    "columns": [
                        "city_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "cities",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_12": {
                "tableId": 15,
                "name": "postal_codes_district_id_foreign",
                "columns": [
                    "district_id"
                ],
                "type": "foreign",
                "on": "districts",
                "onTableId": 13,
                "references": "id",
                "referencesColumnId": 72,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 12,
                "createdAt": "2024-07-29 10:37:32",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "postal_codes_district_id_foreign",
                    "columns": [
                        "district_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "districts",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_13": {
                "tableId": 15,
                "name": "postal_codes_subdistrict_id_foreign",
                "columns": [
                    "subdistrict_id"
                ],
                "type": "foreign",
                "on": "subdistricts",
                "onTableId": 14,
                "references": "id",
                "referencesColumnId": 75,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 13,
                "createdAt": "2024-07-29 10:37:38",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "postal_codes_subdistrict_id_foreign",
                    "columns": [
                        "subdistrict_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "subdistricts",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_15": {
                "tableId": 19,
                "name": "charger_locations_provider_id_foreign",
                "columns": [
                    "provider_id"
                ],
                "type": "foreign",
                "on": "providers",
                "onTableId": 18,
                "references": "id",
                "referencesColumnId": 102,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 15,
                "createdAt": "2024-07-29 10:46:19",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charger_locations_provider_id_foreign",
                    "columns": [
                        "provider_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "providers",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_16": {
                "tableId": 19,
                "name": "charger_locations_province_id_foreign",
                "columns": [
                    "province_id"
                ],
                "type": "foreign",
                "on": "provinces",
                "onTableId": 11,
                "references": "id",
                "referencesColumnId": 66,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 16,
                "createdAt": "2024-07-29 10:48:27",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charger_locations_province_id_foreign",
                    "columns": [
                        "province_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "provinces",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_17": {
                "tableId": 19,
                "name": "charger_locations_city_id_foreign",
                "columns": [
                    "city_id"
                ],
                "type": "foreign",
                "on": "cities",
                "onTableId": 12,
                "references": "id",
                "referencesColumnId": 69,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 17,
                "createdAt": "2024-07-29 10:48:34",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charger_locations_city_id_foreign",
                    "columns": [
                        "city_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "cities",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_18": {
                "tableId": 19,
                "name": "charger_locations_district_id_foreign",
                "columns": [
                    "district_id"
                ],
                "type": "foreign",
                "on": "districts",
                "onTableId": 13,
                "references": "id",
                "referencesColumnId": 72,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 18,
                "createdAt": "2024-07-29 10:48:40",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charger_locations_district_id_foreign",
                    "columns": [
                        "district_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "districts",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_19": {
                "tableId": 19,
                "name": "charger_locations_subdistrict_id_foreign",
                "columns": [
                    "subdistrict_id"
                ],
                "type": "foreign",
                "on": "subdistricts",
                "onTableId": 14,
                "references": "id",
                "referencesColumnId": 75,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 19,
                "createdAt": "2024-07-29 10:48:46",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charger_locations_subdistrict_id_foreign",
                    "columns": [
                        "subdistrict_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "subdistricts",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_20": {
                "tableId": 19,
                "name": "charger_locations_postal_code_id_foreign",
                "columns": [
                    "postal_code_id"
                ],
                "type": "foreign",
                "on": "postal_codes",
                "onTableId": 15,
                "references": "id",
                "referencesColumnId": 78,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 20,
                "createdAt": "2024-07-29 10:48:53",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charger_locations_postal_code_id_foreign",
                    "columns": [
                        "postal_code_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "postal_codes",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_21": {
                "tableId": 19,
                "name": "charger_locations_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 53,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 21,
                "createdAt": "2024-07-29 10:49:02",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charger_locations_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_27": {
                "tableId": 23,
                "name": "model_vehicles_brand_vehicle_id_foreign",
                "columns": [
                    "brand_vehicle_id"
                ],
                "type": "foreign",
                "on": "brand_vehicles",
                "onTableId": 22,
                "references": "id",
                "referencesColumnId": 145,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 27,
                "createdAt": "2024-07-29 11:00:24",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "model_vehicles_brand_vehicle_id_foreign",
                    "columns": [
                        "brand_vehicle_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "brand_vehicles",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_28": {
                "tableId": 24,
                "name": "type_vehicles_model_vehicle_id_foreign",
                "columns": [
                    "model_vehicle_id"
                ],
                "type": "foreign",
                "on": "model_vehicles",
                "onTableId": 23,
                "references": "id",
                "referencesColumnId": 149,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 28,
                "createdAt": "2024-07-29 11:00:40",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "type_vehicles_model_vehicle_id_foreign",
                    "columns": [
                        "model_vehicle_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "model_vehicles",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_30": {
                "tableId": 25,
                "name": "vehicles_brand_vehicle_id_foreign",
                "columns": [
                    "brand_vehicle_id"
                ],
                "type": "foreign",
                "on": "brand_vehicles",
                "onTableId": 22,
                "references": "id",
                "referencesColumnId": 145,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 30,
                "createdAt": "2024-07-29 11:03:15",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "vehicles_brand_vehicle_id_foreign",
                    "columns": [
                        "brand_vehicle_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "brand_vehicles",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_31": {
                "tableId": 25,
                "name": "vehicles_model_vehicle_id_foreign",
                "columns": [
                    "model_vehicle_id"
                ],
                "type": "foreign",
                "on": "model_vehicles",
                "onTableId": 23,
                "references": "id",
                "referencesColumnId": 149,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 31,
                "createdAt": "2024-07-29 11:03:31",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "vehicles_model_vehicle_id_foreign",
                    "columns": [
                        "model_vehicle_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "model_vehicles",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_32": {
                "tableId": 25,
                "name": "vehicles_type_vehicle_id_foreign",
                "columns": [
                    "type_vehicle_id"
                ],
                "type": "foreign",
                "on": "type_vehicles",
                "onTableId": 24,
                "references": "id",
                "referencesColumnId": 153,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 32,
                "createdAt": "2024-07-29 11:03:38",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "vehicles_type_vehicle_id_foreign",
                    "columns": [
                        "type_vehicle_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "type_vehicles",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_36": {
                "tableId": 29,
                "name": "type_chargers_current_charger_id_foreign",
                "columns": [
                    "current_charger_id"
                ],
                "type": "foreign",
                "on": "current_chargers",
                "onTableId": 28,
                "references": "id",
                "referencesColumnId": 179,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 36,
                "createdAt": "2024-07-29 11:15:47",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "type_chargers_current_charger_id_foreign",
                    "columns": [
                        "current_charger_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "current_chargers",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_37": {
                "tableId": 27,
                "name": "power_chargers_type_charger_id_foreign",
                "columns": [
                    "type_charger_id"
                ],
                "type": "foreign",
                "on": "type_chargers",
                "onTableId": 29,
                "references": "id",
                "referencesColumnId": 182,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 37,
                "createdAt": "2024-07-29 11:15:58",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "power_chargers_type_charger_id_foreign",
                    "columns": [
                        "type_charger_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "type_chargers",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_38": {
                "tableId": 26,
                "name": "chargers_current_charger_id_foreign",
                "columns": [
                    "current_charger_id"
                ],
                "type": "foreign",
                "on": "current_chargers",
                "onTableId": 28,
                "references": "id",
                "referencesColumnId": 179,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 38,
                "createdAt": "2024-07-29 11:19:19",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "chargers_current_charger_id_foreign",
                    "columns": [
                        "current_charger_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "current_chargers",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_39": {
                "tableId": 26,
                "name": "chargers_type_charger_id_foreign",
                "columns": [
                    "type_charger_id"
                ],
                "type": "foreign",
                "on": "type_chargers",
                "onTableId": 29,
                "references": "id",
                "referencesColumnId": 182,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 39,
                "createdAt": "2024-07-29 11:19:26",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "chargers_type_charger_id_foreign",
                    "columns": [
                        "type_charger_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "type_chargers",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_40": {
                "tableId": 26,
                "name": "chargers_power_charger_id_foreign",
                "columns": [
                    "power_charger_id"
                ],
                "type": "foreign",
                "on": "power_chargers",
                "onTableId": 27,
                "references": "id",
                "referencesColumnId": 176,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 40,
                "createdAt": "2024-07-29 11:19:35",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "chargers_power_charger_id_foreign",
                    "columns": [
                        "power_charger_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "power_chargers",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_41": {
                "tableId": 26,
                "name": "chargers_charger_location_id_foreign",
                "columns": [
                    "charger_location_id"
                ],
                "type": "foreign",
                "on": "charger_locations",
                "onTableId": 19,
                "references": "id",
                "referencesColumnId": 109,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 41,
                "createdAt": "2024-07-29 11:20:41",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "chargers_charger_location_id_foreign",
                    "columns": [
                        "charger_location_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "charger_locations",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_43": {
                "tableId": 30,
                "name": "charges_vehicle_id_foreign",
                "columns": [
                    "vehicle_id"
                ],
                "type": "foreign",
                "on": "vehicles",
                "onTableId": 25,
                "references": "id",
                "referencesColumnId": 159,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 43,
                "createdAt": "2024-07-29 11:24:43",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charges_vehicle_id_foreign",
                    "columns": [
                        "vehicle_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "vehicles",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_44": {
                "tableId": 30,
                "name": "charges_charger_location_id_foreign",
                "columns": [
                    "charger_location_id"
                ],
                "type": "foreign",
                "on": "charger_locations",
                "onTableId": 19,
                "references": "id",
                "referencesColumnId": 109,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 44,
                "createdAt": "2024-07-29 11:25:08",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charges_charger_location_id_foreign",
                    "columns": [
                        "charger_location_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "charger_locations",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_45": {
                "tableId": 30,
                "name": "charges_charger_id_foreign",
                "columns": [
                    "charger_id"
                ],
                "type": "foreign",
                "on": "chargers",
                "onTableId": 26,
                "references": "id",
                "referencesColumnId": 170,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 45,
                "createdAt": "2024-07-29 11:25:22",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charges_charger_id_foreign",
                    "columns": [
                        "charger_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "chargers",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_47": {
                "tableId": 31,
                "name": "state_of_healths_vehicle_id_foreign",
                "columns": [
                    "vehicle_id"
                ],
                "type": "foreign",
                "on": "vehicles",
                "onTableId": 25,
                "references": "id",
                "referencesColumnId": 159,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 47,
                "createdAt": "2024-07-29 13:03:42",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "state_of_healths_vehicle_id_foreign",
                    "columns": [
                        "vehicle_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "vehicles",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_48": {
                "tableId": 31,
                "name": "state_of_healths_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 53,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 48,
                "createdAt": "2024-07-29 13:04:49",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "state_of_healths_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_51": {
                "tableId": 18,
                "name": "providers_province_id_foreign",
                "columns": [
                    "province_id"
                ],
                "type": "foreign",
                "on": "provinces",
                "onTableId": 11,
                "references": "id",
                "referencesColumnId": 66,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 51,
                "createdAt": "2024-07-29 21:30:12",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "providers_province_id_foreign",
                    "columns": [
                        "province_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "provinces",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_52": {
                "tableId": 18,
                "name": "providers_city_id_foreign",
                "columns": [
                    "city_id"
                ],
                "type": "foreign",
                "on": "cities",
                "onTableId": 12,
                "references": "id",
                "referencesColumnId": 69,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 52,
                "createdAt": "2024-07-29 21:30:20",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "providers_city_id_foreign",
                    "columns": [
                        "city_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "cities",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_53": {
                "tableId": 18,
                "name": "providers_district_id_foreign",
                "columns": [
                    "district_id"
                ],
                "type": "foreign",
                "on": "districts",
                "onTableId": 13,
                "references": "id",
                "referencesColumnId": 72,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 53,
                "createdAt": "2024-07-29 21:30:29",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "providers_district_id_foreign",
                    "columns": [
                        "district_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "districts",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_54": {
                "tableId": 18,
                "name": "providers_subdistrict_id_foreign",
                "columns": [
                    "subdistrict_id"
                ],
                "type": "foreign",
                "on": "subdistricts",
                "onTableId": 14,
                "references": "id",
                "referencesColumnId": 75,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 54,
                "createdAt": "2024-07-29 21:30:36",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "providers_subdistrict_id_foreign",
                    "columns": [
                        "subdistrict_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "subdistricts",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_55": {
                "tableId": 18,
                "name": "providers_postal_code_id_foreign",
                "columns": [
                    "postal_code_id"
                ],
                "type": "foreign",
                "on": "postal_codes",
                "onTableId": 15,
                "references": "id",
                "referencesColumnId": 78,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 55,
                "createdAt": "2024-07-29 21:30:48",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "providers_postal_code_id_foreign",
                    "columns": [
                        "postal_code_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "postal_codes",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_56": {
                "tableId": 25,
                "name": "vehicles_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 53,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 56,
                "createdAt": "2024-07-30 11:56:02",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "vehicles_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_57": {
                "tableId": 30,
                "name": "charges_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 53,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 57,
                "createdAt": "2024-07-30 11:57:42",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "charges_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_59": {
                "tableId": 32,
                "name": "model_has_permissions_model_id_model_type_index",
                "columns": [
                    "model_id",
                    "model_type"
                ],
                "algorithm": null,
                "type": "index",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "model_has_permissions_model_id_model_type_index",
                    "columns": [
                        "model_id",
                        "model_type"
                    ],
                    "algorithm": null,
                    "type": "index",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 59,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_60": {
                "tableId": 32,
                "name": "",
                "columns": [
                    "permission_id",
                    "model_id",
                    "model_type"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "permission_id",
                        "model_id",
                        "model_type"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 60,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_61": {
                "tableId": 32,
                "name": "model_has_permissions_permission_id_foreign",
                "columns": [
                    "permission_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "permissions",
                "references": "id",
                "onUpdate": "no action",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "model_has_permissions_permission_id_foreign",
                    "columns": [
                        "permission_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "permissions",
                    "references": "id",
                    "onUpdate": "no action",
                    "onDelete": "cascade"
                },
                "id": 61,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "onTableId": 34,
                "referencesColumnId": 259,
                "removed": false
            },
            "item_62": {
                "tableId": 33,
                "name": "model_has_roles_model_id_model_type_index",
                "columns": [
                    "model_id",
                    "model_type"
                ],
                "algorithm": null,
                "type": "index",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "model_has_roles_model_id_model_type_index",
                    "columns": [
                        "model_id",
                        "model_type"
                    ],
                    "algorithm": null,
                    "type": "index",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 62,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_63": {
                "tableId": 33,
                "name": "",
                "columns": [
                    "role_id",
                    "model_id",
                    "model_type"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "role_id",
                        "model_id",
                        "model_type"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 63,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_64": {
                "tableId": 33,
                "name": "model_has_roles_role_id_foreign",
                "columns": [
                    "role_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "roles",
                "references": "id",
                "onUpdate": "no action",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "model_has_roles_role_id_foreign",
                    "columns": [
                        "role_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "roles",
                    "references": "id",
                    "onUpdate": "no action",
                    "onDelete": "cascade"
                },
                "id": 64,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "onTableId": 36,
                "referencesColumnId": 266,
                "removed": false
            },
            "item_65": {
                "tableId": 34,
                "name": "permissions_name_guard_name_unique",
                "columns": [
                    "name",
                    "guard_name"
                ],
                "algorithm": null,
                "type": "unique",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "permissions_name_guard_name_unique",
                    "columns": [
                        "name",
                        "guard_name"
                    ],
                    "algorithm": null,
                    "type": "unique",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 65,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_66": {
                "tableId": 35,
                "name": "",
                "columns": [
                    "permission_id",
                    "role_id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "permission_id",
                        "role_id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 66,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_67": {
                "tableId": 35,
                "name": "role_has_permissions_role_id_foreign",
                "columns": [
                    "role_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "roles",
                "references": "id",
                "onUpdate": "no action",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "role_has_permissions_role_id_foreign",
                    "columns": [
                        "role_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "roles",
                    "references": "id",
                    "onUpdate": "no action",
                    "onDelete": "cascade"
                },
                "id": 67,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "onTableId": 36,
                "referencesColumnId": 266,
                "removed": false
            },
            "item_68": {
                "tableId": 35,
                "name": "role_has_permissions_permission_id_foreign",
                "columns": [
                    "permission_id"
                ],
                "algorithm": null,
                "type": "foreign",
                "on": "permissions",
                "references": "id",
                "onUpdate": "no action",
                "onDelete": "cascade",
                "schemaState": {
                    "name": "role_has_permissions_permission_id_foreign",
                    "columns": [
                        "permission_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "permissions",
                    "references": "id",
                    "onUpdate": "no action",
                    "onDelete": "cascade"
                },
                "id": 68,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "onTableId": 34,
                "referencesColumnId": 259,
                "removed": false
            },
            "item_69": {
                "tableId": 36,
                "name": "roles_name_guard_name_unique",
                "columns": [
                    "name",
                    "guard_name"
                ],
                "algorithm": null,
                "type": "unique",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "roles_name_guard_name_unique",
                    "columns": [
                        "name",
                        "guard_name"
                    ],
                    "algorithm": null,
                    "type": "unique",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 69,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_70": {
                "tableId": 19,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 70,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_71": {
                "tableId": 26,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 71,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_72": {
                "tableId": 30,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 72,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_73": {
                "tableId": 31,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 73,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_74": {
                "tableId": 25,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 74,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_75": {
                "tableId": 18,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 75,
                "createdAt": "2024-08-03 08:11:51",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false
            },
            "item_76": {
                "tableId": 37,
                "name": "discount_home_chargings_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 53,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 76,
                "createdAt": "2024-08-19 08:50:46",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "discount_home_chargings_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_77": {
                "tableId": 37,
                "name": "discount_home_chargings_charger_location_id_foreign",
                "columns": [
                    "charger_location_id"
                ],
                "type": "foreign",
                "on": "charger_locations",
                "onTableId": 19,
                "references": "id",
                "referencesColumnId": 109,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 77,
                "createdAt": "2024-08-19 08:53:50",
                "updatedAt": "2024-08-19 08:58:39",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "discount_home_chargings_charger_location_id_foreign",
                    "columns": [
                        "charger_location_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "charger_locations",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            }
        },
        "index_column": {
            "item_1": {
                "indexId": 1,
                "columnId": 1,
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "__tableData": {
                "count": 72,
                "lastPrimaryKey": 87,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {}
                    },
                    "62": {
                        "hasMany": {}
                    },
                    "63": {
                        "hasMany": {}
                    },
                    "64": {
                        "hasMany": {}
                    },
                    "65": {
                        "hasMany": {}
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {}
                    },
                    "68": {
                        "hasMany": {}
                    },
                    "69": {
                        "hasMany": {}
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {}
                    },
                    "72": {
                        "hasMany": {}
                    },
                    "73": {
                        "hasMany": {}
                    },
                    "74": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {}
                    },
                    "80": {
                        "hasMany": {}
                    },
                    "81": {
                        "hasMany": {}
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {}
                    },
                    "84": {
                        "hasMany": {}
                    },
                    "85": {
                        "hasMany": {}
                    },
                    "86": {
                        "hasMany": {}
                    },
                    "87": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "indexId": 2,
                "columnId": 4,
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_3": {
                "indexId": 3,
                "columnId": 14,
                "id": 3,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_4": {
                "indexId": 4,
                "columnId": 34,
                "id": 4,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_5": {
                "indexId": 5,
                "columnId": 38,
                "id": 5,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_6": {
                "indexId": 5,
                "columnId": 39,
                "id": 6,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_7": {
                "indexId": 6,
                "columnId": 47,
                "id": 7,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_8": {
                "indexId": 7,
                "columnId": 85,
                "id": 8,
                "createdAt": "2024-07-29 10:36:44",
                "updatedAt": "2024-07-29 10:36:44"
            },
            "item_9": {
                "indexId": 8,
                "columnId": 86,
                "id": 9,
                "createdAt": "2024-07-29 10:36:53",
                "updatedAt": "2024-07-29 10:36:53"
            },
            "item_10": {
                "indexId": 9,
                "columnId": 87,
                "id": 10,
                "createdAt": "2024-07-29 10:37:09",
                "updatedAt": "2024-07-29 10:37:09"
            },
            "item_11": {
                "indexId": 10,
                "columnId": 88,
                "id": 11,
                "createdAt": "2024-07-29 10:37:19",
                "updatedAt": "2024-07-29 10:37:19"
            },
            "item_12": {
                "indexId": 11,
                "columnId": 89,
                "id": 12,
                "createdAt": "2024-07-29 10:37:25",
                "updatedAt": "2024-07-29 10:37:25"
            },
            "item_13": {
                "indexId": 12,
                "columnId": 90,
                "id": 13,
                "createdAt": "2024-07-29 10:37:32",
                "updatedAt": "2024-07-29 10:37:32"
            },
            "item_14": {
                "indexId": 13,
                "columnId": 91,
                "id": 14,
                "createdAt": "2024-07-29 10:37:38",
                "updatedAt": "2024-07-29 10:37:38"
            },
            "item_16": {
                "indexId": 15,
                "columnId": 115,
                "id": 16,
                "createdAt": "2024-07-29 10:46:19",
                "updatedAt": "2024-07-29 10:46:19"
            },
            "item_17": {
                "indexId": 16,
                "columnId": 124,
                "id": 17,
                "createdAt": "2024-07-29 10:48:27",
                "updatedAt": "2024-07-29 10:48:27"
            },
            "item_18": {
                "indexId": 17,
                "columnId": 125,
                "id": 18,
                "createdAt": "2024-07-29 10:48:34",
                "updatedAt": "2024-07-29 10:48:34"
            },
            "item_19": {
                "indexId": 18,
                "columnId": 126,
                "id": 19,
                "createdAt": "2024-07-29 10:48:40",
                "updatedAt": "2024-07-29 10:48:40"
            },
            "item_20": {
                "indexId": 19,
                "columnId": 127,
                "id": 20,
                "createdAt": "2024-07-29 10:48:46",
                "updatedAt": "2024-07-29 10:48:46"
            },
            "item_21": {
                "indexId": 20,
                "columnId": 128,
                "id": 21,
                "createdAt": "2024-07-29 10:48:53",
                "updatedAt": "2024-07-29 10:48:53"
            },
            "item_22": {
                "indexId": 21,
                "columnId": 129,
                "id": 22,
                "createdAt": "2024-07-29 10:49:02",
                "updatedAt": "2024-07-29 10:49:02"
            },
            "item_28": {
                "indexId": 27,
                "columnId": 157,
                "id": 28,
                "createdAt": "2024-07-29 11:00:24",
                "updatedAt": "2024-07-29 11:00:24"
            },
            "item_29": {
                "indexId": 28,
                "columnId": 158,
                "id": 29,
                "createdAt": "2024-07-29 11:00:40",
                "updatedAt": "2024-07-29 11:00:40"
            },
            "item_31": {
                "indexId": 30,
                "columnId": 163,
                "id": 31,
                "createdAt": "2024-07-29 11:03:15",
                "updatedAt": "2024-07-29 11:03:15"
            },
            "item_32": {
                "indexId": 31,
                "columnId": 164,
                "id": 32,
                "createdAt": "2024-07-29 11:03:31",
                "updatedAt": "2024-07-29 11:03:31"
            },
            "item_33": {
                "indexId": 32,
                "columnId": 165,
                "id": 33,
                "createdAt": "2024-07-29 11:03:38",
                "updatedAt": "2024-07-29 11:03:38"
            },
            "item_37": {
                "indexId": 36,
                "columnId": 188,
                "id": 37,
                "createdAt": "2024-07-29 11:15:47",
                "updatedAt": "2024-07-29 11:15:47"
            },
            "item_38": {
                "indexId": 37,
                "columnId": 189,
                "id": 38,
                "createdAt": "2024-07-29 11:15:58",
                "updatedAt": "2024-07-29 11:15:58"
            },
            "item_39": {
                "indexId": 38,
                "columnId": 190,
                "id": 39,
                "createdAt": "2024-07-29 11:19:19",
                "updatedAt": "2024-07-29 11:19:19"
            },
            "item_40": {
                "indexId": 39,
                "columnId": 191,
                "id": 40,
                "createdAt": "2024-07-29 11:19:26",
                "updatedAt": "2024-07-29 11:19:26"
            },
            "item_41": {
                "indexId": 40,
                "columnId": 192,
                "id": 41,
                "createdAt": "2024-07-29 11:19:35",
                "updatedAt": "2024-07-29 11:19:35"
            },
            "item_42": {
                "indexId": 41,
                "columnId": 193,
                "id": 42,
                "createdAt": "2024-07-29 11:20:41",
                "updatedAt": "2024-07-29 11:20:41"
            },
            "item_44": {
                "indexId": 43,
                "columnId": 204,
                "id": 44,
                "createdAt": "2024-07-29 11:24:43",
                "updatedAt": "2024-07-29 11:24:43"
            },
            "item_45": {
                "indexId": 44,
                "columnId": 207,
                "id": 45,
                "createdAt": "2024-07-29 11:25:08",
                "updatedAt": "2024-07-29 11:25:08"
            },
            "item_46": {
                "indexId": 45,
                "columnId": 208,
                "id": 46,
                "createdAt": "2024-07-29 11:25:22",
                "updatedAt": "2024-07-29 11:25:22"
            },
            "item_48": {
                "indexId": 47,
                "columnId": 228,
                "id": 48,
                "createdAt": "2024-07-29 13:03:42",
                "updatedAt": "2024-07-29 13:03:42"
            },
            "item_49": {
                "indexId": 48,
                "columnId": 232,
                "id": 49,
                "createdAt": "2024-07-29 13:04:49",
                "updatedAt": "2024-07-29 13:04:49"
            },
            "item_52": {
                "indexId": 51,
                "columnId": 240,
                "id": 52,
                "createdAt": "2024-07-29 21:30:12",
                "updatedAt": "2024-07-29 21:30:12"
            },
            "item_53": {
                "indexId": 52,
                "columnId": 241,
                "id": 53,
                "createdAt": "2024-07-29 21:30:20",
                "updatedAt": "2024-07-29 21:30:20"
            },
            "item_54": {
                "indexId": 53,
                "columnId": 242,
                "id": 54,
                "createdAt": "2024-07-29 21:30:29",
                "updatedAt": "2024-07-29 21:30:29"
            },
            "item_55": {
                "indexId": 54,
                "columnId": 243,
                "id": 55,
                "createdAt": "2024-07-29 21:30:36",
                "updatedAt": "2024-07-29 21:30:36"
            },
            "item_56": {
                "indexId": 55,
                "columnId": 244,
                "id": 56,
                "createdAt": "2024-07-29 21:30:48",
                "updatedAt": "2024-07-29 21:30:48"
            },
            "item_57": {
                "indexId": 56,
                "columnId": 248,
                "id": 57,
                "createdAt": "2024-07-30 11:56:02",
                "updatedAt": "2024-07-30 11:56:02"
            },
            "item_58": {
                "indexId": 57,
                "columnId": 249,
                "id": 58,
                "createdAt": "2024-07-30 11:57:42",
                "updatedAt": "2024-07-30 11:57:42"
            },
            "item_60": {
                "indexId": 59,
                "columnId": 255,
                "id": 60,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_61": {
                "indexId": 59,
                "columnId": 254,
                "id": 61,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_62": {
                "indexId": 60,
                "columnId": 253,
                "id": 62,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_63": {
                "indexId": 60,
                "columnId": 255,
                "id": 63,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_64": {
                "indexId": 60,
                "columnId": 254,
                "id": 64,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_65": {
                "indexId": 61,
                "columnId": 253,
                "id": 65,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_66": {
                "indexId": 62,
                "columnId": 258,
                "id": 66,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_67": {
                "indexId": 62,
                "columnId": 257,
                "id": 67,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_68": {
                "indexId": 63,
                "columnId": 256,
                "id": 68,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_69": {
                "indexId": 63,
                "columnId": 258,
                "id": 69,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_70": {
                "indexId": 63,
                "columnId": 257,
                "id": 70,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_71": {
                "indexId": 64,
                "columnId": 256,
                "id": 71,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_72": {
                "indexId": 65,
                "columnId": 260,
                "id": 72,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_73": {
                "indexId": 65,
                "columnId": 261,
                "id": 73,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_74": {
                "indexId": 66,
                "columnId": 264,
                "id": 74,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_75": {
                "indexId": 66,
                "columnId": 265,
                "id": 75,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_76": {
                "indexId": 67,
                "columnId": 265,
                "id": 76,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_77": {
                "indexId": 68,
                "columnId": 264,
                "id": 77,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_78": {
                "indexId": 69,
                "columnId": 267,
                "id": 78,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_79": {
                "indexId": 69,
                "columnId": 268,
                "id": 79,
                "createdAt": "2024-07-30 19:20:45",
                "updatedAt": "2024-07-30 19:20:45"
            },
            "item_80": {
                "indexId": 70,
                "columnId": 109,
                "id": 80,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-02 23:52:14"
            },
            "item_81": {
                "indexId": 71,
                "columnId": 170,
                "id": 81,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-02 23:52:14"
            },
            "item_82": {
                "indexId": 72,
                "columnId": 201,
                "id": 82,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-02 23:52:14"
            },
            "item_83": {
                "indexId": 73,
                "columnId": 223,
                "id": 83,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-02 23:52:14"
            },
            "item_84": {
                "indexId": 74,
                "columnId": 159,
                "id": 84,
                "createdAt": "2024-08-02 23:52:14",
                "updatedAt": "2024-08-02 23:52:14"
            },
            "item_85": {
                "indexId": 75,
                "columnId": 102,
                "id": 85,
                "createdAt": "2024-08-03 08:11:51",
                "updatedAt": "2024-08-03 08:11:51"
            },
            "item_86": {
                "indexId": 76,
                "columnId": 283,
                "id": 86,
                "createdAt": "2024-08-19 08:50:46",
                "updatedAt": "2024-08-19 08:50:46"
            },
            "item_87": {
                "indexId": 77,
                "columnId": 288,
                "id": 87,
                "createdAt": "2024-08-19 08:53:50",
                "updatedAt": "2024-08-19 08:53:50"
            }
        },
        "models": {
            "item_1": {
                "projectId": 1,
                "name": "User",
                "fileName": "User.php",
                "tableName": "users",
                "class": "App\\Models\\User",
                "namespace": "App\\Models",
                "path": "Models/User.php",
                "casts": {
                    "email_verified_at": "datetime",
                    "password": "hashed"
                },
                "fillable": [
                    "name",
                    "email",
                    "password"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [
                    "password",
                    "remember_token",
                    "two_factor_recovery_codes",
                    "two_factor_secret"
                ],
                "appends": [
                    "profile_photo_url"
                ],
                "methods": [
                    {
                        "name": "canAccessPanel",
                        "content": "    public function canAccessPanel(Panel $panel): bool\n    {\n        $user = Auth::user();\n        $roles = $user->getRoleNames();\n\n        if ($panel->getId() === 'admin' && $roles->contains('admin')) {\n            return true;\n        } elseif ($panel->getId() === 'user' && $roles->contains('user')) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n"
                    }
                ],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "interfaces": [
                    "Filament\\Models\\Contracts\\FilamentUser"
                ],
                "traits": [
                    "Spatie\\Permission\\Traits\\HasRoles",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Notifications\\Notifiable",
                    "Laravel\\Sanctum\\HasApiTokens",
                    "BezhanSalleh\\FilamentShield\\Traits\\HasPanelShield",
                    "Laravel\\Jetstream\\HasProfilePhoto",
                    "Laravel\\Fortify\\TwoFactorAuthenticatable"
                ],
                "allImports": [
                    "Filament\\Panel",
                    "Laravel\\Sanctum\\HasApiTokens",
                    "Illuminate\\Support\\Facades\\Auth",
                    "Spatie\\Permission\\Traits\\HasRoles",
                    "Laravel\\Jetstream\\HasProfilePhoto",
                    "Illuminate\\Notifications\\Notifiable",
                    "Filament\\Models\\Contracts\\FilamentUser",
                    "Laravel\\Fortify\\TwoFactorAuthenticatable",
                    "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                    "BezhanSalleh\\FilamentShield\\Traits\\HasPanelShield",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Foundation\\Auth\\User as Authenticatable"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": true,
                "schemaState": {
                    "name": "User",
                    "fileName": "User.php",
                    "tableName": "users",
                    "class": "App\\Models\\User",
                    "namespace": "App\\Models",
                    "path": "Models/User.php",
                    "casts": {
                        "email_verified_at": "datetime",
                        "password": "hashed"
                    },
                    "fillable": [
                        "name",
                        "email",
                        "password"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [
                        "password",
                        "remember_token",
                        "two_factor_recovery_codes",
                        "two_factor_secret"
                    ],
                    "appends": [
                        "profile_photo_url"
                    ],
                    "methods": [
                        {
                            "name": "canAccessPanel",
                            "content": "    public function canAccessPanel(Panel $panel): bool\n    {\n        $user = Auth::user();\n        $roles = $user->getRoleNames();\n\n        if ($panel->getId() === 'admin' && $roles->contains('admin')) {\n            return true;\n        } elseif ($panel->getId() === 'user' && $roles->contains('user')) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "interfaces": [
                        "Filament\\Models\\Contracts\\FilamentUser"
                    ],
                    "traits": [
                        "Spatie\\Permission\\Traits\\HasRoles",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Notifications\\Notifiable",
                        "Laravel\\Sanctum\\HasApiTokens",
                        "BezhanSalleh\\FilamentShield\\Traits\\HasPanelShield",
                        "Laravel\\Jetstream\\HasProfilePhoto",
                        "Laravel\\Fortify\\TwoFactorAuthenticatable"
                    ],
                    "allImports": [
                        "Filament\\Panel",
                        "Laravel\\Sanctum\\HasApiTokens",
                        "Illuminate\\Support\\Facades\\Auth",
                        "Spatie\\Permission\\Traits\\HasRoles",
                        "Laravel\\Jetstream\\HasProfilePhoto",
                        "Illuminate\\Notifications\\Notifiable",
                        "Filament\\Models\\Contracts\\FilamentUser",
                        "Laravel\\Fortify\\TwoFactorAuthenticatable",
                        "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                        "BezhanSalleh\\FilamentShield\\Traits\\HasPanelShield",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Foundation\\Auth\\User as Authenticatable"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": true
                },
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 09:14:57",
                "plural": "Users",
                "pluralAndSingularAreSame": false,
                "tableId": 10,
                "callSeeder": false,
                "seederQuantity": 5,
                "attributesComments": true,
                "methodsComments": true,
                "removed": false,
                "hooksWhenSchemaWasRead": {}
            },
            "__tableData": {
                "count": 20,
                "lastPrimaryKey": 253,
                "index": {
                    "1": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                1,
                                2,
                                3
                            ],
                            "hidden_model_column.modelId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "casts_model_column.modelId": [
                                1,
                                2
                            ],
                            "relationships.modelId": [
                                29,
                                83,
                                167,
                                169,
                                380
                            ],
                            "relationships.relatedModelId": [
                                30,
                                84,
                                168,
                                170,
                                381
                            ],
                            "cruds.modelId": [
                                33
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "relationships.modelId": [
                                1,
                                7,
                                19,
                                112
                            ],
                            "relationships.relatedModelId": [
                                2,
                                8,
                                20,
                                113
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                1,
                                4,
                                10,
                                22,
                                115
                            ],
                            "relationships.modelId": [
                                2,
                                3,
                                9,
                                21,
                                114
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                3,
                                6,
                                12,
                                24,
                                117
                            ],
                            "relationships.modelId": [
                                4,
                                5,
                                11,
                                23,
                                116
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                5,
                                14,
                                26,
                                119
                            ],
                            "relationships.modelId": [
                                6,
                                13,
                                25,
                                118
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                7,
                                9,
                                11,
                                13,
                                28,
                                121
                            ],
                            "relationships.modelId": [
                                8,
                                10,
                                12,
                                14,
                                27,
                                120
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                18,
                                112,
                                114,
                                116,
                                118,
                                120
                            ],
                            "relationships.modelId": [
                                17,
                                113,
                                115,
                                117,
                                119,
                                121
                            ],
                            "cruds.modelId": [
                                32
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                17,
                                19,
                                21,
                                23,
                                25,
                                27,
                                29,
                                70,
                                76,
                                383
                            ],
                            "relationships.modelId": [
                                18,
                                20,
                                22,
                                24,
                                26,
                                28,
                                30,
                                69,
                                75,
                                382
                            ],
                            "cruds.modelId": [
                                4,
                                21
                            ],
                            "fillable_model_column.modelId": [
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "relationships.modelId": [],
                            "relationships.relatedModelId": [],
                            "cruds.modelId": []
                        }
                    },
                    "13": {
                        "hasMany": {
                            "relationships.modelId": [
                                41,
                                47
                            ],
                            "relationships.relatedModelId": [
                                42,
                                48
                            ],
                            "cruds.modelId": [
                                6
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                41,
                                44,
                                50
                            ],
                            "relationships.modelId": [
                                42,
                                43,
                                49
                            ],
                            "cruds.modelId": [
                                7,
                                30
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                43,
                                52
                            ],
                            "relationships.modelId": [
                                44,
                                51
                            ],
                            "cruds.modelId": [
                                28,
                                31
                            ],
                            "casts_model_column.modelId": [
                                3
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                47,
                                49,
                                51,
                                74,
                                82,
                                167
                            ],
                            "relationships.modelId": [
                                48,
                                50,
                                52,
                                73,
                                81,
                                168
                            ],
                            "cruds.modelId": [
                                9,
                                17
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                63,
                                65,
                                67,
                                69,
                                366
                            ],
                            "relationships.modelId": [
                                64,
                                66,
                                68,
                                70,
                                367
                            ],
                            "cruds.modelId": [
                                22,
                                27
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                61,
                                68
                            ],
                            "relationships.modelId": [
                                62,
                                67
                            ],
                            "cruds.modelId": [
                                11
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "relationships.modelId": [
                                59,
                                63
                            ],
                            "relationships.relatedModelId": [
                                60,
                                64
                            ],
                            "cruds.modelId": [
                                12
                            ]
                        }
                    },
                    "20": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                59,
                                62,
                                66
                            ],
                            "relationships.modelId": [
                                60,
                                61,
                                65
                            ],
                            "cruds.modelId": [
                                13
                            ]
                        }
                    },
                    "25": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                73,
                                75,
                                169,
                                367
                            ],
                            "relationships.modelId": [
                                74,
                                76,
                                170,
                                366
                            ],
                            "cruds.modelId": [
                                14,
                                16,
                                18
                            ],
                            "fillable_model_column.modelId": [
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35
                            ]
                        }
                    },
                    "32": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                81,
                                83
                            ],
                            "relationships.modelId": [
                                82,
                                84
                            ],
                            "cruds.modelId": [
                                19,
                                29
                            ]
                        }
                    },
                    "249": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                380,
                                382
                            ],
                            "relationships.modelId": [
                                381,
                                383
                            ],
                            "cruds.modelId": [
                                34
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "tableId": 11,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": false,
                "guarded": [],
                "name": "Province",
                "plural": "Provinces",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Province",
                "fileName": "Province.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 2,
                "createdAt": "2024-07-29 10:35:13",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "provinces",
                "path": "Models/Province.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Province",
                    "fileName": "Province.php",
                    "tableName": "provinces",
                    "class": "App\\Models\\Province",
                    "namespace": "App\\Models",
                    "path": "Models/Province.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": false,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_3": {
                "tableId": 12,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": false,
                "guarded": [],
                "name": "City",
                "plural": "Cities",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\City",
                "fileName": "City.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 3,
                "createdAt": "2024-07-29 10:35:22",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "cities",
                "path": "Models/City.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "City",
                    "fileName": "City.php",
                    "tableName": "cities",
                    "class": "App\\Models\\City",
                    "namespace": "App\\Models",
                    "path": "Models/City.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": false,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_4": {
                "tableId": 13,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": false,
                "guarded": [],
                "name": "District",
                "plural": "Districts",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\District",
                "fileName": "District.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 4,
                "createdAt": "2024-07-29 10:35:41",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "districts",
                "path": "Models/District.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "District",
                    "fileName": "District.php",
                    "tableName": "districts",
                    "class": "App\\Models\\District",
                    "namespace": "App\\Models",
                    "path": "Models/District.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": false,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_5": {
                "tableId": 14,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": false,
                "guarded": [],
                "name": "Subdistrict",
                "plural": "Subdistricts",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Subdistrict",
                "fileName": "Subdistrict.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 5,
                "createdAt": "2024-07-29 10:35:52",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "subdistricts",
                "path": "Models/Subdistrict.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Subdistrict",
                    "fileName": "Subdistrict.php",
                    "tableName": "subdistricts",
                    "class": "App\\Models\\Subdistrict",
                    "namespace": "App\\Models",
                    "path": "Models/Subdistrict.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": false,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_6": {
                "tableId": 15,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": false,
                "guarded": [],
                "name": "PostalCode",
                "plural": "PostalCodes",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\PostalCode",
                "fileName": "PostalCode.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 6,
                "createdAt": "2024-07-29 10:36:07",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "postal_codes",
                "path": "Models/PostalCode.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "PostalCode",
                    "fileName": "PostalCode.php",
                    "tableName": "postal_codes",
                    "class": "App\\Models\\PostalCode",
                    "namespace": "App\\Models",
                    "path": "Models/PostalCode.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": false,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_9": {
                "tableId": 18,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Provider",
                "plural": "Providers",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Provider",
                "fileName": "Provider.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 9,
                "createdAt": "2024-07-29 10:41:24",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "providers",
                "path": "Models/Provider.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Provider",
                    "fileName": "Provider.php",
                    "tableName": "providers",
                    "class": "App\\Models\\Provider",
                    "namespace": "App\\Models",
                    "path": "Models/Provider.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_10": {
                "tableId": 19,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": false,
                "hasTimestamps": true,
                "guarded": [
                    "*"
                ],
                "name": "ChargerLocation",
                "plural": "ChargerLocations",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\ChargerLocation",
                "fileName": "ChargerLocation.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [
                    {
                        "name": "getNameAttribute",
                        "content": "    public function getNameAttribute()\n    {\n        // Return the name attribute or any transformation you need\n        return $this->attributes['name'] ?? 'Default Name';\n    }\n"
                    },
                    {
                        "name": "getLocationAttribute",
                        "content": "    public function getLocationAttribute(): array\n    {\n        return [\n            \"lat\" => (float)$this->latitude,\n            \"lng\" => (float)$this->longitude,\n        ];\n    }\n"
                    },
                    {
                        "name": "setLocationAttribute",
                        "content": "    public function setLocationAttribute(?array $location): void\n    {\n        if (is_array($location))\n        {\n            $this->attributes['latitude'] = $location['lat'];\n            $this->attributes['longitude'] = $location['lng'];\n            unset($this->attributes['location']);\n        }\n    }\n"
                    },
                    {
                        "name": "getLatLngAttributes",
                        "content": "    public static function getLatLngAttributes(): array\n    {\n        return [\n            'lat' => 'latitude',\n            'lng' => 'longitude',\n        ];\n    }\n"
                    },
                    {
                        "name": "getComputedLocation",
                        "content": "    public static function getComputedLocation(): string\n    {\n        return 'location';\n    }\n"
                    }
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes",
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [
                    "image",
                    "name",
                    "provider_id",
                    "location_on",
                    "status",
                    "description",
                    "latitude",
                    "longitude",
                    "parking",
                    "province_id",
                    "city_id",
                    "district_id",
                    "subdistrict_id",
                    "postal_code_id",
                    "user_id",
                    "location"
                ],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [
                    "name",
                    "location"
                ],
                "id": 10,
                "createdAt": "2024-07-29 10:45:50",
                "updatedAt": "2024-08-19 09:14:56",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "charger_locations",
                "path": "Models/ChargerLocation.php",
                "hasFillable": true,
                "hasSoftDeletes": true,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "ChargerLocation",
                    "fileName": "ChargerLocation.php",
                    "tableName": "charger_locations",
                    "class": "App\\Models\\ChargerLocation",
                    "namespace": "App\\Models",
                    "path": "Models/ChargerLocation.php",
                    "casts": [],
                    "fillable": [
                        "image",
                        "name",
                        "provider_id",
                        "location_on",
                        "status",
                        "description",
                        "latitude",
                        "longitude",
                        "parking",
                        "province_id",
                        "city_id",
                        "district_id",
                        "subdistrict_id",
                        "postal_code_id",
                        "user_id",
                        "location"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [
                        "name",
                        "location"
                    ],
                    "methods": [
                        {
                            "name": "getNameAttribute",
                            "content": "    public function getNameAttribute()\n    {\n        // Return the name attribute or any transformation you need\n        return $this->attributes['name'] ?? 'Default Name';\n    }\n"
                        },
                        {
                            "name": "getLocationAttribute",
                            "content": "    public function getLocationAttribute(): array\n    {\n        return [\n            \"lat\" => (float)$this->latitude,\n            \"lng\" => (float)$this->longitude,\n        ];\n    }\n"
                        },
                        {
                            "name": "setLocationAttribute",
                            "content": "    public function setLocationAttribute(?array $location): void\n    {\n        if (is_array($location))\n        {\n            $this->attributes['latitude'] = $location['lat'];\n            $this->attributes['longitude'] = $location['lng'];\n            unset($this->attributes['location']);\n        }\n    }\n"
                        },
                        {
                            "name": "getLatLngAttributes",
                            "content": "    public static function getLatLngAttributes(): array\n    {\n        return [\n            'lat' => 'latitude',\n            'lng' => 'longitude',\n        ];\n    }\n"
                        },
                        {
                            "name": "getComputedLocation",
                            "content": "    public static function getComputedLocation(): string\n    {\n        return 'location';\n    }\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes",
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": true,
                    "isAuthenticatable": false
                }
            },
            "item_12": {
                "tableId": 21,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Payment",
                "plural": "Payments",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Payment",
                "fileName": "Payment.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 12,
                "createdAt": "2024-07-29 10:52:25",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "payments",
                "path": "Models/Payment.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Payment",
                    "fileName": "Payment.php",
                    "tableName": "payments",
                    "class": "App\\Models\\Payment",
                    "namespace": "App\\Models",
                    "path": "Models/Payment.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_13": {
                "tableId": 22,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "BrandVehicle",
                "plural": "BrandVehicles",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\BrandVehicle",
                "fileName": "BrandVehicle.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 13,
                "createdAt": "2024-07-29 10:58:31",
                "updatedAt": "2024-08-19 09:14:56",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "brand_vehicles",
                "path": "Models/BrandVehicle.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "BrandVehicle",
                    "fileName": "BrandVehicle.php",
                    "tableName": "brand_vehicles",
                    "class": "App\\Models\\BrandVehicle",
                    "namespace": "App\\Models",
                    "path": "Models/BrandVehicle.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_14": {
                "tableId": 23,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "ModelVehicle",
                "plural": "ModelVehicles",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\ModelVehicle",
                "fileName": "ModelVehicle.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 14,
                "createdAt": "2024-07-29 10:59:45",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "model_vehicles",
                "path": "Models/ModelVehicle.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "ModelVehicle",
                    "fileName": "ModelVehicle.php",
                    "tableName": "model_vehicles",
                    "class": "App\\Models\\ModelVehicle",
                    "namespace": "App\\Models",
                    "path": "Models/ModelVehicle.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_15": {
                "tableId": 24,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "TypeVehicle",
                "plural": "TypeVehicles",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\TypeVehicle",
                "fileName": "TypeVehicle.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": {
                    "type_charger": "array"
                },
                "appends": [],
                "id": 15,
                "createdAt": "2024-07-29 11:00:01",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "type_vehicles",
                "path": "Models/TypeVehicle.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "TypeVehicle",
                    "fileName": "TypeVehicle.php",
                    "tableName": "type_vehicles",
                    "class": "App\\Models\\TypeVehicle",
                    "namespace": "App\\Models",
                    "path": "Models/TypeVehicle.php",
                    "casts": {
                        "type_charger": "array"
                    },
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_16": {
                "tableId": 25,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Vehicle",
                "plural": "Vehicles",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Vehicle",
                "fileName": "Vehicle.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [
                    {
                        "name": "getMaxKmNowAttribute",
                        "content": "    public function getMaxKmNowAttribute()\n{\n    return $this->charges->max('km_now');\n}\n"
                    }
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 16,
                "createdAt": "2024-07-29 11:01:09",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "vehicles",
                "path": "Models/Vehicle.php",
                "hasFillable": false,
                "hasSoftDeletes": true,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Vehicle",
                    "fileName": "Vehicle.php",
                    "tableName": "vehicles",
                    "class": "App\\Models\\Vehicle",
                    "namespace": "App\\Models",
                    "path": "Models/Vehicle.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [
                        {
                            "name": "getMaxKmNowAttribute",
                            "content": "    public function getMaxKmNowAttribute()\n{\n    return $this->charges->max('km_now');\n}\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": true,
                    "isAuthenticatable": false
                }
            },
            "item_17": {
                "tableId": 26,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Charger",
                "plural": "Chargers",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Charger",
                "fileName": "Charger.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [
                    {
                        "name": "getChargerNameAttribute",
                        "content": "    public function getChargerNameAttribute()\n    {\n        return $this->currentCharger->name .\n            ' - ' .\n            $this->typeCharger->name .\n            ' - ' .\n            $this->powerCharger->name;\n    }\n"
                    }
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes",
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 17,
                "createdAt": "2024-07-29 11:06:06",
                "updatedAt": "2024-08-19 09:14:56",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "chargers",
                "path": "Models/Charger.php",
                "hasFillable": false,
                "hasSoftDeletes": true,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Charger",
                    "fileName": "Charger.php",
                    "tableName": "chargers",
                    "class": "App\\Models\\Charger",
                    "namespace": "App\\Models",
                    "path": "Models/Charger.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [
                        {
                            "name": "getChargerNameAttribute",
                            "content": "    public function getChargerNameAttribute()\n    {\n        return $this->currentCharger->name .\n            ' - ' .\n            $this->typeCharger->name .\n            ' - ' .\n            $this->powerCharger->name;\n    }\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes",
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": true,
                    "isAuthenticatable": false
                }
            },
            "item_18": {
                "tableId": 27,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "PowerCharger",
                "plural": "PowerChargers",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\PowerCharger",
                "fileName": "PowerCharger.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 18,
                "createdAt": "2024-07-29 11:14:19",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "power_chargers",
                "path": "Models/PowerCharger.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "PowerCharger",
                    "fileName": "PowerCharger.php",
                    "tableName": "power_chargers",
                    "class": "App\\Models\\PowerCharger",
                    "namespace": "App\\Models",
                    "path": "Models/PowerCharger.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_19": {
                "tableId": 28,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "CurrentCharger",
                "plural": "CurrentChargers",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\CurrentCharger",
                "fileName": "CurrentCharger.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 19,
                "createdAt": "2024-07-29 11:14:50",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "current_chargers",
                "path": "Models/CurrentCharger.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "CurrentCharger",
                    "fileName": "CurrentCharger.php",
                    "tableName": "current_chargers",
                    "class": "App\\Models\\CurrentCharger",
                    "namespace": "App\\Models",
                    "path": "Models/CurrentCharger.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_20": {
                "tableId": 29,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "TypeCharger",
                "plural": "TypeChargers",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\TypeCharger",
                "fileName": "TypeCharger.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 20,
                "createdAt": "2024-07-29 11:14:59",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "type_chargers",
                "path": "Models/TypeCharger.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "TypeCharger",
                    "fileName": "TypeCharger.php",
                    "tableName": "type_chargers",
                    "class": "App\\Models\\TypeCharger",
                    "namespace": "App\\Models",
                    "path": "Models/TypeCharger.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_25": {
                "tableId": 30,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": false,
                "hasTimestamps": true,
                "guarded": [
                    "*"
                ],
                "name": "Charge",
                "plural": "Charges",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Charge",
                "fileName": "Charge.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [
                    {
                        "name": "currentCharger",
                        "content": "    public function currentCharger()\n    {\n        return $this->charger->currentCharger();\n    }\n"
                    }
                ],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes",
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [
                    "image",
                    "vehicle_id",
                    "date",
                    "charger_location_id",
                    "charger_id",
                    "km_now",
                    "is_finish_charging",
                    "start_charging_now",
                    "finish_charging_now",
                    "parking",
                    "kWh",
                    "street_lighting_tax",
                    "value_added_tax",
                    "admin_cost",
                    "total_cost",
                    "user_id",
                    "km_before",
                    "finish_charging_before",
                    "is_kwh_measured"
                ],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 25,
                "createdAt": "2024-07-29 11:24:20",
                "updatedAt": "2024-08-19 09:14:56",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "charges",
                "path": "Models/Charge.php",
                "hasFillable": true,
                "hasSoftDeletes": true,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Charge",
                    "fileName": "Charge.php",
                    "tableName": "charges",
                    "class": "App\\Models\\Charge",
                    "namespace": "App\\Models",
                    "path": "Models/Charge.php",
                    "casts": [],
                    "fillable": [
                        "image",
                        "vehicle_id",
                        "date",
                        "charger_location_id",
                        "charger_id",
                        "km_now",
                        "is_finish_charging",
                        "start_charging_now",
                        "finish_charging_now",
                        "parking",
                        "kWh",
                        "street_lighting_tax",
                        "value_added_tax",
                        "admin_cost",
                        "total_cost",
                        "user_id",
                        "km_before",
                        "finish_charging_before",
                        "is_kwh_measured"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [
                        {
                            "name": "currentCharger",
                            "content": "    public function currentCharger()\n    {\n        return $this->charger->currentCharger();\n    }\n"
                        }
                    ],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes",
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": true,
                    "isAuthenticatable": false
                }
            },
            "item_32": {
                "tableId": 31,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "StateOfHealth",
                "plural": "StateOfHealths",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\StateOfHealth",
                "fileName": "StateOfHealth.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\SoftDeletes",
                    "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 32,
                "createdAt": "2024-07-29 13:02:51",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "state_of_healths",
                "path": "Models/StateOfHealth.php",
                "hasFillable": false,
                "hasSoftDeletes": true,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "StateOfHealth",
                    "fileName": "StateOfHealth.php",
                    "tableName": "state_of_healths",
                    "class": "App\\Models\\StateOfHealth",
                    "namespace": "App\\Models",
                    "path": "Models/StateOfHealth.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\SoftDeletes",
                        "Illuminate\\Database\\Eloquent\\Concerns\\HasUuids",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": true,
                    "isAuthenticatable": false
                }
            },
            "item_249": {
                "tableId": 37,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "DiscountHomeCharging",
                "plural": "DiscountHomeChargings",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\DiscountHomeCharging",
                "fileName": "DiscountHomeCharging.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 249,
                "createdAt": "2024-08-19 08:50:30",
                "updatedAt": "2024-08-19 09:14:57",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "discount_home_chargings",
                "path": "Models/DiscountHomeCharging.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "DiscountHomeCharging",
                    "fileName": "DiscountHomeCharging.php",
                    "tableName": "discount_home_chargings",
                    "class": "App\\Models\\DiscountHomeCharging",
                    "namespace": "App\\Models",
                    "path": "Models/DiscountHomeCharging.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            }
        },
        "fillable_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 54,
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "__tableData": {
                "count": 35,
                "lastPrimaryKey": 35,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 55,
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_3": {
                "modelId": 1,
                "columnId": 57,
                "id": 3,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_4": {
                "modelId": 10,
                "columnId": 112,
                "id": 4,
                "createdAt": "2024-07-30 19:21:10",
                "updatedAt": "2024-07-30 19:21:10"
            },
            "item_5": {
                "modelId": 10,
                "columnId": 113,
                "id": 5,
                "createdAt": "2024-07-30 19:21:12",
                "updatedAt": "2024-07-30 19:21:12"
            },
            "item_6": {
                "modelId": 10,
                "columnId": 115,
                "id": 6,
                "createdAt": "2024-07-30 19:21:13",
                "updatedAt": "2024-07-30 19:21:13"
            },
            "item_7": {
                "modelId": 10,
                "columnId": 116,
                "id": 7,
                "createdAt": "2024-07-30 19:21:14",
                "updatedAt": "2024-07-30 19:21:14"
            },
            "item_8": {
                "modelId": 10,
                "columnId": 117,
                "id": 8,
                "createdAt": "2024-07-30 19:21:15",
                "updatedAt": "2024-07-30 19:21:15"
            },
            "item_9": {
                "modelId": 10,
                "columnId": 118,
                "id": 9,
                "createdAt": "2024-07-30 19:21:16",
                "updatedAt": "2024-07-30 19:21:16"
            },
            "item_10": {
                "modelId": 10,
                "columnId": 119,
                "id": 10,
                "createdAt": "2024-07-30 19:21:17",
                "updatedAt": "2024-07-30 19:21:17"
            },
            "item_11": {
                "modelId": 10,
                "columnId": 120,
                "id": 11,
                "createdAt": "2024-07-30 19:21:18",
                "updatedAt": "2024-07-30 19:21:18"
            },
            "item_12": {
                "modelId": 10,
                "columnId": 122,
                "id": 12,
                "createdAt": "2024-07-30 19:21:19",
                "updatedAt": "2024-07-30 19:21:19"
            },
            "item_13": {
                "modelId": 10,
                "columnId": 124,
                "id": 13,
                "createdAt": "2024-07-30 19:21:20",
                "updatedAt": "2024-07-30 19:21:20"
            },
            "item_14": {
                "modelId": 10,
                "columnId": 125,
                "id": 14,
                "createdAt": "2024-07-30 19:21:26",
                "updatedAt": "2024-07-30 19:21:26"
            },
            "item_15": {
                "modelId": 10,
                "columnId": 126,
                "id": 15,
                "createdAt": "2024-07-30 19:21:27",
                "updatedAt": "2024-07-30 19:21:27"
            },
            "item_16": {
                "modelId": 10,
                "columnId": 127,
                "id": 16,
                "createdAt": "2024-07-30 19:21:28",
                "updatedAt": "2024-07-30 19:21:28"
            },
            "item_17": {
                "modelId": 10,
                "columnId": 128,
                "id": 17,
                "createdAt": "2024-07-30 19:21:29",
                "updatedAt": "2024-07-30 19:21:29"
            },
            "item_18": {
                "modelId": 10,
                "columnId": 129,
                "id": 18,
                "createdAt": "2024-07-30 19:21:30",
                "updatedAt": "2024-07-30 19:21:30"
            },
            "item_19": {
                "modelId": 25,
                "columnId": 227,
                "id": 19,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_20": {
                "modelId": 25,
                "columnId": 204,
                "id": 20,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_21": {
                "modelId": 25,
                "columnId": 205,
                "id": 21,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_22": {
                "modelId": 25,
                "columnId": 207,
                "id": 22,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_23": {
                "modelId": 25,
                "columnId": 208,
                "id": 23,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_24": {
                "modelId": 25,
                "columnId": 209,
                "id": 24,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_25": {
                "modelId": 25,
                "columnId": 211,
                "id": 25,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_26": {
                "modelId": 25,
                "columnId": 212,
                "id": 26,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_27": {
                "modelId": 25,
                "columnId": 214,
                "id": 27,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_28": {
                "modelId": 25,
                "columnId": 215,
                "id": 28,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_29": {
                "modelId": 25,
                "columnId": 216,
                "id": 29,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_30": {
                "modelId": 25,
                "columnId": 218,
                "id": 30,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_31": {
                "modelId": 25,
                "columnId": 219,
                "id": 31,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_32": {
                "modelId": 25,
                "columnId": 220,
                "id": 32,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_33": {
                "modelId": 25,
                "columnId": 249,
                "id": 33,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_34": {
                "modelId": 25,
                "columnId": 210,
                "id": 34,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            },
            "item_35": {
                "modelId": 25,
                "columnId": 213,
                "id": 35,
                "createdAt": "2024-08-07 11:42:33",
                "updatedAt": "2024-08-07 11:42:33"
            }
        },
        "hidden_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 57,
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 61,
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_3": {
                "modelId": 1,
                "columnId": 59,
                "id": 3,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_4": {
                "modelId": 1,
                "columnId": 58,
                "id": 4,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            }
        },
        "casts_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 56,
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46",
                "type": "datetime"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 3,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 57,
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46",
                "type": "hashed"
            },
            "item_3": {
                "modelId": 15,
                "columnId": 247,
                "id": 3,
                "createdAt": "2024-07-30 08:57:21",
                "updatedAt": "2024-07-30 08:57:21",
                "type": "array"
            }
        },
        "app_sections": {
            "item_1": {
                "name": "Dashboard",
                "routePrefix": "dashboard",
                "routeBasePath": "dashboard",
                "projectId": 1,
                "requiresAuth": true,
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "cruds.sectionId": [
                                16,
                                17,
                                18,
                                19,
                                21,
                                22,
                                27
                            ],
                            "has_many_details.sectionId": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "cruds.sectionId": [
                                4,
                                6,
                                7,
                                9,
                                11,
                                12,
                                13,
                                14,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34
                            ],
                            "has_many_details.sectionId": [
                                5,
                                6
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "API",
                "routePrefix": "api",
                "routeBasePath": "api",
                "projectId": 1,
                "requiresAuth": true,
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_3": {
                "name": "Site",
                "routePrefix": "",
                "routeBasePath": "",
                "projectId": 1,
                "requiresAuth": false,
                "id": 3,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_4": {
                "name": "Filament Panel",
                "routePrefix": "panel",
                "routeBasePath": "panel",
                "projectId": 1,
                "requiresAuth": false,
                "id": 4,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            }
        },
        "schema_sections": {
            "item_1": {
                "name": "App",
                "scrollX": 23295,
                "scrollY": 25510.5,
                "projectId": 1,
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-08-19 09:14:30"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 3,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.sectionId": [
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                18,
                                19,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "tables.sectionId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "Laravel",
                "scrollX": 0,
                "scrollY": 0,
                "projectId": 1,
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            },
            "item_3": {
                "name": "Jetstream",
                "scrollX": 0,
                "scrollY": 0,
                "projectId": 1,
                "id": 3,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46"
            }
        },
        "navs": {
            "item_1": {
                "projectId": 1,
                "name": "navigation.home",
                "id": 1,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46",
                "tag": "home"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "navigation.apps",
                "id": 2,
                "createdAt": "2024-07-29 10:31:46",
                "updatedAt": "2024-07-29 10:31:46",
                "tag": "apps"
            }
        },
        "relationships": {
            "item_1": {
                "name": "cities",
                "modelId": 2,
                "projectId": 1,
                "relatedModelId": 3,
                "type": "HasMany",
                "foreignKeyName": "province_id",
                "parentKeyId": 66,
                "foreignKeyId": 85,
                "defaultName": "cities",
                "usingFirstDefaultName": true,
                "id": 1,
                "createdAt": "2024-07-29 10:36:44",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 2,
                "removed": false,
                "relatedTableName": "cities",
                "relatedModelName": "App\\Models\\City",
                "parentTableName": "provinces",
                "parentModelName": "App\\Models\\Province",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "cities",
                    "type": "HasMany",
                    "relatedTableName": "cities",
                    "relatedModelName": "App\\Models\\City",
                    "parentTableName": "provinces",
                    "parentModelName": "App\\Models\\Province",
                    "foreignKeyName": "province_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "__tableData": {
                "count": 78,
                "lastPrimaryKey": 389,
                "index": {
                    "1": {
                        "hasMany": {
                            "relationships.inverseId": [
                                2
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "relationships.inverseId": [
                                1
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "relationships.inverseId": [
                                4
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "relationships.inverseId": [
                                3
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "relationships.inverseId": [
                                6
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "relationships.inverseId": [
                                5
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "relationships.inverseId": [
                                8
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "relationships.inverseId": [
                                7
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "relationships.inverseId": [
                                10
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "relationships.inverseId": [
                                9
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "relationships.inverseId": [
                                12
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "relationships.inverseId": [
                                11
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "relationships.inverseId": [
                                14
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "relationships.inverseId": [
                                13
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "relationships.inverseId": [
                                18
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "relationships.inverseId": [
                                17
                            ],
                            "inputs.relationshipId": [
                                26,
                                146
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "relationships.inverseId": [
                                20
                            ]
                        }
                    },
                    "20": {
                        "hasMany": {
                            "relationships.inverseId": [
                                19
                            ],
                            "inputs.relationshipId": [
                                34,
                                154
                            ]
                        }
                    },
                    "21": {
                        "hasMany": {
                            "relationships.inverseId": [
                                22
                            ]
                        }
                    },
                    "22": {
                        "hasMany": {
                            "relationships.inverseId": [
                                21
                            ],
                            "inputs.relationshipId": [
                                35,
                                155
                            ]
                        }
                    },
                    "23": {
                        "hasMany": {
                            "relationships.inverseId": [
                                24
                            ]
                        }
                    },
                    "24": {
                        "hasMany": {
                            "relationships.inverseId": [
                                23
                            ],
                            "inputs.relationshipId": [
                                36,
                                156
                            ]
                        }
                    },
                    "25": {
                        "hasMany": {
                            "relationships.inverseId": [
                                26
                            ]
                        }
                    },
                    "26": {
                        "hasMany": {
                            "relationships.inverseId": [
                                25
                            ],
                            "inputs.relationshipId": [
                                37,
                                157
                            ]
                        }
                    },
                    "27": {
                        "hasMany": {
                            "relationships.inverseId": [
                                28
                            ]
                        }
                    },
                    "28": {
                        "hasMany": {
                            "relationships.inverseId": [
                                27
                            ],
                            "inputs.relationshipId": [
                                38,
                                158
                            ]
                        }
                    },
                    "29": {
                        "hasMany": {
                            "relationships.inverseId": [
                                30
                            ]
                        }
                    },
                    "30": {
                        "hasMany": {
                            "relationships.inverseId": [
                                29
                            ],
                            "inputs.relationshipId": [
                                159,
                                246
                            ]
                        }
                    },
                    "41": {
                        "hasMany": {
                            "relationships.inverseId": [
                                42
                            ],
                            "has_many_details.relationshipId": [
                                5
                            ]
                        }
                    },
                    "42": {
                        "hasMany": {
                            "relationships.inverseId": [
                                41
                            ],
                            "inputs.relationshipId": [
                                43
                            ]
                        }
                    },
                    "43": {
                        "hasMany": {
                            "relationships.inverseId": [
                                44
                            ],
                            "has_many_details.relationshipId": [
                                6
                            ]
                        }
                    },
                    "44": {
                        "hasMany": {
                            "relationships.inverseId": [
                                43
                            ],
                            "inputs.relationshipId": [
                                235
                            ]
                        }
                    },
                    "47": {
                        "hasMany": {
                            "relationships.inverseId": [
                                48
                            ]
                        }
                    },
                    "48": {
                        "hasMany": {
                            "relationships.inverseId": [
                                47
                            ],
                            "inputs.relationshipId": [
                                49,
                                110
                            ]
                        }
                    },
                    "49": {
                        "hasMany": {
                            "relationships.inverseId": [
                                50
                            ]
                        }
                    },
                    "50": {
                        "hasMany": {
                            "relationships.inverseId": [
                                49
                            ],
                            "inputs.relationshipId": [
                                50,
                                111
                            ]
                        }
                    },
                    "51": {
                        "hasMany": {
                            "relationships.inverseId": [
                                52
                            ]
                        }
                    },
                    "52": {
                        "hasMany": {
                            "relationships.inverseId": [
                                51
                            ],
                            "inputs.relationshipId": [
                                51,
                                112
                            ]
                        }
                    },
                    "59": {
                        "hasMany": {
                            "relationships.inverseId": [
                                60
                            ]
                        }
                    },
                    "60": {
                        "hasMany": {
                            "relationships.inverseId": [
                                59
                            ],
                            "inputs.relationshipId": [
                                70
                            ]
                        }
                    },
                    "61": {
                        "hasMany": {
                            "relationships.inverseId": [
                                62
                            ]
                        }
                    },
                    "62": {
                        "hasMany": {
                            "relationships.inverseId": [
                                61
                            ],
                            "inputs.relationshipId": [
                                67
                            ]
                        }
                    },
                    "63": {
                        "hasMany": {
                            "relationships.inverseId": [
                                64
                            ]
                        }
                    },
                    "64": {
                        "hasMany": {
                            "relationships.inverseId": [
                                63
                            ],
                            "inputs.relationshipId": [
                                161,
                                220
                            ]
                        }
                    },
                    "65": {
                        "hasMany": {
                            "relationships.inverseId": [
                                66
                            ]
                        }
                    },
                    "66": {
                        "hasMany": {
                            "relationships.inverseId": [
                                65
                            ],
                            "inputs.relationshipId": [
                                162,
                                221
                            ]
                        }
                    },
                    "67": {
                        "hasMany": {
                            "relationships.inverseId": [
                                68
                            ]
                        }
                    },
                    "68": {
                        "hasMany": {
                            "relationships.inverseId": [
                                67
                            ],
                            "inputs.relationshipId": [
                                163,
                                222
                            ]
                        }
                    },
                    "69": {
                        "hasMany": {
                            "relationships.inverseId": [
                                70
                            ],
                            "has_many_details.relationshipId": [
                                3
                            ]
                        }
                    },
                    "70": {
                        "hasMany": {
                            "relationships.inverseId": [
                                69
                            ],
                            "inputs.relationshipId": [
                                160,
                                219
                            ]
                        }
                    },
                    "73": {
                        "hasMany": {
                            "relationships.inverseId": [
                                74
                            ],
                            "has_many_details.relationshipId": [
                                1
                            ]
                        }
                    },
                    "74": {
                        "hasMany": {
                            "relationships.inverseId": [
                                73
                            ],
                            "inputs.relationshipId": [
                                71,
                                93,
                                116
                            ]
                        }
                    },
                    "75": {
                        "hasMany": {
                            "relationships.inverseId": [
                                76
                            ],
                            "has_many_details.relationshipId": []
                        }
                    },
                    "76": {
                        "hasMany": {
                            "relationships.inverseId": [
                                75
                            ],
                            "inputs.relationshipId": [
                                73,
                                95,
                                118
                            ]
                        }
                    },
                    "81": {
                        "hasMany": {
                            "relationships.inverseId": [
                                82
                            ],
                            "has_many_details.relationshipId": [
                                2
                            ]
                        }
                    },
                    "82": {
                        "hasMany": {
                            "relationships.inverseId": [
                                81
                            ],
                            "inputs.relationshipId": [
                                133,
                                240
                            ]
                        }
                    },
                    "83": {
                        "hasMany": {
                            "relationships.inverseId": [
                                84
                            ]
                        }
                    },
                    "84": {
                        "hasMany": {
                            "relationships.inverseId": [
                                83
                            ],
                            "inputs.relationshipId": [
                                137,
                                245
                            ]
                        }
                    },
                    "112": {
                        "hasMany": {
                            "relationships.inverseId": [
                                113
                            ]
                        }
                    },
                    "113": {
                        "hasMany": {
                            "relationships.inverseId": [
                                112
                            ],
                            "inputs.relationshipId": [
                                262
                            ]
                        }
                    },
                    "114": {
                        "hasMany": {
                            "relationships.inverseId": [
                                115
                            ]
                        }
                    },
                    "115": {
                        "hasMany": {
                            "relationships.inverseId": [
                                114
                            ],
                            "inputs.relationshipId": [
                                263
                            ]
                        }
                    },
                    "116": {
                        "hasMany": {
                            "relationships.inverseId": [
                                117
                            ]
                        }
                    },
                    "117": {
                        "hasMany": {
                            "relationships.inverseId": [
                                116
                            ],
                            "inputs.relationshipId": [
                                264
                            ]
                        }
                    },
                    "118": {
                        "hasMany": {
                            "relationships.inverseId": [
                                119
                            ]
                        }
                    },
                    "119": {
                        "hasMany": {
                            "relationships.inverseId": [
                                118
                            ],
                            "inputs.relationshipId": [
                                265
                            ]
                        }
                    },
                    "120": {
                        "hasMany": {
                            "relationships.inverseId": [
                                121
                            ]
                        }
                    },
                    "121": {
                        "hasMany": {
                            "relationships.inverseId": [
                                120
                            ],
                            "inputs.relationshipId": [
                                266
                            ]
                        }
                    },
                    "167": {
                        "hasMany": {
                            "relationships.inverseId": [
                                168
                            ]
                        }
                    },
                    "168": {
                        "hasMany": {
                            "relationships.inverseId": [
                                167
                            ]
                        }
                    },
                    "169": {
                        "hasMany": {
                            "relationships.inverseId": [
                                170
                            ]
                        }
                    },
                    "170": {
                        "hasMany": {
                            "relationships.inverseId": [
                                169
                            ],
                            "inputs.relationshipId": [
                                247
                            ]
                        }
                    },
                    "366": {
                        "hasMany": {
                            "relationships.inverseId": [
                                367
                            ]
                        }
                    },
                    "367": {
                        "hasMany": {
                            "relationships.inverseId": [
                                366
                            ]
                        }
                    },
                    "380": {
                        "hasMany": {
                            "relationships.inverseId": [
                                381
                            ]
                        }
                    },
                    "381": {
                        "hasMany": {
                            "relationships.inverseId": [
                                380
                            ],
                            "inputs.relationshipId": [
                                277
                            ]
                        }
                    },
                    "382": {
                        "hasMany": {
                            "relationships.inverseId": [
                                383
                            ]
                        }
                    },
                    "383": {
                        "hasMany": {
                            "relationships.inverseId": [
                                382
                            ],
                            "inputs.relationshipId": [
                                272
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 3,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 2,
                "defaultName": "province",
                "usingFirstDefaultName": true,
                "name": "province",
                "parentKeyId": 66,
                "foreignKeyName": "province_id",
                "inverseId": 1,
                "foreignKeyId": 85,
                "id": 2,
                "createdAt": "2024-07-29 10:36:44",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "provinces",
                "relatedModelName": "App\\Models\\Province",
                "parentTableName": "cities",
                "parentModelName": "App\\Models\\City",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "province",
                    "type": "BelongsTo",
                    "relatedTableName": "provinces",
                    "relatedModelName": "App\\Models\\Province",
                    "parentTableName": "cities",
                    "parentModelName": "App\\Models\\City",
                    "foreignKeyName": "province_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_3": {
                "name": "districts",
                "modelId": 3,
                "projectId": 1,
                "relatedModelId": 4,
                "type": "HasMany",
                "foreignKeyName": "city_id",
                "parentKeyId": 69,
                "foreignKeyId": 86,
                "defaultName": "districts",
                "usingFirstDefaultName": true,
                "id": 3,
                "createdAt": "2024-07-29 10:36:53",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 4,
                "removed": false,
                "relatedTableName": "districts",
                "relatedModelName": "App\\Models\\District",
                "parentTableName": "cities",
                "parentModelName": "App\\Models\\City",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "districts",
                    "type": "HasMany",
                    "relatedTableName": "districts",
                    "relatedModelName": "App\\Models\\District",
                    "parentTableName": "cities",
                    "parentModelName": "App\\Models\\City",
                    "foreignKeyName": "city_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_4": {
                "modelId": 4,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 3,
                "defaultName": "city",
                "usingFirstDefaultName": true,
                "name": "city",
                "parentKeyId": 69,
                "foreignKeyName": "city_id",
                "inverseId": 3,
                "foreignKeyId": 86,
                "id": 4,
                "createdAt": "2024-07-29 10:36:53",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "cities",
                "relatedModelName": "App\\Models\\City",
                "parentTableName": "districts",
                "parentModelName": "App\\Models\\District",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "city",
                    "type": "BelongsTo",
                    "relatedTableName": "cities",
                    "relatedModelName": "App\\Models\\City",
                    "parentTableName": "districts",
                    "parentModelName": "App\\Models\\District",
                    "foreignKeyName": "city_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_5": {
                "name": "subdistricts",
                "modelId": 4,
                "projectId": 1,
                "relatedModelId": 5,
                "type": "HasMany",
                "foreignKeyName": "district_id",
                "parentKeyId": 72,
                "foreignKeyId": 87,
                "defaultName": "subdistricts",
                "usingFirstDefaultName": true,
                "id": 5,
                "createdAt": "2024-07-29 10:37:09",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 6,
                "removed": false,
                "relatedTableName": "subdistricts",
                "relatedModelName": "App\\Models\\Subdistrict",
                "parentTableName": "districts",
                "parentModelName": "App\\Models\\District",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "subdistricts",
                    "type": "HasMany",
                    "relatedTableName": "subdistricts",
                    "relatedModelName": "App\\Models\\Subdistrict",
                    "parentTableName": "districts",
                    "parentModelName": "App\\Models\\District",
                    "foreignKeyName": "district_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_6": {
                "modelId": 5,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 4,
                "defaultName": "district",
                "usingFirstDefaultName": true,
                "name": "district",
                "parentKeyId": 72,
                "foreignKeyName": "district_id",
                "inverseId": 5,
                "foreignKeyId": 87,
                "id": 6,
                "createdAt": "2024-07-29 10:37:09",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "districts",
                "relatedModelName": "App\\Models\\District",
                "parentTableName": "subdistricts",
                "parentModelName": "App\\Models\\Subdistrict",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "district",
                    "type": "BelongsTo",
                    "relatedTableName": "districts",
                    "relatedModelName": "App\\Models\\District",
                    "parentTableName": "subdistricts",
                    "parentModelName": "App\\Models\\Subdistrict",
                    "foreignKeyName": "district_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_7": {
                "name": "postalCodes",
                "modelId": 2,
                "projectId": 1,
                "relatedModelId": 6,
                "type": "HasMany",
                "foreignKeyName": "province_id",
                "parentKeyId": 66,
                "foreignKeyId": 88,
                "defaultName": "postalCodes",
                "usingFirstDefaultName": true,
                "id": 7,
                "createdAt": "2024-07-29 10:37:19",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 8,
                "removed": false,
                "relatedTableName": "postal_codes",
                "relatedModelName": "App\\Models\\PostalCode",
                "parentTableName": "provinces",
                "parentModelName": "App\\Models\\Province",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "postalCodes",
                    "type": "HasMany",
                    "relatedTableName": "postal_codes",
                    "relatedModelName": "App\\Models\\PostalCode",
                    "parentTableName": "provinces",
                    "parentModelName": "App\\Models\\Province",
                    "foreignKeyName": "province_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_8": {
                "modelId": 6,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 2,
                "defaultName": "province",
                "usingFirstDefaultName": true,
                "name": "province",
                "parentKeyId": 66,
                "foreignKeyName": "province_id",
                "inverseId": 7,
                "foreignKeyId": 88,
                "id": 8,
                "createdAt": "2024-07-29 10:37:19",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "provinces",
                "relatedModelName": "App\\Models\\Province",
                "parentTableName": "postal_codes",
                "parentModelName": "App\\Models\\PostalCode",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "province",
                    "type": "BelongsTo",
                    "relatedTableName": "provinces",
                    "relatedModelName": "App\\Models\\Province",
                    "parentTableName": "postal_codes",
                    "parentModelName": "App\\Models\\PostalCode",
                    "foreignKeyName": "province_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_9": {
                "name": "postalCodes",
                "modelId": 3,
                "projectId": 1,
                "relatedModelId": 6,
                "type": "HasMany",
                "foreignKeyName": "city_id",
                "parentKeyId": 69,
                "foreignKeyId": 89,
                "defaultName": "postalCodes",
                "usingFirstDefaultName": true,
                "id": 9,
                "createdAt": "2024-07-29 10:37:25",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 10,
                "removed": false,
                "relatedTableName": "postal_codes",
                "relatedModelName": "App\\Models\\PostalCode",
                "parentTableName": "cities",
                "parentModelName": "App\\Models\\City",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "postalCodes",
                    "type": "HasMany",
                    "relatedTableName": "postal_codes",
                    "relatedModelName": "App\\Models\\PostalCode",
                    "parentTableName": "cities",
                    "parentModelName": "App\\Models\\City",
                    "foreignKeyName": "city_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_10": {
                "modelId": 6,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 3,
                "defaultName": "city",
                "usingFirstDefaultName": true,
                "name": "city",
                "parentKeyId": 69,
                "foreignKeyName": "city_id",
                "inverseId": 9,
                "foreignKeyId": 89,
                "id": 10,
                "createdAt": "2024-07-29 10:37:25",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "cities",
                "relatedModelName": "App\\Models\\City",
                "parentTableName": "postal_codes",
                "parentModelName": "App\\Models\\PostalCode",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "city",
                    "type": "BelongsTo",
                    "relatedTableName": "cities",
                    "relatedModelName": "App\\Models\\City",
                    "parentTableName": "postal_codes",
                    "parentModelName": "App\\Models\\PostalCode",
                    "foreignKeyName": "city_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_11": {
                "name": "postalCodes",
                "modelId": 4,
                "projectId": 1,
                "relatedModelId": 6,
                "type": "HasMany",
                "foreignKeyName": "district_id",
                "parentKeyId": 72,
                "foreignKeyId": 90,
                "defaultName": "postalCodes",
                "usingFirstDefaultName": true,
                "id": 11,
                "createdAt": "2024-07-29 10:37:32",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 12,
                "removed": false,
                "relatedTableName": "postal_codes",
                "relatedModelName": "App\\Models\\PostalCode",
                "parentTableName": "districts",
                "parentModelName": "App\\Models\\District",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "postalCodes",
                    "type": "HasMany",
                    "relatedTableName": "postal_codes",
                    "relatedModelName": "App\\Models\\PostalCode",
                    "parentTableName": "districts",
                    "parentModelName": "App\\Models\\District",
                    "foreignKeyName": "district_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_12": {
                "modelId": 6,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 4,
                "defaultName": "district",
                "usingFirstDefaultName": true,
                "name": "district",
                "parentKeyId": 72,
                "foreignKeyName": "district_id",
                "inverseId": 11,
                "foreignKeyId": 90,
                "id": 12,
                "createdAt": "2024-07-29 10:37:32",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "districts",
                "relatedModelName": "App\\Models\\District",
                "parentTableName": "postal_codes",
                "parentModelName": "App\\Models\\PostalCode",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "district",
                    "type": "BelongsTo",
                    "relatedTableName": "districts",
                    "relatedModelName": "App\\Models\\District",
                    "parentTableName": "postal_codes",
                    "parentModelName": "App\\Models\\PostalCode",
                    "foreignKeyName": "district_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_13": {
                "name": "postalCodes",
                "modelId": 5,
                "projectId": 1,
                "relatedModelId": 6,
                "type": "HasMany",
                "foreignKeyName": "subdistrict_id",
                "parentKeyId": 75,
                "foreignKeyId": 91,
                "defaultName": "postalCodes",
                "usingFirstDefaultName": true,
                "id": 13,
                "createdAt": "2024-07-29 10:37:38",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 14,
                "removed": false,
                "relatedTableName": "postal_codes",
                "relatedModelName": "App\\Models\\PostalCode",
                "parentTableName": "subdistricts",
                "parentModelName": "App\\Models\\Subdistrict",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "postalCodes",
                    "type": "HasMany",
                    "relatedTableName": "postal_codes",
                    "relatedModelName": "App\\Models\\PostalCode",
                    "parentTableName": "subdistricts",
                    "parentModelName": "App\\Models\\Subdistrict",
                    "foreignKeyName": "subdistrict_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_14": {
                "modelId": 6,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 5,
                "defaultName": "subdistrict",
                "usingFirstDefaultName": true,
                "name": "subdistrict",
                "parentKeyId": 75,
                "foreignKeyName": "subdistrict_id",
                "inverseId": 13,
                "foreignKeyId": 91,
                "id": 14,
                "createdAt": "2024-07-29 10:37:38",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "subdistricts",
                "relatedModelName": "App\\Models\\Subdistrict",
                "parentTableName": "postal_codes",
                "parentModelName": "App\\Models\\PostalCode",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "subdistrict",
                    "type": "BelongsTo",
                    "relatedTableName": "subdistricts",
                    "relatedModelName": "App\\Models\\Subdistrict",
                    "parentTableName": "postal_codes",
                    "parentModelName": "App\\Models\\PostalCode",
                    "foreignKeyName": "subdistrict_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_17": {
                "name": "chargerLocations",
                "modelId": 9,
                "projectId": 1,
                "relatedModelId": 10,
                "type": "HasMany",
                "foreignKeyName": "provider_id",
                "parentKeyId": 102,
                "foreignKeyId": 115,
                "defaultName": "chargerLocations",
                "usingFirstDefaultName": true,
                "id": 17,
                "createdAt": "2024-07-29 10:46:19",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 18,
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "providers",
                "parentModelName": "App\\Models\\Provider",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocations",
                    "type": "HasMany",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "providers",
                    "parentModelName": "App\\Models\\Provider",
                    "foreignKeyName": "provider_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_18": {
                "modelId": 10,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 9,
                "defaultName": "provider",
                "usingFirstDefaultName": true,
                "name": "provider",
                "parentKeyId": 102,
                "foreignKeyName": "provider_id",
                "inverseId": 17,
                "foreignKeyId": 115,
                "id": 18,
                "createdAt": "2024-07-29 10:46:19",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "providers",
                "relatedModelName": "App\\Models\\Provider",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "provider",
                    "type": "BelongsTo",
                    "relatedTableName": "providers",
                    "relatedModelName": "App\\Models\\Provider",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "provider_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_19": {
                "name": "chargerLocations",
                "modelId": 2,
                "projectId": 1,
                "relatedModelId": 10,
                "type": "HasMany",
                "foreignKeyName": "province_id",
                "parentKeyId": 66,
                "foreignKeyId": 124,
                "defaultName": "chargerLocations",
                "usingFirstDefaultName": true,
                "id": 19,
                "createdAt": "2024-07-29 10:48:27",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 20,
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "provinces",
                "parentModelName": "App\\Models\\Province",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocations",
                    "type": "HasMany",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "provinces",
                    "parentModelName": "App\\Models\\Province",
                    "foreignKeyName": "province_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_20": {
                "modelId": 10,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 2,
                "defaultName": "province",
                "usingFirstDefaultName": true,
                "name": "province",
                "parentKeyId": 66,
                "foreignKeyName": "province_id",
                "inverseId": 19,
                "foreignKeyId": 124,
                "id": 20,
                "createdAt": "2024-07-29 10:48:27",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "provinces",
                "relatedModelName": "App\\Models\\Province",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "province",
                    "type": "BelongsTo",
                    "relatedTableName": "provinces",
                    "relatedModelName": "App\\Models\\Province",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "province_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_21": {
                "name": "chargerLocations",
                "modelId": 3,
                "projectId": 1,
                "relatedModelId": 10,
                "type": "HasMany",
                "foreignKeyName": "city_id",
                "parentKeyId": 69,
                "foreignKeyId": 125,
                "defaultName": "chargerLocations",
                "usingFirstDefaultName": true,
                "id": 21,
                "createdAt": "2024-07-29 10:48:34",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 22,
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "cities",
                "parentModelName": "App\\Models\\City",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocations",
                    "type": "HasMany",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "cities",
                    "parentModelName": "App\\Models\\City",
                    "foreignKeyName": "city_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_22": {
                "modelId": 10,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 3,
                "defaultName": "city",
                "usingFirstDefaultName": true,
                "name": "city",
                "parentKeyId": 69,
                "foreignKeyName": "city_id",
                "inverseId": 21,
                "foreignKeyId": 125,
                "id": 22,
                "createdAt": "2024-07-29 10:48:34",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "cities",
                "relatedModelName": "App\\Models\\City",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "city",
                    "type": "BelongsTo",
                    "relatedTableName": "cities",
                    "relatedModelName": "App\\Models\\City",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "city_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_23": {
                "name": "chargerLocations",
                "modelId": 4,
                "projectId": 1,
                "relatedModelId": 10,
                "type": "HasMany",
                "foreignKeyName": "district_id",
                "parentKeyId": 72,
                "foreignKeyId": 126,
                "defaultName": "chargerLocations",
                "usingFirstDefaultName": true,
                "id": 23,
                "createdAt": "2024-07-29 10:48:40",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 24,
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "districts",
                "parentModelName": "App\\Models\\District",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocations",
                    "type": "HasMany",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "districts",
                    "parentModelName": "App\\Models\\District",
                    "foreignKeyName": "district_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_24": {
                "modelId": 10,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 4,
                "defaultName": "district",
                "usingFirstDefaultName": true,
                "name": "district",
                "parentKeyId": 72,
                "foreignKeyName": "district_id",
                "inverseId": 23,
                "foreignKeyId": 126,
                "id": 24,
                "createdAt": "2024-07-29 10:48:40",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "districts",
                "relatedModelName": "App\\Models\\District",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "district",
                    "type": "BelongsTo",
                    "relatedTableName": "districts",
                    "relatedModelName": "App\\Models\\District",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "district_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_25": {
                "name": "chargerLocations",
                "modelId": 5,
                "projectId": 1,
                "relatedModelId": 10,
                "type": "HasMany",
                "foreignKeyName": "subdistrict_id",
                "parentKeyId": 75,
                "foreignKeyId": 127,
                "defaultName": "chargerLocations",
                "usingFirstDefaultName": true,
                "id": 25,
                "createdAt": "2024-07-29 10:48:46",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 26,
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "subdistricts",
                "parentModelName": "App\\Models\\Subdistrict",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocations",
                    "type": "HasMany",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "subdistricts",
                    "parentModelName": "App\\Models\\Subdistrict",
                    "foreignKeyName": "subdistrict_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_26": {
                "modelId": 10,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 5,
                "defaultName": "subdistrict",
                "usingFirstDefaultName": true,
                "name": "subdistrict",
                "parentKeyId": 75,
                "foreignKeyName": "subdistrict_id",
                "inverseId": 25,
                "foreignKeyId": 127,
                "id": 26,
                "createdAt": "2024-07-29 10:48:46",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "subdistricts",
                "relatedModelName": "App\\Models\\Subdistrict",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "subdistrict",
                    "type": "BelongsTo",
                    "relatedTableName": "subdistricts",
                    "relatedModelName": "App\\Models\\Subdistrict",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "subdistrict_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_27": {
                "name": "chargerLocations",
                "modelId": 6,
                "projectId": 1,
                "relatedModelId": 10,
                "type": "HasMany",
                "foreignKeyName": "postal_code_id",
                "parentKeyId": 78,
                "foreignKeyId": 128,
                "defaultName": "chargerLocations",
                "usingFirstDefaultName": true,
                "id": 27,
                "createdAt": "2024-07-29 10:48:53",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 28,
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "postal_codes",
                "parentModelName": "App\\Models\\PostalCode",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocations",
                    "type": "HasMany",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "postal_codes",
                    "parentModelName": "App\\Models\\PostalCode",
                    "foreignKeyName": "postal_code_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_28": {
                "modelId": 10,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 6,
                "defaultName": "postalCode",
                "usingFirstDefaultName": true,
                "name": "postalCode",
                "parentKeyId": 78,
                "foreignKeyName": "postal_code_id",
                "inverseId": 27,
                "foreignKeyId": 128,
                "id": 28,
                "createdAt": "2024-07-29 10:48:53",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "postal_codes",
                "relatedModelName": "App\\Models\\PostalCode",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "postalCode",
                    "type": "BelongsTo",
                    "relatedTableName": "postal_codes",
                    "relatedModelName": "App\\Models\\PostalCode",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "postal_code_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_29": {
                "name": "chargerLocations",
                "modelId": 1,
                "projectId": 1,
                "relatedModelId": 10,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 53,
                "foreignKeyId": 129,
                "defaultName": "chargerLocations",
                "usingFirstDefaultName": true,
                "id": 29,
                "createdAt": "2024-07-29 10:49:02",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 30,
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocations",
                    "type": "HasMany",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_30": {
                "modelId": 10,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 1,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 53,
                "foreignKeyName": "user_id",
                "inverseId": 29,
                "foreignKeyId": 129,
                "id": 30,
                "createdAt": "2024-07-29 10:49:02",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_41": {
                "name": "modelVehicles",
                "modelId": 13,
                "projectId": 1,
                "relatedModelId": 14,
                "type": "HasMany",
                "foreignKeyName": "brand_vehicle_id",
                "parentKeyId": 145,
                "foreignKeyId": 157,
                "defaultName": "modelVehicles",
                "usingFirstDefaultName": true,
                "id": 41,
                "createdAt": "2024-07-29 11:00:24",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 42,
                "removed": false,
                "relatedTableName": "model_vehicles",
                "relatedModelName": "App\\Models\\ModelVehicle",
                "parentTableName": "brand_vehicles",
                "parentModelName": "App\\Models\\BrandVehicle",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "modelVehicles",
                    "type": "HasMany",
                    "relatedTableName": "model_vehicles",
                    "relatedModelName": "App\\Models\\ModelVehicle",
                    "parentTableName": "brand_vehicles",
                    "parentModelName": "App\\Models\\BrandVehicle",
                    "foreignKeyName": "brand_vehicle_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_42": {
                "modelId": 14,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 13,
                "defaultName": "brandVehicle",
                "usingFirstDefaultName": true,
                "name": "brandVehicle",
                "parentKeyId": 145,
                "foreignKeyName": "brand_vehicle_id",
                "inverseId": 41,
                "foreignKeyId": 157,
                "id": 42,
                "createdAt": "2024-07-29 11:00:24",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "brand_vehicles",
                "relatedModelName": "App\\Models\\BrandVehicle",
                "parentTableName": "model_vehicles",
                "parentModelName": "App\\Models\\ModelVehicle",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "brandVehicle",
                    "type": "BelongsTo",
                    "relatedTableName": "brand_vehicles",
                    "relatedModelName": "App\\Models\\BrandVehicle",
                    "parentTableName": "model_vehicles",
                    "parentModelName": "App\\Models\\ModelVehicle",
                    "foreignKeyName": "brand_vehicle_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_43": {
                "name": "typeVehicles",
                "modelId": 14,
                "projectId": 1,
                "relatedModelId": 15,
                "type": "HasMany",
                "foreignKeyName": "model_vehicle_id",
                "parentKeyId": 149,
                "foreignKeyId": 158,
                "defaultName": "typeVehicles",
                "usingFirstDefaultName": true,
                "id": 43,
                "createdAt": "2024-07-29 11:00:40",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 44,
                "removed": false,
                "relatedTableName": "type_vehicles",
                "relatedModelName": "App\\Models\\TypeVehicle",
                "parentTableName": "model_vehicles",
                "parentModelName": "App\\Models\\ModelVehicle",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "typeVehicles",
                    "type": "HasMany",
                    "relatedTableName": "type_vehicles",
                    "relatedModelName": "App\\Models\\TypeVehicle",
                    "parentTableName": "model_vehicles",
                    "parentModelName": "App\\Models\\ModelVehicle",
                    "foreignKeyName": "model_vehicle_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_44": {
                "modelId": 15,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 14,
                "defaultName": "modelVehicle",
                "usingFirstDefaultName": true,
                "name": "modelVehicle",
                "parentKeyId": 149,
                "foreignKeyName": "model_vehicle_id",
                "inverseId": 43,
                "foreignKeyId": 158,
                "id": 44,
                "createdAt": "2024-07-29 11:00:40",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "model_vehicles",
                "relatedModelName": "App\\Models\\ModelVehicle",
                "parentTableName": "type_vehicles",
                "parentModelName": "App\\Models\\TypeVehicle",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "modelVehicle",
                    "type": "BelongsTo",
                    "relatedTableName": "model_vehicles",
                    "relatedModelName": "App\\Models\\ModelVehicle",
                    "parentTableName": "type_vehicles",
                    "parentModelName": "App\\Models\\TypeVehicle",
                    "foreignKeyName": "model_vehicle_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_47": {
                "name": "vehicles",
                "modelId": 13,
                "projectId": 1,
                "relatedModelId": 16,
                "type": "HasMany",
                "foreignKeyName": "brand_vehicle_id",
                "parentKeyId": 145,
                "foreignKeyId": 163,
                "defaultName": "vehicles",
                "usingFirstDefaultName": true,
                "id": 47,
                "createdAt": "2024-07-29 11:03:15",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 48,
                "removed": false,
                "relatedTableName": "vehicles",
                "relatedModelName": "App\\Models\\Vehicle",
                "parentTableName": "brand_vehicles",
                "parentModelName": "App\\Models\\BrandVehicle",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "vehicles",
                    "type": "HasMany",
                    "relatedTableName": "vehicles",
                    "relatedModelName": "App\\Models\\Vehicle",
                    "parentTableName": "brand_vehicles",
                    "parentModelName": "App\\Models\\BrandVehicle",
                    "foreignKeyName": "brand_vehicle_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_48": {
                "modelId": 16,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 13,
                "defaultName": "brandVehicle",
                "usingFirstDefaultName": true,
                "name": "brandVehicle",
                "parentKeyId": 145,
                "foreignKeyName": "brand_vehicle_id",
                "inverseId": 47,
                "foreignKeyId": 163,
                "id": 48,
                "createdAt": "2024-07-29 11:03:15",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "brand_vehicles",
                "relatedModelName": "App\\Models\\BrandVehicle",
                "parentTableName": "vehicles",
                "parentModelName": "App\\Models\\Vehicle",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "brandVehicle",
                    "type": "BelongsTo",
                    "relatedTableName": "brand_vehicles",
                    "relatedModelName": "App\\Models\\BrandVehicle",
                    "parentTableName": "vehicles",
                    "parentModelName": "App\\Models\\Vehicle",
                    "foreignKeyName": "brand_vehicle_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_49": {
                "name": "vehicles",
                "modelId": 14,
                "projectId": 1,
                "relatedModelId": 16,
                "type": "HasMany",
                "foreignKeyName": "model_vehicle_id",
                "parentKeyId": 149,
                "foreignKeyId": 164,
                "defaultName": "vehicles",
                "usingFirstDefaultName": true,
                "id": 49,
                "createdAt": "2024-07-29 11:03:31",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 50,
                "removed": false,
                "relatedTableName": "vehicles",
                "relatedModelName": "App\\Models\\Vehicle",
                "parentTableName": "model_vehicles",
                "parentModelName": "App\\Models\\ModelVehicle",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "vehicles",
                    "type": "HasMany",
                    "relatedTableName": "vehicles",
                    "relatedModelName": "App\\Models\\Vehicle",
                    "parentTableName": "model_vehicles",
                    "parentModelName": "App\\Models\\ModelVehicle",
                    "foreignKeyName": "model_vehicle_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_50": {
                "modelId": 16,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 14,
                "defaultName": "modelVehicle",
                "usingFirstDefaultName": true,
                "name": "modelVehicle",
                "parentKeyId": 149,
                "foreignKeyName": "model_vehicle_id",
                "inverseId": 49,
                "foreignKeyId": 164,
                "id": 50,
                "createdAt": "2024-07-29 11:03:31",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "model_vehicles",
                "relatedModelName": "App\\Models\\ModelVehicle",
                "parentTableName": "vehicles",
                "parentModelName": "App\\Models\\Vehicle",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "modelVehicle",
                    "type": "BelongsTo",
                    "relatedTableName": "model_vehicles",
                    "relatedModelName": "App\\Models\\ModelVehicle",
                    "parentTableName": "vehicles",
                    "parentModelName": "App\\Models\\Vehicle",
                    "foreignKeyName": "model_vehicle_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_51": {
                "name": "vehicles",
                "modelId": 15,
                "projectId": 1,
                "relatedModelId": 16,
                "type": "HasMany",
                "foreignKeyName": "type_vehicle_id",
                "parentKeyId": 153,
                "foreignKeyId": 165,
                "defaultName": "vehicles",
                "usingFirstDefaultName": true,
                "id": 51,
                "createdAt": "2024-07-29 11:03:38",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 52,
                "removed": false,
                "relatedTableName": "vehicles",
                "relatedModelName": "App\\Models\\Vehicle",
                "parentTableName": "type_vehicles",
                "parentModelName": "App\\Models\\TypeVehicle",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "vehicles",
                    "type": "HasMany",
                    "relatedTableName": "vehicles",
                    "relatedModelName": "App\\Models\\Vehicle",
                    "parentTableName": "type_vehicles",
                    "parentModelName": "App\\Models\\TypeVehicle",
                    "foreignKeyName": "type_vehicle_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_52": {
                "modelId": 16,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 15,
                "defaultName": "typeVehicle",
                "usingFirstDefaultName": true,
                "name": "typeVehicle",
                "parentKeyId": 153,
                "foreignKeyName": "type_vehicle_id",
                "inverseId": 51,
                "foreignKeyId": 165,
                "id": 52,
                "createdAt": "2024-07-29 11:03:38",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "type_vehicles",
                "relatedModelName": "App\\Models\\TypeVehicle",
                "parentTableName": "vehicles",
                "parentModelName": "App\\Models\\Vehicle",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "typeVehicle",
                    "type": "BelongsTo",
                    "relatedTableName": "type_vehicles",
                    "relatedModelName": "App\\Models\\TypeVehicle",
                    "parentTableName": "vehicles",
                    "parentModelName": "App\\Models\\Vehicle",
                    "foreignKeyName": "type_vehicle_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_59": {
                "name": "typeChargers",
                "modelId": 19,
                "projectId": 1,
                "relatedModelId": 20,
                "type": "HasMany",
                "foreignKeyName": "current_charger_id",
                "parentKeyId": 179,
                "foreignKeyId": 188,
                "defaultName": "typeChargers",
                "usingFirstDefaultName": true,
                "id": 59,
                "createdAt": "2024-07-29 11:15:47",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 60,
                "removed": false,
                "relatedTableName": "type_chargers",
                "relatedModelName": "App\\Models\\TypeCharger",
                "parentTableName": "current_chargers",
                "parentModelName": "App\\Models\\CurrentCharger",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "typeChargers",
                    "type": "HasMany",
                    "relatedTableName": "type_chargers",
                    "relatedModelName": "App\\Models\\TypeCharger",
                    "parentTableName": "current_chargers",
                    "parentModelName": "App\\Models\\CurrentCharger",
                    "foreignKeyName": "current_charger_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_60": {
                "modelId": 20,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 19,
                "defaultName": "currentCharger",
                "usingFirstDefaultName": true,
                "name": "currentCharger",
                "parentKeyId": 179,
                "foreignKeyName": "current_charger_id",
                "inverseId": 59,
                "foreignKeyId": 188,
                "id": 60,
                "createdAt": "2024-07-29 11:15:47",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "current_chargers",
                "relatedModelName": "App\\Models\\CurrentCharger",
                "parentTableName": "type_chargers",
                "parentModelName": "App\\Models\\TypeCharger",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "currentCharger",
                    "type": "BelongsTo",
                    "relatedTableName": "current_chargers",
                    "relatedModelName": "App\\Models\\CurrentCharger",
                    "parentTableName": "type_chargers",
                    "parentModelName": "App\\Models\\TypeCharger",
                    "foreignKeyName": "current_charger_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_61": {
                "name": "powerChargers",
                "modelId": 20,
                "projectId": 1,
                "relatedModelId": 18,
                "type": "HasMany",
                "foreignKeyName": "type_charger_id",
                "parentKeyId": 182,
                "foreignKeyId": 189,
                "defaultName": "powerChargers",
                "usingFirstDefaultName": true,
                "id": 61,
                "createdAt": "2024-07-29 11:15:58",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 62,
                "removed": false,
                "relatedTableName": "power_chargers",
                "relatedModelName": "App\\Models\\PowerCharger",
                "parentTableName": "type_chargers",
                "parentModelName": "App\\Models\\TypeCharger",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "powerChargers",
                    "type": "HasMany",
                    "relatedTableName": "power_chargers",
                    "relatedModelName": "App\\Models\\PowerCharger",
                    "parentTableName": "type_chargers",
                    "parentModelName": "App\\Models\\TypeCharger",
                    "foreignKeyName": "type_charger_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_62": {
                "modelId": 18,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 20,
                "defaultName": "typeCharger",
                "usingFirstDefaultName": true,
                "name": "typeCharger",
                "parentKeyId": 182,
                "foreignKeyName": "type_charger_id",
                "inverseId": 61,
                "foreignKeyId": 189,
                "id": 62,
                "createdAt": "2024-07-29 11:15:58",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "type_chargers",
                "relatedModelName": "App\\Models\\TypeCharger",
                "parentTableName": "power_chargers",
                "parentModelName": "App\\Models\\PowerCharger",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "typeCharger",
                    "type": "BelongsTo",
                    "relatedTableName": "type_chargers",
                    "relatedModelName": "App\\Models\\TypeCharger",
                    "parentTableName": "power_chargers",
                    "parentModelName": "App\\Models\\PowerCharger",
                    "foreignKeyName": "type_charger_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_63": {
                "name": "chargers",
                "modelId": 19,
                "projectId": 1,
                "relatedModelId": 17,
                "type": "HasMany",
                "foreignKeyName": "current_charger_id",
                "parentKeyId": 179,
                "foreignKeyId": 190,
                "defaultName": "chargers",
                "usingFirstDefaultName": true,
                "id": 63,
                "createdAt": "2024-07-29 11:19:19",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 64,
                "removed": false,
                "relatedTableName": "chargers",
                "relatedModelName": "App\\Models\\Charger",
                "parentTableName": "current_chargers",
                "parentModelName": "App\\Models\\CurrentCharger",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargers",
                    "type": "HasMany",
                    "relatedTableName": "chargers",
                    "relatedModelName": "App\\Models\\Charger",
                    "parentTableName": "current_chargers",
                    "parentModelName": "App\\Models\\CurrentCharger",
                    "foreignKeyName": "current_charger_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_64": {
                "modelId": 17,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 19,
                "defaultName": "currentCharger",
                "usingFirstDefaultName": true,
                "name": "currentCharger",
                "parentKeyId": 179,
                "foreignKeyName": "current_charger_id",
                "inverseId": 63,
                "foreignKeyId": 190,
                "id": 64,
                "createdAt": "2024-07-29 11:19:19",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "current_chargers",
                "relatedModelName": "App\\Models\\CurrentCharger",
                "parentTableName": "chargers",
                "parentModelName": "App\\Models\\Charger",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "currentCharger",
                    "type": "BelongsTo",
                    "relatedTableName": "current_chargers",
                    "relatedModelName": "App\\Models\\CurrentCharger",
                    "parentTableName": "chargers",
                    "parentModelName": "App\\Models\\Charger",
                    "foreignKeyName": "current_charger_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_65": {
                "name": "chargers",
                "modelId": 20,
                "projectId": 1,
                "relatedModelId": 17,
                "type": "HasMany",
                "foreignKeyName": "type_charger_id",
                "parentKeyId": 182,
                "foreignKeyId": 191,
                "defaultName": "chargers",
                "usingFirstDefaultName": true,
                "id": 65,
                "createdAt": "2024-07-29 11:19:26",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 66,
                "removed": false,
                "relatedTableName": "chargers",
                "relatedModelName": "App\\Models\\Charger",
                "parentTableName": "type_chargers",
                "parentModelName": "App\\Models\\TypeCharger",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargers",
                    "type": "HasMany",
                    "relatedTableName": "chargers",
                    "relatedModelName": "App\\Models\\Charger",
                    "parentTableName": "type_chargers",
                    "parentModelName": "App\\Models\\TypeCharger",
                    "foreignKeyName": "type_charger_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_66": {
                "modelId": 17,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 20,
                "defaultName": "typeCharger",
                "usingFirstDefaultName": true,
                "name": "typeCharger",
                "parentKeyId": 182,
                "foreignKeyName": "type_charger_id",
                "inverseId": 65,
                "foreignKeyId": 191,
                "id": 66,
                "createdAt": "2024-07-29 11:19:26",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "type_chargers",
                "relatedModelName": "App\\Models\\TypeCharger",
                "parentTableName": "chargers",
                "parentModelName": "App\\Models\\Charger",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "typeCharger",
                    "type": "BelongsTo",
                    "relatedTableName": "type_chargers",
                    "relatedModelName": "App\\Models\\TypeCharger",
                    "parentTableName": "chargers",
                    "parentModelName": "App\\Models\\Charger",
                    "foreignKeyName": "type_charger_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_67": {
                "name": "chargers",
                "modelId": 18,
                "projectId": 1,
                "relatedModelId": 17,
                "type": "HasMany",
                "foreignKeyName": "power_charger_id",
                "parentKeyId": 176,
                "foreignKeyId": 192,
                "defaultName": "chargers",
                "usingFirstDefaultName": true,
                "id": 67,
                "createdAt": "2024-07-29 11:19:35",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 68,
                "removed": false,
                "relatedTableName": "chargers",
                "relatedModelName": "App\\Models\\Charger",
                "parentTableName": "power_chargers",
                "parentModelName": "App\\Models\\PowerCharger",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargers",
                    "type": "HasMany",
                    "relatedTableName": "chargers",
                    "relatedModelName": "App\\Models\\Charger",
                    "parentTableName": "power_chargers",
                    "parentModelName": "App\\Models\\PowerCharger",
                    "foreignKeyName": "power_charger_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_68": {
                "modelId": 17,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 18,
                "defaultName": "powerCharger2",
                "usingFirstDefaultName": false,
                "name": "powerCharger",
                "parentKeyId": 176,
                "foreignKeyName": "power_charger_id",
                "inverseId": 67,
                "foreignKeyId": 192,
                "id": 68,
                "createdAt": "2024-07-29 11:19:35",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "power_chargers",
                "relatedModelName": "App\\Models\\PowerCharger",
                "parentTableName": "chargers",
                "parentModelName": "App\\Models\\Charger",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "powerCharger",
                    "type": "BelongsTo",
                    "relatedTableName": "power_chargers",
                    "relatedModelName": "App\\Models\\PowerCharger",
                    "parentTableName": "chargers",
                    "parentModelName": "App\\Models\\Charger",
                    "foreignKeyName": "power_charger_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_69": {
                "name": "chargers",
                "modelId": 10,
                "projectId": 1,
                "relatedModelId": 17,
                "type": "HasMany",
                "foreignKeyName": "charger_location_id",
                "parentKeyId": 109,
                "foreignKeyId": 193,
                "defaultName": "chargers",
                "usingFirstDefaultName": true,
                "id": 69,
                "createdAt": "2024-07-29 11:20:41",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 70,
                "removed": false,
                "relatedTableName": "chargers",
                "relatedModelName": "App\\Models\\Charger",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargers",
                    "type": "HasMany",
                    "relatedTableName": "chargers",
                    "relatedModelName": "App\\Models\\Charger",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "charger_location_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_70": {
                "modelId": 17,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 10,
                "defaultName": "chargerLocation",
                "usingFirstDefaultName": true,
                "name": "chargerLocation",
                "parentKeyId": 109,
                "foreignKeyName": "charger_location_id",
                "inverseId": 69,
                "foreignKeyId": 193,
                "id": 70,
                "createdAt": "2024-07-29 11:20:41",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "chargers",
                "parentModelName": "App\\Models\\Charger",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocation",
                    "type": "BelongsTo",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "chargers",
                    "parentModelName": "App\\Models\\Charger",
                    "foreignKeyName": "charger_location_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_73": {
                "name": "charges",
                "modelId": 16,
                "projectId": 1,
                "relatedModelId": 25,
                "type": "HasMany",
                "foreignKeyName": "vehicle_id",
                "parentKeyId": 159,
                "foreignKeyId": 204,
                "defaultName": "charges",
                "usingFirstDefaultName": true,
                "id": 73,
                "createdAt": "2024-07-29 11:24:43",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 74,
                "removed": false,
                "relatedTableName": "charges",
                "relatedModelName": "App\\Models\\Charge",
                "parentTableName": "vehicles",
                "parentModelName": "App\\Models\\Vehicle",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "charges",
                    "type": "HasMany",
                    "relatedTableName": "charges",
                    "relatedModelName": "App\\Models\\Charge",
                    "parentTableName": "vehicles",
                    "parentModelName": "App\\Models\\Vehicle",
                    "foreignKeyName": "vehicle_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_74": {
                "modelId": 25,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 16,
                "defaultName": "vehicle",
                "usingFirstDefaultName": true,
                "name": "vehicle",
                "parentKeyId": 159,
                "foreignKeyName": "vehicle_id",
                "inverseId": 73,
                "foreignKeyId": 204,
                "id": 74,
                "createdAt": "2024-07-29 11:24:43",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "vehicles",
                "relatedModelName": "App\\Models\\Vehicle",
                "parentTableName": "charges",
                "parentModelName": "App\\Models\\Charge",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "vehicle",
                    "type": "BelongsTo",
                    "relatedTableName": "vehicles",
                    "relatedModelName": "App\\Models\\Vehicle",
                    "parentTableName": "charges",
                    "parentModelName": "App\\Models\\Charge",
                    "foreignKeyName": "vehicle_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_75": {
                "name": "charges",
                "modelId": 10,
                "projectId": 1,
                "relatedModelId": 25,
                "type": "HasMany",
                "foreignKeyName": "charger_location_id",
                "parentKeyId": 109,
                "foreignKeyId": 207,
                "defaultName": "charges",
                "usingFirstDefaultName": true,
                "id": 75,
                "createdAt": "2024-07-29 11:25:08",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 76,
                "removed": false,
                "relatedTableName": "charges",
                "relatedModelName": "App\\Models\\Charge",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "charges",
                    "type": "HasMany",
                    "relatedTableName": "charges",
                    "relatedModelName": "App\\Models\\Charge",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "charger_location_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_76": {
                "modelId": 25,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 10,
                "defaultName": "chargerLocation",
                "usingFirstDefaultName": true,
                "name": "chargerLocation",
                "parentKeyId": 109,
                "foreignKeyName": "charger_location_id",
                "inverseId": 75,
                "foreignKeyId": 207,
                "id": 76,
                "createdAt": "2024-07-29 11:25:08",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "charges",
                "parentModelName": "App\\Models\\Charge",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocation",
                    "type": "BelongsTo",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "charges",
                    "parentModelName": "App\\Models\\Charge",
                    "foreignKeyName": "charger_location_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_81": {
                "name": "stateOfHealths",
                "modelId": 16,
                "projectId": 1,
                "relatedModelId": 32,
                "type": "HasMany",
                "foreignKeyName": "vehicle_id",
                "parentKeyId": 159,
                "foreignKeyId": 228,
                "defaultName": "stateOfHealths",
                "usingFirstDefaultName": true,
                "id": 81,
                "createdAt": "2024-07-29 13:03:42",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 82,
                "removed": false,
                "relatedTableName": "state_of_healths",
                "relatedModelName": "App\\Models\\StateOfHealth",
                "parentTableName": "vehicles",
                "parentModelName": "App\\Models\\Vehicle",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "stateOfHealths",
                    "type": "HasMany",
                    "relatedTableName": "state_of_healths",
                    "relatedModelName": "App\\Models\\StateOfHealth",
                    "parentTableName": "vehicles",
                    "parentModelName": "App\\Models\\Vehicle",
                    "foreignKeyName": "vehicle_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_82": {
                "modelId": 32,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 16,
                "defaultName": "vehicle",
                "usingFirstDefaultName": true,
                "name": "vehicle",
                "parentKeyId": 159,
                "foreignKeyName": "vehicle_id",
                "inverseId": 81,
                "foreignKeyId": 228,
                "id": 82,
                "createdAt": "2024-07-29 13:03:42",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "vehicles",
                "relatedModelName": "App\\Models\\Vehicle",
                "parentTableName": "state_of_healths",
                "parentModelName": "App\\Models\\StateOfHealth",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "vehicle",
                    "type": "BelongsTo",
                    "relatedTableName": "vehicles",
                    "relatedModelName": "App\\Models\\Vehicle",
                    "parentTableName": "state_of_healths",
                    "parentModelName": "App\\Models\\StateOfHealth",
                    "foreignKeyName": "vehicle_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_83": {
                "name": "stateOfHealths",
                "modelId": 1,
                "projectId": 1,
                "relatedModelId": 32,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 53,
                "foreignKeyId": 232,
                "defaultName": "stateOfHealths",
                "usingFirstDefaultName": true,
                "id": 83,
                "createdAt": "2024-07-29 13:04:49",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 84,
                "removed": false,
                "relatedTableName": "state_of_healths",
                "relatedModelName": "App\\Models\\StateOfHealth",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "stateOfHealths",
                    "type": "HasMany",
                    "relatedTableName": "state_of_healths",
                    "relatedModelName": "App\\Models\\StateOfHealth",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_84": {
                "modelId": 32,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 1,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 53,
                "foreignKeyName": "user_id",
                "inverseId": 83,
                "foreignKeyId": 232,
                "id": 84,
                "createdAt": "2024-07-29 13:04:49",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "state_of_healths",
                "parentModelName": "App\\Models\\StateOfHealth",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "state_of_healths",
                    "parentModelName": "App\\Models\\StateOfHealth",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_112": {
                "name": "providers",
                "modelId": 2,
                "projectId": 1,
                "relatedModelId": 9,
                "type": "HasMany",
                "foreignKeyName": "province_id",
                "parentKeyId": 66,
                "foreignKeyId": 240,
                "defaultName": "providers",
                "usingFirstDefaultName": true,
                "id": 112,
                "createdAt": "2024-07-29 21:30:12",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 113,
                "removed": false,
                "relatedTableName": "providers",
                "relatedModelName": "App\\Models\\Provider",
                "parentTableName": "provinces",
                "parentModelName": "App\\Models\\Province",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "providers",
                    "type": "HasMany",
                    "relatedTableName": "providers",
                    "relatedModelName": "App\\Models\\Provider",
                    "parentTableName": "provinces",
                    "parentModelName": "App\\Models\\Province",
                    "foreignKeyName": "province_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_113": {
                "modelId": 9,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 2,
                "defaultName": "province",
                "usingFirstDefaultName": true,
                "name": "province",
                "parentKeyId": 66,
                "foreignKeyName": "province_id",
                "inverseId": 112,
                "foreignKeyId": 240,
                "id": 113,
                "createdAt": "2024-07-29 21:30:12",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "provinces",
                "relatedModelName": "App\\Models\\Province",
                "parentTableName": "providers",
                "parentModelName": "App\\Models\\Provider",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "province",
                    "type": "BelongsTo",
                    "relatedTableName": "provinces",
                    "relatedModelName": "App\\Models\\Province",
                    "parentTableName": "providers",
                    "parentModelName": "App\\Models\\Provider",
                    "foreignKeyName": "province_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_114": {
                "name": "providers",
                "modelId": 3,
                "projectId": 1,
                "relatedModelId": 9,
                "type": "HasMany",
                "foreignKeyName": "city_id",
                "parentKeyId": 69,
                "foreignKeyId": 241,
                "defaultName": "providers",
                "usingFirstDefaultName": true,
                "id": 114,
                "createdAt": "2024-07-29 21:30:20",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 115,
                "removed": false,
                "relatedTableName": "providers",
                "relatedModelName": "App\\Models\\Provider",
                "parentTableName": "cities",
                "parentModelName": "App\\Models\\City",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "providers",
                    "type": "HasMany",
                    "relatedTableName": "providers",
                    "relatedModelName": "App\\Models\\Provider",
                    "parentTableName": "cities",
                    "parentModelName": "App\\Models\\City",
                    "foreignKeyName": "city_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_115": {
                "modelId": 9,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 3,
                "defaultName": "city",
                "usingFirstDefaultName": true,
                "name": "city",
                "parentKeyId": 69,
                "foreignKeyName": "city_id",
                "inverseId": 114,
                "foreignKeyId": 241,
                "id": 115,
                "createdAt": "2024-07-29 21:30:20",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "cities",
                "relatedModelName": "App\\Models\\City",
                "parentTableName": "providers",
                "parentModelName": "App\\Models\\Provider",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "city",
                    "type": "BelongsTo",
                    "relatedTableName": "cities",
                    "relatedModelName": "App\\Models\\City",
                    "parentTableName": "providers",
                    "parentModelName": "App\\Models\\Provider",
                    "foreignKeyName": "city_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_116": {
                "name": "providers",
                "modelId": 4,
                "projectId": 1,
                "relatedModelId": 9,
                "type": "HasMany",
                "foreignKeyName": "district_id",
                "parentKeyId": 72,
                "foreignKeyId": 242,
                "defaultName": "providers",
                "usingFirstDefaultName": true,
                "id": 116,
                "createdAt": "2024-07-29 21:30:29",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 117,
                "removed": false,
                "relatedTableName": "providers",
                "relatedModelName": "App\\Models\\Provider",
                "parentTableName": "districts",
                "parentModelName": "App\\Models\\District",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "providers",
                    "type": "HasMany",
                    "relatedTableName": "providers",
                    "relatedModelName": "App\\Models\\Provider",
                    "parentTableName": "districts",
                    "parentModelName": "App\\Models\\District",
                    "foreignKeyName": "district_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_117": {
                "modelId": 9,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 4,
                "defaultName": "district",
                "usingFirstDefaultName": true,
                "name": "district",
                "parentKeyId": 72,
                "foreignKeyName": "district_id",
                "inverseId": 116,
                "foreignKeyId": 242,
                "id": 117,
                "createdAt": "2024-07-29 21:30:29",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "districts",
                "relatedModelName": "App\\Models\\District",
                "parentTableName": "providers",
                "parentModelName": "App\\Models\\Provider",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "district",
                    "type": "BelongsTo",
                    "relatedTableName": "districts",
                    "relatedModelName": "App\\Models\\District",
                    "parentTableName": "providers",
                    "parentModelName": "App\\Models\\Provider",
                    "foreignKeyName": "district_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_118": {
                "name": "providers",
                "modelId": 5,
                "projectId": 1,
                "relatedModelId": 9,
                "type": "HasMany",
                "foreignKeyName": "subdistrict_id",
                "parentKeyId": 75,
                "foreignKeyId": 243,
                "defaultName": "providers",
                "usingFirstDefaultName": true,
                "id": 118,
                "createdAt": "2024-07-29 21:30:36",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 119,
                "removed": false,
                "relatedTableName": "providers",
                "relatedModelName": "App\\Models\\Provider",
                "parentTableName": "subdistricts",
                "parentModelName": "App\\Models\\Subdistrict",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "providers",
                    "type": "HasMany",
                    "relatedTableName": "providers",
                    "relatedModelName": "App\\Models\\Provider",
                    "parentTableName": "subdistricts",
                    "parentModelName": "App\\Models\\Subdistrict",
                    "foreignKeyName": "subdistrict_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_119": {
                "modelId": 9,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 5,
                "defaultName": "subdistrict",
                "usingFirstDefaultName": true,
                "name": "subdistrict",
                "parentKeyId": 75,
                "foreignKeyName": "subdistrict_id",
                "inverseId": 118,
                "foreignKeyId": 243,
                "id": 119,
                "createdAt": "2024-07-29 21:30:36",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "subdistricts",
                "relatedModelName": "App\\Models\\Subdistrict",
                "parentTableName": "providers",
                "parentModelName": "App\\Models\\Provider",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "subdistrict",
                    "type": "BelongsTo",
                    "relatedTableName": "subdistricts",
                    "relatedModelName": "App\\Models\\Subdistrict",
                    "parentTableName": "providers",
                    "parentModelName": "App\\Models\\Provider",
                    "foreignKeyName": "subdistrict_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_120": {
                "name": "providers",
                "modelId": 6,
                "projectId": 1,
                "relatedModelId": 9,
                "type": "HasMany",
                "foreignKeyName": "postal_code_id",
                "parentKeyId": 78,
                "foreignKeyId": 244,
                "defaultName": "providers",
                "usingFirstDefaultName": true,
                "id": 120,
                "createdAt": "2024-07-29 21:30:48",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 121,
                "removed": false,
                "relatedTableName": "providers",
                "relatedModelName": "App\\Models\\Provider",
                "parentTableName": "postal_codes",
                "parentModelName": "App\\Models\\PostalCode",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "providers",
                    "type": "HasMany",
                    "relatedTableName": "providers",
                    "relatedModelName": "App\\Models\\Provider",
                    "parentTableName": "postal_codes",
                    "parentModelName": "App\\Models\\PostalCode",
                    "foreignKeyName": "postal_code_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_121": {
                "modelId": 9,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 6,
                "defaultName": "postalCode",
                "usingFirstDefaultName": true,
                "name": "postalCode",
                "parentKeyId": 78,
                "foreignKeyName": "postal_code_id",
                "inverseId": 120,
                "foreignKeyId": 244,
                "id": 121,
                "createdAt": "2024-07-29 21:30:48",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "postal_codes",
                "relatedModelName": "App\\Models\\PostalCode",
                "parentTableName": "providers",
                "parentModelName": "App\\Models\\Provider",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "postalCode",
                    "type": "BelongsTo",
                    "relatedTableName": "postal_codes",
                    "relatedModelName": "App\\Models\\PostalCode",
                    "parentTableName": "providers",
                    "parentModelName": "App\\Models\\Provider",
                    "foreignKeyName": "postal_code_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_167": {
                "name": "vehicles",
                "modelId": 1,
                "projectId": 1,
                "relatedModelId": 16,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 53,
                "foreignKeyId": 248,
                "defaultName": "vehicles",
                "usingFirstDefaultName": true,
                "id": 167,
                "createdAt": "2024-07-30 11:56:02",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 168,
                "removed": false,
                "relatedTableName": "vehicles",
                "relatedModelName": "App\\Models\\Vehicle",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "vehicles",
                    "type": "HasMany",
                    "relatedTableName": "vehicles",
                    "relatedModelName": "App\\Models\\Vehicle",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_168": {
                "modelId": 16,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 1,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 53,
                "foreignKeyName": "user_id",
                "inverseId": 167,
                "foreignKeyId": 248,
                "id": 168,
                "createdAt": "2024-07-30 11:56:02",
                "updatedAt": "2024-08-19 09:14:58",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "vehicles",
                "parentModelName": "App\\Models\\Vehicle",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "vehicles",
                    "parentModelName": "App\\Models\\Vehicle",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_169": {
                "name": "charges",
                "modelId": 1,
                "projectId": 1,
                "relatedModelId": 25,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 53,
                "foreignKeyId": 249,
                "defaultName": "charges",
                "usingFirstDefaultName": true,
                "id": 169,
                "createdAt": "2024-07-30 11:57:42",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 170,
                "removed": false,
                "relatedTableName": "charges",
                "relatedModelName": "App\\Models\\Charge",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "charges",
                    "type": "HasMany",
                    "relatedTableName": "charges",
                    "relatedModelName": "App\\Models\\Charge",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_170": {
                "modelId": 25,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 1,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 53,
                "foreignKeyName": "user_id",
                "inverseId": 169,
                "foreignKeyId": 249,
                "id": 170,
                "createdAt": "2024-07-30 11:57:42",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "charges",
                "parentModelName": "App\\Models\\Charge",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "charges",
                    "parentModelName": "App\\Models\\Charge",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_366": {
                "modelId": 25,
                "projectId": 1,
                "name": "charger",
                "type": "BelongsTo",
                "relatedTableName": "chargers",
                "relatedModelName": "App\\Models\\Charger",
                "parentTableName": "charges",
                "parentModelName": "App\\Models\\Charge",
                "foreignKeyName": "charger_id",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "charger",
                    "type": "BelongsTo",
                    "relatedTableName": "chargers",
                    "relatedModelName": "App\\Models\\Charger",
                    "parentTableName": "charges",
                    "parentModelName": "App\\Models\\Charge",
                    "foreignKeyName": "charger_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 366,
                "createdAt": "2024-08-06 23:26:33",
                "updatedAt": "2024-08-19 09:14:57",
                "relatedModelId": 17,
                "parentKeyId": 170,
                "foreignKeyId": 208,
                "inverseId": 367,
                "removed": false
            },
            "item_367": {
                "modelId": 17,
                "projectId": 1,
                "name": "charge",
                "type": "HasMany",
                "relatedTableName": "charges",
                "relatedModelName": "App\\Models\\Charge",
                "parentTableName": "chargers",
                "parentModelName": "App\\Models\\Charger",
                "foreignKeyName": "charger_id",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "charge",
                    "type": "HasMany",
                    "relatedTableName": "charges",
                    "relatedModelName": "App\\Models\\Charge",
                    "parentTableName": "chargers",
                    "parentModelName": "App\\Models\\Charger",
                    "foreignKeyName": "charger_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                },
                "id": 367,
                "createdAt": "2024-08-06 23:26:33",
                "updatedAt": "2024-08-19 09:14:57",
                "relatedModelId": 25,
                "parentKeyId": 170,
                "foreignKeyId": 208,
                "inverseId": 366,
                "removed": false
            },
            "item_380": {
                "name": "discountHomeChargings",
                "modelId": 1,
                "projectId": 1,
                "relatedModelId": 249,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 53,
                "foreignKeyId": 283,
                "defaultName": "discountHomeChargings",
                "usingFirstDefaultName": true,
                "id": 380,
                "createdAt": "2024-08-19 08:50:46",
                "updatedAt": "2024-08-19 09:14:58",
                "inverseId": 381,
                "removed": false,
                "relatedTableName": "discount_home_chargings",
                "relatedModelName": "App\\Models\\DiscountHomeCharging",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "discountHomeChargings",
                    "type": "HasMany",
                    "relatedTableName": "discount_home_chargings",
                    "relatedModelName": "App\\Models\\DiscountHomeCharging",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_381": {
                "modelId": 249,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 1,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 53,
                "foreignKeyName": "user_id",
                "inverseId": 380,
                "foreignKeyId": 283,
                "id": 381,
                "createdAt": "2024-08-19 08:50:46",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "discount_home_chargings",
                "parentModelName": "App\\Models\\DiscountHomeCharging",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "discount_home_chargings",
                    "parentModelName": "App\\Models\\DiscountHomeCharging",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_382": {
                "name": "discountHomeChargings",
                "modelId": 10,
                "projectId": 1,
                "relatedModelId": 249,
                "type": "HasMany",
                "foreignKeyName": "charger_location_id",
                "parentKeyId": 109,
                "foreignKeyId": 288,
                "defaultName": "discountHomeChargings",
                "usingFirstDefaultName": true,
                "id": 382,
                "createdAt": "2024-08-19 08:53:50",
                "updatedAt": "2024-08-19 09:14:57",
                "inverseId": 383,
                "removed": false,
                "relatedTableName": "discount_home_chargings",
                "relatedModelName": "App\\Models\\DiscountHomeCharging",
                "parentTableName": "charger_locations",
                "parentModelName": "App\\Models\\ChargerLocation",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "discountHomeChargings",
                    "type": "HasMany",
                    "relatedTableName": "discount_home_chargings",
                    "relatedModelName": "App\\Models\\DiscountHomeCharging",
                    "parentTableName": "charger_locations",
                    "parentModelName": "App\\Models\\ChargerLocation",
                    "foreignKeyName": "charger_location_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_383": {
                "modelId": 249,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 10,
                "defaultName": "chargerLocation",
                "usingFirstDefaultName": true,
                "name": "chargerLocation",
                "parentKeyId": 109,
                "foreignKeyName": "charger_location_id",
                "inverseId": 382,
                "foreignKeyId": 288,
                "id": 383,
                "createdAt": "2024-08-19 08:53:50",
                "updatedAt": "2024-08-19 09:14:57",
                "removed": false,
                "relatedTableName": "charger_locations",
                "relatedModelName": "App\\Models\\ChargerLocation",
                "parentTableName": "discount_home_chargings",
                "parentModelName": "App\\Models\\DiscountHomeCharging",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "chargerLocation",
                    "type": "BelongsTo",
                    "relatedTableName": "charger_locations",
                    "relatedModelName": "App\\Models\\ChargerLocation",
                    "parentTableName": "discount_home_chargings",
                    "parentModelName": "App\\Models\\DiscountHomeCharging",
                    "foreignKeyName": "charger_location_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            }
        },
        "cruds": {
            "__tableData": {
                "count": 22,
                "lastPrimaryKey": 34,
                "index": {
                    "4": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                4
                            ],
                            "inputs.crudId": [
                                24,
                                25,
                                26,
                                29,
                                30,
                                31,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                205,
                                206,
                                246,
                                268
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                6
                            ],
                            "inputs.crudId": [
                                41,
                                249
                            ],
                            "has_many_details.crudId": [
                                5
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                7
                            ],
                            "inputs.crudId": [
                                42,
                                43
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                9
                            ],
                            "inputs.crudId": [
                                49,
                                50,
                                51,
                                52,
                                53,
                                204
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                11
                            ],
                            "inputs.crudId": [
                                66,
                                67
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                12
                            ],
                            "inputs.crudId": [
                                68
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                13
                            ],
                            "inputs.crudId": [
                                70,
                                255
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                14
                            ],
                            "inputs.crudId": [
                                71,
                                72,
                                73,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                247,
                                248
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                16
                            ],
                            "inputs.crudId": [
                                93,
                                94,
                                95,
                                96,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                17
                            ],
                            "inputs.crudId": [
                                110,
                                111,
                                112,
                                113,
                                114,
                                115
                            ],
                            "has_many_details.crudId": [
                                1,
                                2
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                18
                            ],
                            "inputs.crudId": [
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                122,
                                123,
                                124,
                                125,
                                126,
                                127,
                                128,
                                129,
                                130,
                                131
                            ],
                            "has_many_details.detailCrudId": [
                                1
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                19
                            ],
                            "inputs.crudId": [
                                132,
                                133,
                                134,
                                135,
                                136,
                                137
                            ],
                            "has_many_details.detailCrudId": [
                                2
                            ]
                        }
                    },
                    "21": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                21
                            ],
                            "inputs.crudId": [
                                144,
                                145,
                                146,
                                147,
                                148,
                                149,
                                150,
                                151,
                                153,
                                154,
                                155,
                                156,
                                157,
                                158,
                                159
                            ],
                            "has_many_details.crudId": [
                                3
                            ]
                        }
                    },
                    "22": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                22
                            ],
                            "inputs.crudId": [
                                160,
                                161,
                                162,
                                163,
                                164
                            ],
                            "has_many_details.detailCrudId": [
                                3
                            ]
                        }
                    },
                    "27": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                27
                            ],
                            "inputs.crudId": [
                                219,
                                220,
                                221,
                                222,
                                223
                            ]
                        }
                    },
                    "28": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                28
                            ],
                            "inputs.crudId": [
                                234,
                                235,
                                236,
                                256
                            ]
                        }
                    },
                    "29": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                29
                            ],
                            "inputs.crudId": [
                                239,
                                240,
                                241,
                                242,
                                243,
                                245
                            ]
                        }
                    },
                    "30": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                30
                            ],
                            "inputs.crudId": [
                                250,
                                251
                            ],
                            "has_many_details.detailCrudId": [
                                5
                            ],
                            "has_many_details.crudId": [
                                6
                            ]
                        }
                    },
                    "31": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                31
                            ],
                            "inputs.crudId": [
                                252,
                                253,
                                254
                            ],
                            "has_many_details.detailCrudId": [
                                6
                            ]
                        }
                    },
                    "32": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                32
                            ],
                            "inputs.crudId": [
                                257,
                                258,
                                260,
                                261,
                                262,
                                263,
                                264,
                                265,
                                266,
                                267
                            ]
                        }
                    },
                    "33": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                33
                            ],
                            "inputs.crudId": [
                                269,
                                270,
                                271
                            ]
                        }
                    },
                    "34": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                34
                            ],
                            "inputs.crudId": [
                                272,
                                273,
                                274,
                                275,
                                276,
                                277
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_4": {
                "type": "Filament",
                "name": "ChargerLocation",
                "plural": "ChargerLocations",
                "sectionId": 4,
                "modelId": 10,
                "tableId": 19,
                "projectId": 1,
                "basePath": "Charger Locations",
                "settings": {
                    "itemName": "chargerLocation",
                    "collectionName": "chargerLocations",
                    "itemTitle": "crud.chargerLocations.itemTitle",
                    "collectionTitle": "crud.chargerLocations.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\ChargerLocations\\Forms",
                "livewireIndexComponentName": "ChargerLocationIndex",
                "livewireShowComponentName": "ChargerLocationShow",
                "livewireCreateComponentName": "ChargerLocationCreate",
                "livewireEditComponentName": "ChargerLocationEdit",
                "defaultSearchColumnId": 113,
                "defaultSortColumnId": 111,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.chargerLocations.itemTitle",
                    "pluralModelLabel": "crud.chargerLocations.collectionTitle",
                    "navigationLabel": "crud.chargerLocations.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 3,
                    "navigationParentItem": "Apps",
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Apps",
                    "slug": null
                },
                "id": 4,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-29 18:24:02"
            },
            "item_6": {
                "type": "Filament",
                "name": "BrandVehicle",
                "plural": "BrandVehicles",
                "sectionId": 4,
                "modelId": 13,
                "tableId": 22,
                "projectId": 1,
                "basePath": "Brand Vehicles",
                "settings": {
                    "itemName": "brandVehicle",
                    "collectionName": "brandVehicles",
                    "itemTitle": "crud.brandVehicles.itemTitle",
                    "collectionTitle": "crud.brandVehicles.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\BrandVehicles\\Forms",
                "livewireIndexComponentName": "BrandVehicleIndex",
                "livewireShowComponentName": "BrandVehicleShow",
                "livewireCreateComponentName": "BrandVehicleCreate",
                "livewireEditComponentName": "BrandVehicleEdit",
                "defaultSearchColumnId": 148,
                "defaultSortColumnId": 147,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.brandVehicles.itemTitle",
                    "pluralModelLabel": "crud.brandVehicles.collectionTitle",
                    "navigationLabel": "crud.brandVehicles.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 2,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Vehicles",
                    "slug": null
                },
                "id": 6,
                "createdAt": "2024-07-29 13:06:32",
                "updatedAt": "2024-07-29 14:41:29"
            },
            "item_7": {
                "type": "Filament",
                "name": "ModelVehicle",
                "plural": "ModelVehicles",
                "sectionId": 4,
                "modelId": 14,
                "tableId": 23,
                "projectId": 1,
                "basePath": "Model Vehicles",
                "settings": {
                    "itemName": "modelVehicle",
                    "collectionName": "modelVehicles",
                    "itemTitle": "crud.modelVehicles.itemTitle",
                    "collectionTitle": "crud.modelVehicles.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\ModelVehicles\\Forms",
                "livewireIndexComponentName": "ModelVehicleIndex",
                "livewireShowComponentName": "ModelVehicleShow",
                "livewireCreateComponentName": "ModelVehicleCreate",
                "livewireEditComponentName": "ModelVehicleEdit",
                "defaultSearchColumnId": 152,
                "defaultSortColumnId": 151,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.modelVehicles.itemTitle",
                    "pluralModelLabel": "crud.modelVehicles.collectionTitle",
                    "navigationLabel": "crud.modelVehicles.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 2,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Vehicles",
                    "slug": null
                },
                "id": 7,
                "createdAt": "2024-07-29 13:06:36",
                "updatedAt": "2024-07-29 14:41:35"
            },
            "item_9": {
                "type": "Filament",
                "name": "Vehicle",
                "plural": "Vehicles",
                "sectionId": 4,
                "modelId": 16,
                "tableId": 25,
                "projectId": 1,
                "basePath": "Vehicles",
                "settings": {
                    "itemName": "vehicle",
                    "collectionName": "vehicles",
                    "itemTitle": "crud.vehicles.itemTitle",
                    "collectionTitle": "crud.vehicles.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Vehicles\\Forms",
                "livewireIndexComponentName": "VehicleIndex",
                "livewireShowComponentName": "VehicleShow",
                "livewireCreateComponentName": "VehicleCreate",
                "livewireEditComponentName": "VehicleEdit",
                "defaultSearchColumnId": 167,
                "defaultSortColumnId": 161,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.vehicles.itemTitle",
                    "pluralModelLabel": "crud.vehicles.collectionTitle",
                    "navigationLabel": "crud.vehicles.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 2,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Apps",
                    "slug": null
                },
                "id": 9,
                "createdAt": "2024-07-29 13:06:45",
                "updatedAt": "2024-07-29 14:41:47"
            },
            "item_11": {
                "type": "Filament",
                "name": "PowerCharger",
                "plural": "PowerChargers",
                "sectionId": 4,
                "modelId": 18,
                "tableId": 27,
                "projectId": 1,
                "basePath": "Power Chargers",
                "settings": {
                    "itemName": "powerCharger",
                    "collectionName": "powerChargers",
                    "itemTitle": "crud.powerChargers.itemTitle",
                    "collectionTitle": "crud.powerChargers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\PowerChargers\\Forms",
                "livewireIndexComponentName": "PowerChargerIndex",
                "livewireShowComponentName": "PowerChargerShow",
                "livewireCreateComponentName": "PowerChargerCreate",
                "livewireEditComponentName": "PowerChargerEdit",
                "defaultSearchColumnId": 187,
                "defaultSortColumnId": 178,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.powerChargers.itemTitle",
                    "pluralModelLabel": "crud.powerChargers.collectionTitle",
                    "navigationLabel": "crud.powerChargers.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 3,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Chargers",
                    "slug": null
                },
                "id": 11,
                "createdAt": "2024-07-29 13:06:55",
                "updatedAt": "2024-07-29 14:45:13"
            },
            "item_12": {
                "type": "Filament",
                "name": "CurrentCharger",
                "plural": "CurrentChargers",
                "sectionId": 4,
                "modelId": 19,
                "tableId": 28,
                "projectId": 1,
                "basePath": "Current Chargers",
                "settings": {
                    "itemName": "currentCharger",
                    "collectionName": "currentChargers",
                    "itemTitle": "crud.currentChargers.itemTitle",
                    "collectionTitle": "crud.currentChargers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\CurrentChargers\\Forms",
                "livewireIndexComponentName": "CurrentChargerIndex",
                "livewireShowComponentName": "CurrentChargerShow",
                "livewireCreateComponentName": "CurrentChargerCreate",
                "livewireEditComponentName": "CurrentChargerEdit",
                "defaultSearchColumnId": 185,
                "defaultSortColumnId": 181,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.currentChargers.itemTitle",
                    "pluralModelLabel": "crud.currentChargers.collectionTitle",
                    "navigationLabel": "crud.currentChargers.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 3,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Chargers",
                    "slug": null
                },
                "id": 12,
                "createdAt": "2024-07-29 13:06:58",
                "updatedAt": "2024-07-29 14:45:20"
            },
            "item_13": {
                "type": "Filament",
                "name": "TypeCharger",
                "plural": "TypeChargers",
                "sectionId": 4,
                "modelId": 20,
                "tableId": 29,
                "projectId": 1,
                "basePath": "Type Chargers",
                "settings": {
                    "itemName": "typeCharger",
                    "collectionName": "typeChargers",
                    "itemTitle": "crud.typeChargers.itemTitle",
                    "collectionTitle": "crud.typeChargers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\TypeChargers\\Forms",
                "livewireIndexComponentName": "TypeChargerIndex",
                "livewireShowComponentName": "TypeChargerShow",
                "livewireCreateComponentName": "TypeChargerCreate",
                "livewireEditComponentName": "TypeChargerEdit",
                "defaultSearchColumnId": 186,
                "defaultSortColumnId": 184,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.typeChargers.itemTitle",
                    "pluralModelLabel": "crud.typeChargers.collectionTitle",
                    "navigationLabel": "crud.typeChargers.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 3,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Chargers",
                    "slug": null
                },
                "id": 13,
                "createdAt": "2024-07-29 13:07:03",
                "updatedAt": "2024-07-29 14:43:24"
            },
            "item_14": {
                "type": "Filament",
                "name": "Charge",
                "plural": "Charges",
                "sectionId": 4,
                "modelId": 25,
                "tableId": 30,
                "projectId": 1,
                "basePath": "Charges",
                "settings": {
                    "itemName": "charge",
                    "collectionName": "charges",
                    "itemTitle": "crud.charges.itemTitle",
                    "collectionTitle": "crud.charges.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Charges\\Forms",
                "livewireIndexComponentName": "ChargeIndex",
                "livewireShowComponentName": "ChargeShow",
                "livewireCreateComponentName": "ChargeCreate",
                "livewireEditComponentName": "ChargeEdit",
                "defaultSearchColumnId": 205,
                "defaultSortColumnId": 203,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.charges.itemTitle",
                    "pluralModelLabel": "crud.charges.collectionTitle",
                    "navigationLabel": "crud.charges.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Apps",
                    "slug": null
                },
                "id": 14,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-29 14:33:10"
            },
            "item_16": {
                "type": "API",
                "name": "Charge",
                "plural": "Charges",
                "sectionId": 2,
                "modelId": 25,
                "tableId": 30,
                "projectId": 1,
                "basePath": "Charges",
                "settings": {
                    "itemName": "charge",
                    "collectionName": "charges",
                    "itemTitle": "crud.charges.itemTitle",
                    "collectionTitle": "crud.charges.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Api",
                "livewireFormsNamespace": "App\\Livewire\\Api\\Charges\\Forms",
                "livewireIndexComponentName": "ChargeIndex",
                "livewireShowComponentName": "ChargeShow",
                "livewireCreateComponentName": "ChargeCreate",
                "livewireEditComponentName": "ChargeEdit",
                "defaultSearchColumnId": 205,
                "defaultSortColumnId": 203,
                "defaultSortDirection": "desc",
                "id": 16,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_17": {
                "type": "API",
                "name": "Vehicle",
                "plural": "Vehicles",
                "sectionId": 2,
                "modelId": 16,
                "tableId": 25,
                "projectId": 1,
                "basePath": "Vehicles",
                "settings": {
                    "itemName": "vehicle",
                    "collectionName": "vehicles",
                    "itemTitle": "crud.vehicles.itemTitle",
                    "collectionTitle": "crud.vehicles.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Api",
                "livewireFormsNamespace": "App\\Livewire\\Api\\Vehicles\\Forms",
                "livewireIndexComponentName": "VehicleIndex",
                "livewireShowComponentName": "VehicleShow",
                "livewireCreateComponentName": "VehicleCreate",
                "livewireEditComponentName": "VehicleEdit",
                "defaultSearchColumnId": 167,
                "defaultSortColumnId": 161,
                "defaultSortDirection": "desc",
                "id": 17,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_18": {
                "type": "API",
                "name": "Charge",
                "plural": "Charges",
                "sectionId": 2,
                "modelId": 25,
                "tableId": 30,
                "projectId": 1,
                "basePath": "VehicleChargesDetail",
                "settings": {
                    "itemName": "charge",
                    "collectionName": "charges",
                    "itemTitle": "crud.charges.itemTitle",
                    "collectionTitle": "crud.charges.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Api",
                "livewireFormsNamespace": "App\\Livewire\\Api\\Charges\\Forms",
                "livewireIndexComponentName": "ChargeIndex",
                "livewireShowComponentName": "ChargeShow",
                "livewireCreateComponentName": "ChargeCreate",
                "livewireEditComponentName": "ChargeEdit",
                "defaultSearchColumnId": 205,
                "defaultSortColumnId": 203,
                "defaultSortDirection": "desc",
                "id": 18,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12",
                "isHasManyDetail": true
            },
            "item_19": {
                "type": "API",
                "name": "State Of Health",
                "plural": "State Of Healths",
                "sectionId": 2,
                "modelId": 32,
                "tableId": 31,
                "projectId": 1,
                "basePath": "VehicleState Of HealthsDetail",
                "settings": {
                    "itemName": "stateOfHealth",
                    "collectionName": "stateOfHealths",
                    "itemTitle": "crud.stateOfHealths.itemTitle",
                    "collectionTitle": "crud.stateOfHealths.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Api",
                "livewireFormsNamespace": "App\\Livewire\\Api\\StateOfHealths\\Forms",
                "livewireIndexComponentName": "StateOfHealthIndex",
                "livewireShowComponentName": "StateOfHealthShow",
                "livewireCreateComponentName": "StateOfHealthCreate",
                "livewireEditComponentName": "StateOfHealthEdit",
                "defaultSearchColumnId": 226,
                "defaultSortColumnId": 225,
                "defaultSortDirection": "desc",
                "id": 19,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12",
                "isHasManyDetail": true
            },
            "item_21": {
                "type": "API",
                "name": "ChargerLocation",
                "plural": "ChargerLocations",
                "sectionId": 2,
                "modelId": 10,
                "tableId": 19,
                "projectId": 1,
                "basePath": "Charger Locations",
                "settings": {
                    "itemName": "chargerLocation",
                    "collectionName": "chargerLocations",
                    "itemTitle": "crud.chargerLocations.itemTitle",
                    "collectionTitle": "crud.chargerLocations.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Api",
                "livewireFormsNamespace": "App\\Livewire\\Api\\ChargerLocations\\Forms",
                "livewireIndexComponentName": "ChargerLocationIndex",
                "livewireShowComponentName": "ChargerLocationShow",
                "livewireCreateComponentName": "ChargerLocationCreate",
                "livewireEditComponentName": "ChargerLocationEdit",
                "defaultSearchColumnId": 113,
                "defaultSortColumnId": 111,
                "defaultSortDirection": "desc",
                "id": 21,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_22": {
                "type": "API",
                "name": "Charger",
                "plural": "Chargers",
                "sectionId": 2,
                "modelId": 17,
                "tableId": 26,
                "projectId": 1,
                "basePath": "Charger LocationChargersDetail",
                "settings": {
                    "itemName": "charger",
                    "collectionName": "chargers",
                    "itemTitle": "crud.chargers.itemTitle",
                    "collectionTitle": "crud.chargers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Api",
                "livewireFormsNamespace": "App\\Livewire\\Api\\Chargers\\Forms",
                "livewireIndexComponentName": "ChargerIndex",
                "livewireShowComponentName": "ChargerShow",
                "livewireCreateComponentName": "ChargerCreate",
                "livewireEditComponentName": "ChargerEdit",
                "defaultSearchColumnId": 171,
                "defaultSortColumnId": 172,
                "defaultSortDirection": "desc",
                "id": 22,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55",
                "isHasManyDetail": true
            },
            "item_27": {
                "type": "API",
                "name": "Charger",
                "plural": "Chargers",
                "sectionId": 2,
                "modelId": 17,
                "tableId": 26,
                "projectId": 1,
                "basePath": "Chargers",
                "settings": {
                    "itemName": "charger",
                    "collectionName": "chargers",
                    "itemTitle": "crud.chargers.itemTitle",
                    "collectionTitle": "crud.chargers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Api",
                "livewireFormsNamespace": "App\\Livewire\\Api\\Chargers\\Forms",
                "livewireIndexComponentName": "ChargerIndex",
                "livewireShowComponentName": "ChargerShow",
                "livewireCreateComponentName": "ChargerCreate",
                "livewireEditComponentName": "ChargerEdit",
                "defaultSearchColumnId": 171,
                "defaultSortColumnId": 172,
                "defaultSortDirection": "desc",
                "id": 27,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_28": {
                "type": "Filament",
                "name": "TypeVehicle",
                "plural": "TypeVehicles",
                "sectionId": 4,
                "modelId": 15,
                "tableId": 24,
                "projectId": 1,
                "basePath": "Type Vehicles",
                "settings": {
                    "itemName": "typeVehicle",
                    "collectionName": "typeVehicles",
                    "itemTitle": "crud.typeVehicles.itemTitle",
                    "collectionTitle": "crud.typeVehicles.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\TypeVehicles\\Forms",
                "livewireIndexComponentName": "TypeVehicleIndex",
                "livewireShowComponentName": "TypeVehicleShow",
                "livewireCreateComponentName": "TypeVehicleCreate",
                "livewireEditComponentName": "TypeVehicleEdit",
                "defaultSearchColumnId": 156,
                "defaultSortColumnId": 155,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.typeVehicles.itemTitle",
                    "pluralModelLabel": "crud.typeVehicles.collectionTitle",
                    "navigationLabel": "crud.typeVehicles.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 2,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Vehicles",
                    "slug": null
                },
                "id": 28,
                "createdAt": "2024-07-30 08:58:15",
                "updatedAt": "2024-07-30 08:58:27"
            },
            "item_29": {
                "type": "Filament",
                "name": "StateOfHealth",
                "plural": "StateOfHealths",
                "sectionId": 4,
                "modelId": 32,
                "tableId": 31,
                "projectId": 1,
                "basePath": "State Of Healths",
                "settings": {
                    "itemName": "stateOfHealth",
                    "collectionName": "stateOfHealths",
                    "itemTitle": "crud.stateOfHealths.itemTitle",
                    "collectionTitle": "crud.stateOfHealths.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\StateOfHealths\\Forms",
                "livewireIndexComponentName": "StateOfHealthIndex",
                "livewireShowComponentName": "StateOfHealthShow",
                "livewireCreateComponentName": "StateOfHealthCreate",
                "livewireEditComponentName": "StateOfHealthEdit",
                "defaultSearchColumnId": 226,
                "defaultSortColumnId": 225,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.stateOfHealths.itemTitle",
                    "pluralModelLabel": "crud.stateOfHealths.collectionTitle",
                    "navigationLabel": "crud.stateOfHealths.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Apps",
                    "slug": null
                },
                "id": 29,
                "createdAt": "2024-07-30 11:59:03",
                "updatedAt": "2024-07-30 12:34:49"
            },
            "item_30": {
                "type": "Filament",
                "name": "Model Vehicle",
                "plural": "Model Vehicles",
                "sectionId": 4,
                "modelId": 14,
                "tableId": 23,
                "projectId": 1,
                "basePath": "Brand VehicleModel VehiclesDetail",
                "settings": {
                    "itemName": "modelVehicle",
                    "collectionName": "modelVehicles",
                    "itemTitle": "crud.modelVehicles.itemTitle",
                    "collectionTitle": "crud.modelVehicles.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\ModelVehicles\\Forms",
                "livewireIndexComponentName": "ModelVehicleIndex",
                "livewireShowComponentName": "ModelVehicleShow",
                "livewireCreateComponentName": "ModelVehicleCreate",
                "livewireEditComponentName": "ModelVehicleEdit",
                "defaultSearchColumnId": 152,
                "defaultSortColumnId": 151,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.modelVehicles.itemTitle",
                    "pluralModelLabel": "crud.modelVehicles.collectionTitle",
                    "navigationLabel": "crud.modelVehicles.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 30,
                "createdAt": "2024-07-30 15:49:50",
                "updatedAt": "2024-07-30 15:49:50",
                "isHasManyDetail": true
            },
            "item_31": {
                "type": "Filament",
                "name": "Type Vehicle",
                "plural": "Type Vehicles",
                "sectionId": 4,
                "modelId": 15,
                "tableId": 24,
                "projectId": 1,
                "basePath": "Model VehicleType VehiclesDetail",
                "settings": {
                    "itemName": "typeVehicle",
                    "collectionName": "typeVehicles",
                    "itemTitle": "crud.typeVehicles.itemTitle",
                    "collectionTitle": "crud.typeVehicles.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\TypeVehicles\\Forms",
                "livewireIndexComponentName": "TypeVehicleIndex",
                "livewireShowComponentName": "TypeVehicleShow",
                "livewireCreateComponentName": "TypeVehicleCreate",
                "livewireEditComponentName": "TypeVehicleEdit",
                "defaultSearchColumnId": 156,
                "defaultSortColumnId": 155,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.typeVehicles.itemTitle",
                    "pluralModelLabel": "crud.typeVehicles.collectionTitle",
                    "navigationLabel": "crud.typeVehicles.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 31,
                "createdAt": "2024-07-30 15:50:00",
                "updatedAt": "2024-07-30 15:50:00",
                "isHasManyDetail": true
            },
            "item_32": {
                "type": "Filament",
                "name": "Provider",
                "plural": "Providers",
                "sectionId": 4,
                "modelId": 9,
                "tableId": 18,
                "projectId": 1,
                "basePath": "Providers",
                "settings": {
                    "itemName": "provider",
                    "collectionName": "providers",
                    "itemTitle": "crud.providers.itemTitle",
                    "collectionTitle": "crud.providers.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Providers\\Forms",
                "livewireIndexComponentName": "ProviderIndex",
                "livewireShowComponentName": "ProviderShow",
                "livewireCreateComponentName": "ProviderCreate",
                "livewireEditComponentName": "ProviderEdit",
                "defaultSearchColumnId": 105,
                "defaultSortColumnId": 104,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.providers.itemTitle",
                    "pluralModelLabel": "crud.providers.collectionTitle",
                    "navigationLabel": "crud.providers.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Chargers",
                    "slug": null
                },
                "id": 32,
                "createdAt": "2024-07-30 18:34:37",
                "updatedAt": "2024-07-30 21:35:55"
            },
            "item_33": {
                "type": "Filament",
                "name": "User",
                "plural": "Users",
                "sectionId": 4,
                "modelId": 1,
                "tableId": 10,
                "projectId": 1,
                "basePath": "Users",
                "settings": {
                    "itemName": "user",
                    "collectionName": "users",
                    "itemTitle": "crud.users.itemTitle",
                    "collectionTitle": "crud.users.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\Users\\Forms",
                "livewireIndexComponentName": "UserIndex",
                "livewireShowComponentName": "UserShow",
                "livewireCreateComponentName": "UserCreate",
                "livewireEditComponentName": "UserEdit",
                "defaultSearchColumnId": 54,
                "defaultSortColumnId": 65,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.users.itemTitle",
                    "pluralModelLabel": "crud.users.collectionTitle",
                    "navigationLabel": "crud.users.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Admin",
                    "slug": null
                },
                "id": 33,
                "createdAt": "2024-07-30 22:45:20",
                "updatedAt": "2024-07-30 22:45:20"
            },
            "item_34": {
                "type": "Filament",
                "name": "DiscountHomeCharging",
                "plural": "DiscountHomeChargings",
                "sectionId": 4,
                "modelId": 249,
                "tableId": 37,
                "projectId": 1,
                "basePath": "Discount Home Chargings",
                "settings": {
                    "itemName": "discountHomeCharging",
                    "collectionName": "discountHomeChargings",
                    "itemTitle": "crud.discountHomeChargings.itemTitle",
                    "collectionTitle": "crud.discountHomeChargings.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\FilamentPanel",
                "livewireFormsNamespace": "App\\Livewire\\FilamentPanel\\DiscountHomeChargings\\Forms",
                "livewireIndexComponentName": "DiscountHomeChargingIndex",
                "livewireShowComponentName": "DiscountHomeChargingShow",
                "livewireCreateComponentName": "DiscountHomeChargingCreate",
                "livewireEditComponentName": "DiscountHomeChargingEdit",
                "defaultSearchColumnId": 288,
                "defaultSortColumnId": 282,
                "defaultSortDirection": "desc",
                "filamentSettings": {
                    "modelLabel": "crud.discountHomeChargings.itemTitle",
                    "pluralModelLabel": "crud.discountHomeChargings.collectionTitle",
                    "navigationLabel": "crud.discountHomeChargings.collectionTitle",
                    "navigationIcon": "heroicon-o-rectangle-stack",
                    "navigationOrder": 1,
                    "navigationParentItem": null,
                    "hasTitleCaseModelLabel": true,
                    "navigationGroup": "Apps",
                    "slug": null
                },
                "id": 34,
                "createdAt": "2024-08-19 08:59:11",
                "updatedAt": "2024-08-19 08:59:49"
            }
        },
        "crud_panels": {
            "__tableData": {
                "count": 22,
                "lastPrimaryKey": 34,
                "index": {
                    "4": {
                        "hasMany": {
                            "inputs.panelId": [
                                24,
                                25,
                                26,
                                29,
                                30,
                                31,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                205,
                                206,
                                246,
                                268
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "inputs.panelId": [
                                41,
                                249
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "inputs.panelId": [
                                42,
                                43
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "inputs.panelId": [
                                49,
                                50,
                                51,
                                52,
                                53,
                                204
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "inputs.panelId": [
                                66,
                                67
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "inputs.panelId": [
                                68
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "inputs.panelId": [
                                70,
                                255
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "inputs.panelId": [
                                71,
                                72,
                                73,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                247,
                                248
                            ]
                        }
                    },
                    "16": {
                        "hasMany": {
                            "inputs.panelId": [
                                93,
                                94,
                                95,
                                96,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108
                            ]
                        }
                    },
                    "17": {
                        "hasMany": {
                            "inputs.panelId": [
                                110,
                                111,
                                112,
                                113,
                                114,
                                115
                            ]
                        }
                    },
                    "18": {
                        "hasMany": {
                            "inputs.panelId": [
                                116,
                                117,
                                118,
                                119,
                                120,
                                121,
                                122,
                                123,
                                124,
                                125,
                                126,
                                127,
                                128,
                                129,
                                130,
                                131
                            ]
                        }
                    },
                    "19": {
                        "hasMany": {
                            "inputs.panelId": [
                                132,
                                133,
                                134,
                                135,
                                136,
                                137
                            ]
                        }
                    },
                    "21": {
                        "hasMany": {
                            "inputs.panelId": [
                                144,
                                145,
                                146,
                                147,
                                148,
                                149,
                                150,
                                151,
                                153,
                                154,
                                155,
                                156,
                                157,
                                158,
                                159
                            ]
                        }
                    },
                    "22": {
                        "hasMany": {
                            "inputs.panelId": [
                                160,
                                161,
                                162,
                                163,
                                164
                            ]
                        }
                    },
                    "27": {
                        "hasMany": {
                            "inputs.panelId": [
                                219,
                                220,
                                221,
                                222,
                                223
                            ]
                        }
                    },
                    "28": {
                        "hasMany": {
                            "inputs.panelId": [
                                234,
                                235,
                                236,
                                256
                            ]
                        }
                    },
                    "29": {
                        "hasMany": {
                            "inputs.panelId": [
                                239,
                                240,
                                241,
                                242,
                                243,
                                245
                            ]
                        }
                    },
                    "30": {
                        "hasMany": {
                            "inputs.panelId": [
                                250,
                                251
                            ]
                        }
                    },
                    "31": {
                        "hasMany": {
                            "inputs.panelId": [
                                252,
                                253,
                                254
                            ]
                        }
                    },
                    "32": {
                        "hasMany": {
                            "inputs.panelId": [
                                257,
                                258,
                                260,
                                261,
                                262,
                                263,
                                264,
                                265,
                                266,
                                267
                            ]
                        }
                    },
                    "33": {
                        "hasMany": {
                            "inputs.panelId": [
                                269,
                                270,
                                271
                            ]
                        }
                    },
                    "34": {
                        "hasMany": {
                            "inputs.panelId": [
                                272,
                                273,
                                274,
                                275,
                                276,
                                277
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_4": {
                "title": "Main",
                "crudId": 4,
                "order": 0,
                "id": 4,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-29 13:06:24"
            },
            "item_6": {
                "title": "Main",
                "crudId": 6,
                "order": 0,
                "id": 6,
                "createdAt": "2024-07-29 13:06:32",
                "updatedAt": "2024-07-29 13:06:32"
            },
            "item_7": {
                "title": "Main",
                "crudId": 7,
                "order": 0,
                "id": 7,
                "createdAt": "2024-07-29 13:06:36",
                "updatedAt": "2024-07-29 13:06:36"
            },
            "item_9": {
                "title": "Main",
                "crudId": 9,
                "order": 0,
                "id": 9,
                "createdAt": "2024-07-29 13:06:45",
                "updatedAt": "2024-07-29 13:06:45"
            },
            "item_11": {
                "title": "Main",
                "crudId": 11,
                "order": 0,
                "id": 11,
                "createdAt": "2024-07-29 13:06:55",
                "updatedAt": "2024-07-29 13:06:55"
            },
            "item_12": {
                "title": "Main",
                "crudId": 12,
                "order": 0,
                "id": 12,
                "createdAt": "2024-07-29 13:06:58",
                "updatedAt": "2024-07-29 13:06:58"
            },
            "item_13": {
                "title": "Main",
                "crudId": 13,
                "order": 0,
                "id": 13,
                "createdAt": "2024-07-29 13:07:03",
                "updatedAt": "2024-07-29 13:07:03"
            },
            "item_14": {
                "title": "Main",
                "crudId": 14,
                "order": 0,
                "id": 14,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-29 13:07:07"
            },
            "item_16": {
                "title": "Main",
                "crudId": 16,
                "order": 0,
                "id": 16,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_17": {
                "title": "Main",
                "crudId": 17,
                "order": 0,
                "id": 17,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_18": {
                "title": "Main",
                "crudId": 18,
                "order": 0,
                "id": 18,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_19": {
                "title": "Main",
                "crudId": 19,
                "order": 0,
                "id": 19,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_21": {
                "title": "Main",
                "crudId": 21,
                "order": 0,
                "id": 21,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_22": {
                "title": "Main",
                "crudId": 22,
                "order": 0,
                "id": 22,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_27": {
                "title": "Main",
                "crudId": 27,
                "order": 0,
                "id": 27,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_28": {
                "title": "Main",
                "crudId": 28,
                "order": 0,
                "id": 28,
                "createdAt": "2024-07-30 08:58:15",
                "updatedAt": "2024-07-30 08:58:15"
            },
            "item_29": {
                "title": "Main",
                "crudId": 29,
                "order": 0,
                "id": 29,
                "createdAt": "2024-07-30 11:59:03",
                "updatedAt": "2024-07-30 11:59:03"
            },
            "item_30": {
                "title": "Main",
                "crudId": 30,
                "order": 0,
                "id": 30,
                "createdAt": "2024-07-30 15:49:50",
                "updatedAt": "2024-07-30 15:49:50"
            },
            "item_31": {
                "title": "Main",
                "crudId": 31,
                "order": 0,
                "id": 31,
                "createdAt": "2024-07-30 15:50:00",
                "updatedAt": "2024-07-30 15:50:00"
            },
            "item_32": {
                "title": "Main",
                "crudId": 32,
                "order": 0,
                "id": 32,
                "createdAt": "2024-07-30 18:34:37",
                "updatedAt": "2024-07-30 18:34:37"
            },
            "item_33": {
                "title": "Main",
                "crudId": 33,
                "order": 0,
                "id": 33,
                "createdAt": "2024-07-30 22:45:20",
                "updatedAt": "2024-07-30 22:45:20"
            },
            "item_34": {
                "title": "Main",
                "crudId": 34,
                "order": 0,
                "id": 34,
                "createdAt": "2024-08-19 08:59:11",
                "updatedAt": "2024-08-19 08:59:11"
            }
        },
        "inputs": {
            "__tableData": {
                "count": 151,
                "lastPrimaryKey": 277,
                "index": {
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {}
                    },
                    "68": {
                        "hasMany": {}
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {}
                    },
                    "72": {
                        "hasMany": {}
                    },
                    "73": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {}
                    },
                    "80": {
                        "hasMany": {}
                    },
                    "81": {
                        "hasMany": {}
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {}
                    },
                    "84": {
                        "hasMany": {}
                    },
                    "85": {
                        "hasMany": {}
                    },
                    "86": {
                        "hasMany": {}
                    },
                    "93": {
                        "hasMany": {}
                    },
                    "94": {
                        "hasMany": {}
                    },
                    "95": {
                        "hasMany": {}
                    },
                    "96": {
                        "hasMany": {}
                    },
                    "97": {
                        "hasMany": {}
                    },
                    "98": {
                        "hasMany": {}
                    },
                    "99": {
                        "hasMany": {}
                    },
                    "100": {
                        "hasMany": {}
                    },
                    "101": {
                        "hasMany": {}
                    },
                    "102": {
                        "hasMany": {}
                    },
                    "103": {
                        "hasMany": {}
                    },
                    "104": {
                        "hasMany": {}
                    },
                    "105": {
                        "hasMany": {}
                    },
                    "106": {
                        "hasMany": {}
                    },
                    "107": {
                        "hasMany": {}
                    },
                    "108": {
                        "hasMany": {}
                    },
                    "110": {
                        "hasMany": {}
                    },
                    "111": {
                        "hasMany": {}
                    },
                    "112": {
                        "hasMany": {}
                    },
                    "113": {
                        "hasMany": {}
                    },
                    "114": {
                        "hasMany": {}
                    },
                    "115": {
                        "hasMany": {}
                    },
                    "116": {
                        "hasMany": {}
                    },
                    "117": {
                        "hasMany": {}
                    },
                    "118": {
                        "hasMany": {}
                    },
                    "119": {
                        "hasMany": {}
                    },
                    "120": {
                        "hasMany": {}
                    },
                    "121": {
                        "hasMany": {}
                    },
                    "122": {
                        "hasMany": {}
                    },
                    "123": {
                        "hasMany": {}
                    },
                    "124": {
                        "hasMany": {}
                    },
                    "125": {
                        "hasMany": {}
                    },
                    "126": {
                        "hasMany": {}
                    },
                    "127": {
                        "hasMany": {}
                    },
                    "128": {
                        "hasMany": {}
                    },
                    "129": {
                        "hasMany": {}
                    },
                    "130": {
                        "hasMany": {}
                    },
                    "131": {
                        "hasMany": {}
                    },
                    "132": {
                        "hasMany": {}
                    },
                    "133": {
                        "hasMany": {}
                    },
                    "134": {
                        "hasMany": {}
                    },
                    "135": {
                        "hasMany": {}
                    },
                    "136": {
                        "hasMany": {}
                    },
                    "137": {
                        "hasMany": {}
                    },
                    "144": {
                        "hasMany": {}
                    },
                    "145": {
                        "hasMany": {}
                    },
                    "146": {
                        "hasMany": {}
                    },
                    "147": {
                        "hasMany": {}
                    },
                    "148": {
                        "hasMany": {}
                    },
                    "149": {
                        "hasMany": {}
                    },
                    "150": {
                        "hasMany": {}
                    },
                    "151": {
                        "hasMany": {}
                    },
                    "153": {
                        "hasMany": {}
                    },
                    "154": {
                        "hasMany": {}
                    },
                    "155": {
                        "hasMany": {}
                    },
                    "156": {
                        "hasMany": {}
                    },
                    "157": {
                        "hasMany": {}
                    },
                    "158": {
                        "hasMany": {}
                    },
                    "159": {
                        "hasMany": {}
                    },
                    "160": {
                        "hasMany": {}
                    },
                    "161": {
                        "hasMany": {}
                    },
                    "162": {
                        "hasMany": {}
                    },
                    "163": {
                        "hasMany": {}
                    },
                    "164": {
                        "hasMany": {}
                    },
                    "204": {
                        "hasMany": {}
                    },
                    "205": {
                        "hasMany": {}
                    },
                    "206": {
                        "hasMany": {}
                    },
                    "219": {
                        "hasMany": {}
                    },
                    "220": {
                        "hasMany": {}
                    },
                    "221": {
                        "hasMany": {}
                    },
                    "222": {
                        "hasMany": {}
                    },
                    "223": {
                        "hasMany": {}
                    },
                    "234": {
                        "hasMany": {}
                    },
                    "235": {
                        "hasMany": {}
                    },
                    "236": {
                        "hasMany": {}
                    },
                    "239": {
                        "hasMany": {}
                    },
                    "240": {
                        "hasMany": {}
                    },
                    "241": {
                        "hasMany": {}
                    },
                    "242": {
                        "hasMany": {}
                    },
                    "243": {
                        "hasMany": {}
                    },
                    "245": {
                        "hasMany": {}
                    },
                    "246": {
                        "hasMany": {}
                    },
                    "247": {
                        "hasMany": {}
                    },
                    "248": {
                        "hasMany": {}
                    },
                    "249": {
                        "hasMany": {}
                    },
                    "250": {
                        "hasMany": {}
                    },
                    "251": {
                        "hasMany": {}
                    },
                    "252": {
                        "hasMany": {}
                    },
                    "253": {
                        "hasMany": {}
                    },
                    "254": {
                        "hasMany": {}
                    },
                    "255": {
                        "hasMany": {}
                    },
                    "256": {
                        "hasMany": {}
                    },
                    "257": {
                        "hasMany": {}
                    },
                    "258": {
                        "hasMany": {}
                    },
                    "260": {
                        "hasMany": {}
                    },
                    "261": {
                        "hasMany": {}
                    },
                    "262": {
                        "hasMany": {}
                    },
                    "263": {
                        "hasMany": {}
                    },
                    "264": {
                        "hasMany": {}
                    },
                    "265": {
                        "hasMany": {}
                    },
                    "266": {
                        "hasMany": {}
                    },
                    "267": {
                        "hasMany": {}
                    },
                    "268": {
                        "hasMany": {}
                    },
                    "269": {
                        "hasMany": {}
                    },
                    "270": {
                        "hasMany": {}
                    },
                    "271": {
                        "hasMany": {}
                    },
                    "272": {
                        "hasMany": {}
                    },
                    "273": {
                        "hasMany": {}
                    },
                    "274": {
                        "hasMany": {}
                    },
                    "275": {
                        "hasMany": {}
                    },
                    "276": {
                        "hasMany": {}
                    },
                    "277": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_24": {
                "crudId": 4,
                "columnId": 112,
                "name": "image",
                "label": "crud.chargerLocations.inputs.image.label",
                "placeholder": "crud.chargerLocations.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "file-upload",
                        "helperText": "crud.chargerLocations.filament.image.helper_text",
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "preserveFilenames": false,
                        "useAvatarMode": false,
                        "useImageEditor": true,
                        "imageEditorAspectRatios": [
                            "null",
                            "16:9",
                            "4:3",
                            "1:1"
                        ],
                        "useCircleCropper": false,
                        "disablePreview": false,
                        "isDownloadable": false,
                        "canReorderFiles": false,
                        "disableDeleteButton": false
                    },
                    "columnData": {
                        "columnType": "image-column",
                        "label": "crud.chargerLocations.filament.image.label"
                    }
                },
                "panelId": 4,
                "id": 24,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 0
            },
            "item_25": {
                "crudId": 4,
                "columnId": 113,
                "name": "name",
                "label": "crud.chargerLocations.inputs.name.label",
                "placeholder": "crud.chargerLocations.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.chargerLocations.filament.name.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.name.label",
                        "description": "crud.chargerLocations.filament.name.description"
                    }
                },
                "panelId": 4,
                "id": 25,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 1
            },
            "item_26": {
                "crudId": 4,
                "columnId": 115,
                "name": "provider_id",
                "label": "crud.chargerLocations.inputs.provider_id.label",
                "placeholder": "crud.chargerLocations.inputs.provider_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 18,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.provider_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.provider_id.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.provider_id.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.provider_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.provider_id.label"
                    }
                },
                "panelId": 4,
                "id": 26,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 2
            },
            "item_29": {
                "crudId": 4,
                "columnId": 118,
                "name": "description",
                "label": "crud.chargerLocations.inputs.description.label",
                "placeholder": "crud.chargerLocations.inputs.description.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": false,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "rich-editor",
                        "helperText": "crud.chargerLocations.filament.description.helper_text",
                        "toolbarButtons": null,
                        "disableToolbarButtons": null,
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "rows": null,
                        "cols": null,
                        "autosize": false,
                        "exactLength": null
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.description.label"
                    }
                },
                "panelId": 4,
                "id": 29,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 14
            },
            "item_30": {
                "crudId": 4,
                "columnId": 119,
                "name": "latitude",
                "label": "crud.chargerLocations.inputs.latitude.label",
                "placeholder": "crud.chargerLocations.inputs.latitude.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.chargerLocations.filament.latitude.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.latitude.label",
                        "description": "crud.chargerLocations.filament.latitude.description"
                    }
                },
                "panelId": 4,
                "id": 30,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 3
            },
            "item_31": {
                "crudId": 4,
                "columnId": 120,
                "name": "longitude",
                "label": "crud.chargerLocations.inputs.longitude.label",
                "placeholder": "crud.chargerLocations.inputs.longitude.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.chargerLocations.filament.longitude.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.longitude.label",
                        "description": "crud.chargerLocations.filament.longitude.description"
                    }
                },
                "panelId": 4,
                "id": 31,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 4
            },
            "item_33": {
                "crudId": 4,
                "columnId": 122,
                "name": "parking",
                "label": "crud.chargerLocations.inputs.parking.label",
                "placeholder": "crud.chargerLocations.inputs.parking.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "checkbox",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "boolean"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "boolean"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "checkbox",
                        "helperText": "crud.chargerLocations.filament.parking.helper_text",
                        "inline": true
                    },
                    "columnData": {
                        "columnType": "checkbox-column",
                        "label": "crud.chargerLocations.filament.parking.label"
                    }
                },
                "panelId": 4,
                "id": 33,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 5
            },
            "item_34": {
                "crudId": 4,
                "columnId": 124,
                "name": "province_id",
                "label": "crud.chargerLocations.inputs.province_id.label",
                "placeholder": "crud.chargerLocations.inputs.province_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 20,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.province_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.province_id.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.province_id.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.province_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.province_id.label"
                    }
                },
                "panelId": 4,
                "id": 34,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 7
            },
            "item_35": {
                "crudId": 4,
                "columnId": 125,
                "name": "city_id",
                "label": "crud.chargerLocations.inputs.city_id.label",
                "placeholder": "crud.chargerLocations.inputs.city_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 22,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.city_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.city_id.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.city_id.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.city_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.city_id.label"
                    }
                },
                "panelId": 4,
                "id": 35,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 8
            },
            "item_36": {
                "crudId": 4,
                "columnId": 126,
                "name": "district_id",
                "label": "crud.chargerLocations.inputs.district_id.label",
                "placeholder": "crud.chargerLocations.inputs.district_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": false,
                "type": "belongsTo",
                "relationshipId": 24,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.district_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.district_id.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.district_id.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.district_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.district_id.label"
                    }
                },
                "panelId": 4,
                "id": 36,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 9
            },
            "item_37": {
                "crudId": 4,
                "columnId": 127,
                "name": "subdistrict_id",
                "label": "crud.chargerLocations.inputs.subdistrict_id.label",
                "placeholder": "crud.chargerLocations.inputs.subdistrict_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": false,
                "type": "belongsTo",
                "relationshipId": 26,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.subdistrict_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.subdistrict_id.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.subdistrict_id.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.subdistrict_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.subdistrict_id.label"
                    }
                },
                "panelId": 4,
                "id": 37,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 10
            },
            "item_38": {
                "crudId": 4,
                "columnId": 128,
                "name": "postal_code_id",
                "label": "crud.chargerLocations.inputs.postal_code_id.label",
                "placeholder": "crud.chargerLocations.inputs.postal_code_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": false,
                "type": "belongsTo",
                "relationshipId": 28,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.postal_code_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.postal_code_id.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.postal_code_id.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.postal_code_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.postal_code_id.label"
                    }
                },
                "panelId": 4,
                "id": 38,
                "createdAt": "2024-07-29 13:06:24",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 11
            },
            "item_41": {
                "crudId": 6,
                "columnId": 148,
                "name": "name",
                "label": "crud.brandVehicles.inputs.name.label",
                "placeholder": "crud.brandVehicles.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.brandVehicles.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.brandVehicles.filament.name.label",
                        "description": "crud.brandVehicles.filament.name.description"
                    }
                },
                "panelId": 6,
                "id": 41,
                "createdAt": "2024-07-29 13:06:32",
                "updatedAt": "2024-07-30 15:49:37",
                "order": 1
            },
            "item_42": {
                "crudId": 7,
                "columnId": 152,
                "name": "name",
                "label": "crud.modelVehicles.inputs.name.label",
                "placeholder": "crud.modelVehicles.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.modelVehicles.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.modelVehicles.filament.name.label",
                        "description": "crud.modelVehicles.filament.name.description"
                    }
                },
                "panelId": 7,
                "id": 42,
                "createdAt": "2024-07-29 13:06:36",
                "updatedAt": "2024-07-29 13:06:36"
            },
            "item_43": {
                "crudId": 7,
                "columnId": 157,
                "name": "brand_vehicle_id",
                "label": "crud.modelVehicles.inputs.brand_vehicle_id.label",
                "placeholder": "crud.modelVehicles.inputs.brand_vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 42,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.modelVehicles.filament.brand_vehicle_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.modelVehicles.filament.brand_vehicle_id.loading_message",
                        "noResultMessage": "crud.modelVehicles.filament.brand_vehicle_id.no_result_message",
                        "searchMessage": "crud.modelVehicles.filament.brand_vehicle_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.modelVehicles.filament.brand_vehicle_id.label"
                    }
                },
                "panelId": 7,
                "id": 43,
                "createdAt": "2024-07-29 13:06:36",
                "updatedAt": "2024-07-29 13:06:36"
            },
            "item_49": {
                "crudId": 9,
                "columnId": 163,
                "name": "brand_vehicle_id",
                "label": "crud.vehicles.inputs.brand_vehicle_id.label",
                "placeholder": "crud.vehicles.inputs.brand_vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 48,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.vehicles.filament.brand_vehicle_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.vehicles.filament.brand_vehicle_id.loading_message",
                        "noResultMessage": "crud.vehicles.filament.brand_vehicle_id.no_result_message",
                        "searchMessage": "crud.vehicles.filament.brand_vehicle_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.vehicles.filament.brand_vehicle_id.label"
                    }
                },
                "panelId": 9,
                "id": 49,
                "createdAt": "2024-07-29 13:06:45",
                "updatedAt": "2024-07-30 11:53:46",
                "order": 1
            },
            "item_50": {
                "crudId": 9,
                "columnId": 164,
                "name": "model_vehicle_id",
                "label": "crud.vehicles.inputs.model_vehicle_id.label",
                "placeholder": "crud.vehicles.inputs.model_vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 50,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.vehicles.filament.model_vehicle_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.vehicles.filament.model_vehicle_id.loading_message",
                        "noResultMessage": "crud.vehicles.filament.model_vehicle_id.no_result_message",
                        "searchMessage": "crud.vehicles.filament.model_vehicle_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.vehicles.filament.model_vehicle_id.label"
                    }
                },
                "panelId": 9,
                "id": 50,
                "createdAt": "2024-07-29 13:06:45",
                "updatedAt": "2024-07-30 11:53:46",
                "order": 2
            },
            "item_51": {
                "crudId": 9,
                "columnId": 165,
                "name": "type_vehicle_id",
                "label": "crud.vehicles.inputs.type_vehicle_id.label",
                "placeholder": "crud.vehicles.inputs.type_vehicle_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 52,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.vehicles.filament.type_vehicle_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.vehicles.filament.type_vehicle_id.loading_message",
                        "noResultMessage": "crud.vehicles.filament.type_vehicle_id.no_result_message",
                        "searchMessage": "crud.vehicles.filament.type_vehicle_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.vehicles.filament.type_vehicle_id.label"
                    }
                },
                "panelId": 9,
                "id": 51,
                "createdAt": "2024-07-29 13:06:45",
                "updatedAt": "2024-07-30 11:53:46",
                "order": 3
            },
            "item_52": {
                "crudId": 9,
                "columnId": 166,
                "name": "license_plate",
                "label": "crud.vehicles.inputs.license_plate.label",
                "placeholder": "crud.vehicles.inputs.license_plate.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.vehicles.filament.license_plate.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.vehicles.filament.license_plate.label",
                        "description": "crud.vehicles.filament.license_plate.description"
                    }
                },
                "panelId": 9,
                "id": 52,
                "createdAt": "2024-07-29 13:06:45",
                "updatedAt": "2024-07-30 11:54:31",
                "order": 0
            },
            "item_53": {
                "crudId": 9,
                "columnId": 168,
                "name": "ownership",
                "label": "crud.vehicles.inputs.ownership.label",
                "placeholder": "crud.vehicles.inputs.ownership.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "date",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "date-picker",
                        "helperText": "crud.vehicles.filament.ownership.helper_text",
                        "closeOnDateSelection": false,
                        "timezone": null,
                        "dateFormat": null,
                        "displayFormat": null,
                        "disableSeconds": false,
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.vehicles.filament.ownership.label"
                    }
                },
                "panelId": 9,
                "id": 53,
                "createdAt": "2024-07-29 13:06:45",
                "updatedAt": "2024-07-30 11:53:46",
                "order": 4
            },
            "item_66": {
                "crudId": 11,
                "columnId": 187,
                "name": "name",
                "label": "crud.powerChargers.inputs.name.label",
                "placeholder": "crud.powerChargers.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.powerChargers.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.powerChargers.filament.name.label",
                        "description": "crud.powerChargers.filament.name.description"
                    }
                },
                "panelId": 11,
                "id": 66,
                "createdAt": "2024-07-29 13:06:55",
                "updatedAt": "2024-07-29 13:06:55"
            },
            "item_67": {
                "crudId": 11,
                "columnId": 189,
                "name": "type_charger_id",
                "label": "crud.powerChargers.inputs.type_charger_id.label",
                "placeholder": "crud.powerChargers.inputs.type_charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 62,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.powerChargers.filament.type_charger_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.powerChargers.filament.type_charger_id.loading_message",
                        "noResultMessage": "crud.powerChargers.filament.type_charger_id.no_result_message",
                        "searchMessage": "crud.powerChargers.filament.type_charger_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.powerChargers.filament.type_charger_id.label"
                    }
                },
                "panelId": 11,
                "id": 67,
                "createdAt": "2024-07-29 13:06:55",
                "updatedAt": "2024-07-29 13:06:55"
            },
            "item_68": {
                "crudId": 12,
                "columnId": 185,
                "name": "name",
                "label": "crud.currentChargers.inputs.name.label",
                "placeholder": "crud.currentChargers.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.currentChargers.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.currentChargers.filament.name.label",
                        "description": "crud.currentChargers.filament.name.description"
                    }
                },
                "panelId": 12,
                "id": 68,
                "createdAt": "2024-07-29 13:06:58",
                "updatedAt": "2024-07-29 13:06:58"
            },
            "item_70": {
                "crudId": 13,
                "columnId": 188,
                "name": "current_charger_id",
                "label": "crud.typeChargers.inputs.current_charger_id.label",
                "placeholder": "crud.typeChargers.inputs.current_charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 60,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.typeChargers.filament.current_charger_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.typeChargers.filament.current_charger_id.loading_message",
                        "noResultMessage": "crud.typeChargers.filament.current_charger_id.no_result_message",
                        "searchMessage": "crud.typeChargers.filament.current_charger_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeChargers.filament.current_charger_id.label"
                    }
                },
                "panelId": 13,
                "id": 70,
                "createdAt": "2024-07-29 13:07:03",
                "updatedAt": "2024-07-30 15:55:59",
                "order": 1
            },
            "item_71": {
                "crudId": 14,
                "columnId": 204,
                "name": "vehicle_id",
                "label": "crud.charges.inputs.vehicle_id.label",
                "placeholder": "crud.charges.inputs.vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 74,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.charges.filament.vehicle_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.charges.filament.vehicle_id.loading_message",
                        "noResultMessage": "crud.charges.filament.vehicle_id.no_result_message",
                        "searchMessage": "crud.charges.filament.vehicle_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.vehicle_id.label"
                    }
                },
                "panelId": 14,
                "id": 71,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 1
            },
            "item_72": {
                "crudId": 14,
                "columnId": 205,
                "name": "date",
                "label": "crud.charges.inputs.date.label",
                "placeholder": "crud.charges.inputs.date.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "date",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "date-picker",
                        "helperText": "crud.charges.filament.date.helper_text",
                        "closeOnDateSelection": false,
                        "timezone": null,
                        "dateFormat": null,
                        "displayFormat": null,
                        "disableSeconds": false,
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.date.label"
                    }
                },
                "panelId": 14,
                "id": 72,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 2
            },
            "item_73": {
                "crudId": 14,
                "columnId": 207,
                "name": "charger_location_id",
                "label": "crud.charges.inputs.charger_location_id.label",
                "placeholder": "crud.charges.inputs.charger_location_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 76,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.charges.filament.charger_location_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.charges.filament.charger_location_id.loading_message",
                        "noResultMessage": "crud.charges.filament.charger_location_id.no_result_message",
                        "searchMessage": "crud.charges.filament.charger_location_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.charger_location_id.label"
                    }
                },
                "panelId": 14,
                "id": 73,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 3
            },
            "item_75": {
                "crudId": 14,
                "columnId": 209,
                "name": "km_now",
                "label": "crud.charges.inputs.km_now.label",
                "placeholder": "crud.charges.inputs.km_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": "",
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.km_now.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "km"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.km_now.label",
                        "description": "crud.charges.filament.km_now.description",
                        "showAsNumeric": true,
                        "thousandsSeparator": "."
                    }
                },
                "panelId": 14,
                "id": 75,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 17:20:38",
                "order": 5
            },
            "item_76": {
                "crudId": 14,
                "columnId": 210,
                "name": "km_before",
                "label": "crud.charges.inputs.km_before.label",
                "placeholder": "crud.charges.inputs.km_before.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.km_before.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "km"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.km_before.label",
                        "description": "crud.charges.filament.km_before.description"
                    }
                },
                "panelId": 14,
                "id": 76,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 6
            },
            "item_77": {
                "crudId": 14,
                "columnId": 211,
                "name": "start_charging_now",
                "label": "crud.charges.inputs.start_charging_now.label",
                "placeholder": "crud.charges.inputs.start_charging_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.start_charging_now.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "%"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.start_charging_now.label",
                        "description": "crud.charges.filament.start_charging_now.description"
                    }
                },
                "panelId": 14,
                "id": 77,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 7
            },
            "item_78": {
                "crudId": 14,
                "columnId": 212,
                "name": "finish_charging_now",
                "label": "crud.charges.inputs.finish_charging_now.label",
                "placeholder": "crud.charges.inputs.finish_charging_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.finish_charging_now.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "%"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.finish_charging_now.label",
                        "description": "crud.charges.filament.finish_charging_now.description"
                    }
                },
                "panelId": 14,
                "id": 78,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 8
            },
            "item_79": {
                "crudId": 14,
                "columnId": 213,
                "name": "finish_charging_before",
                "label": "crud.charges.inputs.finish_charging_before.label",
                "placeholder": "crud.charges.inputs.finish_charging_before.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.finish_charging_before.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "%"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.finish_charging_before.label",
                        "description": "crud.charges.filament.finish_charging_before.description"
                    }
                },
                "panelId": 14,
                "id": 79,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 9
            },
            "item_80": {
                "crudId": 14,
                "columnId": 214,
                "name": "parking",
                "label": "crud.charges.inputs.parking.label",
                "placeholder": "crud.charges.inputs.parking.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.parking.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "prefix": "Rp"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.parking.label",
                        "description": "crud.charges.filament.parking.description",
                        "showAsNumeric": true,
                        "thousandsSeparator": ".",
                        "showAsCurrency": true,
                        "currencySymbol": "Rp"
                    }
                },
                "panelId": 14,
                "id": 80,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 17:21:05",
                "order": 10
            },
            "item_81": {
                "crudId": 14,
                "columnId": 215,
                "name": "kWh",
                "label": "crud.charges.inputs.kWh.label",
                "placeholder": "crud.charges.inputs.kWh.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.kWh.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "kWh"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.kWh.label",
                        "description": "crud.charges.filament.kWh.description",
                        "showAsNumeric": true,
                        "decimalPlaces": 2,
                        "decimalSeparator": ",",
                        "thousandsSeparator": "."
                    }
                },
                "panelId": 14,
                "id": 81,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 17:21:22",
                "order": 11
            },
            "item_82": {
                "crudId": 14,
                "columnId": 216,
                "name": "street_lighting_tax",
                "label": "crud.charges.inputs.street_lighting_tax.label",
                "placeholder": "crud.charges.inputs.street_lighting_tax.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.street_lighting_tax.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "prefix": "Rp"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.street_lighting_tax.label",
                        "description": "crud.charges.filament.street_lighting_tax.description",
                        "showAsNumeric": true,
                        "thousandsSeparator": ".",
                        "showAsCurrency": true,
                        "currencySymbol": "Rp"
                    }
                },
                "panelId": 14,
                "id": 82,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 17:22:12",
                "order": 12
            },
            "item_83": {
                "crudId": 14,
                "columnId": 218,
                "name": "value_added_tax",
                "label": "crud.charges.inputs.value_added_tax.label",
                "placeholder": "crud.charges.inputs.value_added_tax.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.value_added_tax.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "prefix": "Rp"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.value_added_tax.label",
                        "description": "crud.charges.filament.value_added_tax.description",
                        "showAsNumeric": true,
                        "thousandsSeparator": ".",
                        "showAsCurrency": true,
                        "currencySymbol": "Rp"
                    }
                },
                "panelId": 14,
                "id": 83,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 17:22:04",
                "order": 13
            },
            "item_84": {
                "crudId": 14,
                "columnId": 219,
                "name": "admin_cost",
                "label": "crud.charges.inputs.admin_cost.label",
                "placeholder": "crud.charges.inputs.admin_cost.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.admin_cost.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "prefix": "Rp"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.admin_cost.label",
                        "description": "crud.charges.filament.admin_cost.description",
                        "showAsNumeric": true,
                        "thousandsSeparator": ".",
                        "showAsCurrency": true,
                        "currencySymbol": "Rp"
                    }
                },
                "panelId": 14,
                "id": 84,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 17:21:59",
                "order": 14
            },
            "item_85": {
                "crudId": 14,
                "columnId": 220,
                "name": "total_cost",
                "label": "crud.charges.inputs.total_cost.label",
                "placeholder": "crud.charges.inputs.total_cost.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.charges.filament.total_cost.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "prefix": "Rp"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.total_cost.label",
                        "description": "crud.charges.filament.total_cost.description",
                        "showAsNumeric": true,
                        "thousandsSeparator": ".",
                        "showAsCurrency": true,
                        "currencySymbol": "Rp"
                    }
                },
                "panelId": 14,
                "id": 85,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 17:22:22",
                "order": 15
            },
            "item_86": {
                "crudId": 14,
                "columnId": 227,
                "name": "image",
                "label": "crud.charges.inputs.image.label",
                "placeholder": "crud.charges.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "file-upload",
                        "helperText": "crud.charges.filament.image.helper_text",
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "preserveFilenames": false,
                        "useAvatarMode": false,
                        "useImageEditor": true,
                        "imageEditorAspectRatios": [
                            "null",
                            "16:9",
                            "4:3",
                            "1:1"
                        ],
                        "useCircleCropper": false,
                        "disablePreview": false,
                        "isDownloadable": false,
                        "canReorderFiles": false,
                        "disableDeleteButton": false
                    },
                    "columnData": {
                        "columnType": "image-column",
                        "label": "crud.charges.filament.image.label"
                    }
                },
                "panelId": 14,
                "id": 86,
                "createdAt": "2024-07-29 13:07:07",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 0
            },
            "item_93": {
                "crudId": 16,
                "columnId": 204,
                "name": "vehicle_id",
                "label": "crud.charges.inputs.vehicle_id.label",
                "placeholder": "crud.charges.inputs.vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 74,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 93,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_94": {
                "crudId": 16,
                "columnId": 205,
                "name": "date",
                "label": "crud.charges.inputs.date.label",
                "placeholder": "crud.charges.inputs.date.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "date",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "panelId": 16,
                "id": 94,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_95": {
                "crudId": 16,
                "columnId": 207,
                "name": "charger_location_id",
                "label": "crud.charges.inputs.charger_location_id.label",
                "placeholder": "crud.charges.inputs.charger_location_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 76,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 95,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_96": {
                "crudId": 16,
                "columnId": 208,
                "name": "charger_id",
                "label": "crud.charges.inputs.charger_id.label",
                "placeholder": "crud.charges.inputs.charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 96,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_97": {
                "crudId": 16,
                "columnId": 209,
                "name": "km_now",
                "label": "crud.charges.inputs.km_now.label",
                "placeholder": "crud.charges.inputs.km_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 97,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_98": {
                "crudId": 16,
                "columnId": 210,
                "name": "km_before",
                "label": "crud.charges.inputs.km_before.label",
                "placeholder": "crud.charges.inputs.km_before.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 98,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_99": {
                "crudId": 16,
                "columnId": 211,
                "name": "start_charging_now",
                "label": "crud.charges.inputs.start_charging_now.label",
                "placeholder": "crud.charges.inputs.start_charging_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 99,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_100": {
                "crudId": 16,
                "columnId": 212,
                "name": "finish_charging_now",
                "label": "crud.charges.inputs.finish_charging_now.label",
                "placeholder": "crud.charges.inputs.finish_charging_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 100,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_101": {
                "crudId": 16,
                "columnId": 213,
                "name": "finish_charging_before",
                "label": "crud.charges.inputs.finish_charging_before.label",
                "placeholder": "crud.charges.inputs.finish_charging_before.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 101,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_102": {
                "crudId": 16,
                "columnId": 214,
                "name": "parking",
                "label": "crud.charges.inputs.parking.label",
                "placeholder": "crud.charges.inputs.parking.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 102,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_103": {
                "crudId": 16,
                "columnId": 215,
                "name": "kWh",
                "label": "crud.charges.inputs.kWh.label",
                "placeholder": "crud.charges.inputs.kWh.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 103,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_104": {
                "crudId": 16,
                "columnId": 216,
                "name": "street_lighting_tax",
                "label": "crud.charges.inputs.street_lighting_tax.label",
                "placeholder": "crud.charges.inputs.street_lighting_tax.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 104,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_105": {
                "crudId": 16,
                "columnId": 218,
                "name": "value_added_tax",
                "label": "crud.charges.inputs.value_added_tax.label",
                "placeholder": "crud.charges.inputs.value_added_tax.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 105,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_106": {
                "crudId": 16,
                "columnId": 219,
                "name": "admin_cost",
                "label": "crud.charges.inputs.admin_cost.label",
                "placeholder": "crud.charges.inputs.admin_cost.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 106,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_107": {
                "crudId": 16,
                "columnId": 220,
                "name": "total_cost",
                "label": "crud.charges.inputs.total_cost.label",
                "placeholder": "crud.charges.inputs.total_cost.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 16,
                "id": 107,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_108": {
                "crudId": 16,
                "columnId": 227,
                "name": "image",
                "label": "crud.charges.inputs.image.label",
                "placeholder": "crud.charges.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "panelId": 16,
                "id": 108,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_110": {
                "crudId": 17,
                "columnId": 163,
                "name": "brand_vehicle_id",
                "label": "crud.vehicles.inputs.brand_vehicle_id.label",
                "placeholder": "crud.vehicles.inputs.brand_vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 48,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 17,
                "id": 110,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_111": {
                "crudId": 17,
                "columnId": 164,
                "name": "model_vehicle_id",
                "label": "crud.vehicles.inputs.model_vehicle_id.label",
                "placeholder": "crud.vehicles.inputs.model_vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 50,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 17,
                "id": 111,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_112": {
                "crudId": 17,
                "columnId": 165,
                "name": "type_vehicle_id",
                "label": "crud.vehicles.inputs.type_vehicle_id.label",
                "placeholder": "crud.vehicles.inputs.type_vehicle_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 52,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "panelId": 17,
                "id": 112,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_113": {
                "crudId": 17,
                "columnId": 166,
                "name": "license_plate",
                "label": "crud.vehicles.inputs.license_plate.label",
                "placeholder": "crud.vehicles.inputs.license_plate.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 17,
                "id": 113,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_114": {
                "crudId": 17,
                "columnId": 168,
                "name": "ownership",
                "label": "crud.vehicles.inputs.ownership.label",
                "placeholder": "crud.vehicles.inputs.ownership.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "date",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "panelId": 17,
                "id": 114,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_115": {
                "crudId": 17,
                "columnId": 169,
                "name": "status",
                "label": "crud.vehicles.inputs.status.label",
                "placeholder": "crud.vehicles.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 17,
                "id": 115,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_116": {
                "crudId": 18,
                "columnId": 204,
                "name": "vehicle_id",
                "label": "crud.charges.inputs.vehicle_id.label",
                "placeholder": "crud.charges.inputs.vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 74,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 116,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_117": {
                "crudId": 18,
                "columnId": 205,
                "name": "date",
                "label": "crud.charges.inputs.date.label",
                "placeholder": "crud.charges.inputs.date.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "date",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "panelId": 18,
                "id": 117,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_118": {
                "crudId": 18,
                "columnId": 207,
                "name": "charger_location_id",
                "label": "crud.charges.inputs.charger_location_id.label",
                "placeholder": "crud.charges.inputs.charger_location_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 76,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 118,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_119": {
                "crudId": 18,
                "columnId": 208,
                "name": "charger_id",
                "label": "crud.charges.inputs.charger_id.label",
                "placeholder": "crud.charges.inputs.charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 119,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_120": {
                "crudId": 18,
                "columnId": 209,
                "name": "km_now",
                "label": "crud.charges.inputs.km_now.label",
                "placeholder": "crud.charges.inputs.km_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 120,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_121": {
                "crudId": 18,
                "columnId": 210,
                "name": "km_before",
                "label": "crud.charges.inputs.km_before.label",
                "placeholder": "crud.charges.inputs.km_before.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 121,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_122": {
                "crudId": 18,
                "columnId": 211,
                "name": "start_charging_now",
                "label": "crud.charges.inputs.start_charging_now.label",
                "placeholder": "crud.charges.inputs.start_charging_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 122,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_123": {
                "crudId": 18,
                "columnId": 212,
                "name": "finish_charging_now",
                "label": "crud.charges.inputs.finish_charging_now.label",
                "placeholder": "crud.charges.inputs.finish_charging_now.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 123,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_124": {
                "crudId": 18,
                "columnId": 213,
                "name": "finish_charging_before",
                "label": "crud.charges.inputs.finish_charging_before.label",
                "placeholder": "crud.charges.inputs.finish_charging_before.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 124,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_125": {
                "crudId": 18,
                "columnId": 214,
                "name": "parking",
                "label": "crud.charges.inputs.parking.label",
                "placeholder": "crud.charges.inputs.parking.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 125,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_126": {
                "crudId": 18,
                "columnId": 215,
                "name": "kWh",
                "label": "crud.charges.inputs.kWh.label",
                "placeholder": "crud.charges.inputs.kWh.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 126,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_127": {
                "crudId": 18,
                "columnId": 216,
                "name": "street_lighting_tax",
                "label": "crud.charges.inputs.street_lighting_tax.label",
                "placeholder": "crud.charges.inputs.street_lighting_tax.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 127,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_128": {
                "crudId": 18,
                "columnId": 218,
                "name": "value_added_tax",
                "label": "crud.charges.inputs.value_added_tax.label",
                "placeholder": "crud.charges.inputs.value_added_tax.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 128,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_129": {
                "crudId": 18,
                "columnId": 219,
                "name": "admin_cost",
                "label": "crud.charges.inputs.admin_cost.label",
                "placeholder": "crud.charges.inputs.admin_cost.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 129,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_130": {
                "crudId": 18,
                "columnId": 220,
                "name": "total_cost",
                "label": "crud.charges.inputs.total_cost.label",
                "placeholder": "crud.charges.inputs.total_cost.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 18,
                "id": 130,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_131": {
                "crudId": 18,
                "columnId": 227,
                "name": "image",
                "label": "crud.charges.inputs.image.label",
                "placeholder": "crud.charges.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "panelId": 18,
                "id": 131,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_132": {
                "crudId": 19,
                "columnId": 226,
                "name": "image",
                "label": "crud.stateOfHealths.inputs.image.label",
                "placeholder": "crud.stateOfHealths.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "panelId": 19,
                "id": 132,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_133": {
                "crudId": 19,
                "columnId": 228,
                "name": "vehicle_id",
                "label": "crud.stateOfHealths.inputs.vehicle_id.label",
                "placeholder": "crud.stateOfHealths.inputs.vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 82,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 19,
                "id": 133,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_134": {
                "crudId": 19,
                "columnId": 229,
                "name": "km",
                "label": "crud.stateOfHealths.inputs.km.label",
                "placeholder": "crud.stateOfHealths.inputs.km.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 19,
                "id": 134,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_135": {
                "crudId": 19,
                "columnId": 230,
                "name": "percentage",
                "label": "crud.stateOfHealths.inputs.percentage.label",
                "placeholder": "crud.stateOfHealths.inputs.percentage.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 19,
                "id": 135,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_136": {
                "crudId": 19,
                "columnId": 231,
                "name": "remaining_battery",
                "label": "crud.stateOfHealths.inputs.remaining_battery.label",
                "placeholder": "crud.stateOfHealths.inputs.remaining_battery.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "panelId": 19,
                "id": 136,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_137": {
                "crudId": 19,
                "columnId": 232,
                "name": "user_id",
                "label": "crud.stateOfHealths.inputs.user_id.label",
                "placeholder": "crud.stateOfHealths.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 84,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 19,
                "id": 137,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_144": {
                "crudId": 21,
                "columnId": 112,
                "name": "image",
                "label": "crud.chargerLocations.inputs.image.label",
                "placeholder": "crud.chargerLocations.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "panelId": 21,
                "id": 144,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_145": {
                "crudId": 21,
                "columnId": 113,
                "name": "name",
                "label": "crud.chargerLocations.inputs.name.label",
                "placeholder": "crud.chargerLocations.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 21,
                "id": 145,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_146": {
                "crudId": 21,
                "columnId": 115,
                "name": "provider_id",
                "label": "crud.chargerLocations.inputs.provider_id.label",
                "placeholder": "crud.chargerLocations.inputs.provider_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 18,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 21,
                "id": 146,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_147": {
                "crudId": 21,
                "columnId": 116,
                "name": "location_on",
                "label": "crud.chargerLocations.inputs.location_on.label",
                "placeholder": "crud.chargerLocations.inputs.location_on.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 21,
                "id": 147,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_148": {
                "crudId": 21,
                "columnId": 117,
                "name": "status",
                "label": "crud.chargerLocations.inputs.status.label",
                "placeholder": "crud.chargerLocations.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 21,
                "id": 148,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_149": {
                "crudId": 21,
                "columnId": 118,
                "name": "description",
                "label": "crud.chargerLocations.inputs.description.label",
                "placeholder": "crud.chargerLocations.inputs.description.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 21,
                "id": 149,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_150": {
                "crudId": 21,
                "columnId": 119,
                "name": "latitude",
                "label": "crud.chargerLocations.inputs.latitude.label",
                "placeholder": "crud.chargerLocations.inputs.latitude.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 21,
                "id": 150,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_151": {
                "crudId": 21,
                "columnId": 120,
                "name": "longitude",
                "label": "crud.chargerLocations.inputs.longitude.label",
                "placeholder": "crud.chargerLocations.inputs.longitude.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 21,
                "id": 151,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_153": {
                "crudId": 21,
                "columnId": 122,
                "name": "parking",
                "label": "crud.chargerLocations.inputs.parking.label",
                "placeholder": "crud.chargerLocations.inputs.parking.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "checkbox",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "boolean"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "boolean"
                    }
                ],
                "panelId": 21,
                "id": 153,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_154": {
                "crudId": 21,
                "columnId": 124,
                "name": "province_id",
                "label": "crud.chargerLocations.inputs.province_id.label",
                "placeholder": "crud.chargerLocations.inputs.province_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 20,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 21,
                "id": 154,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_155": {
                "crudId": 21,
                "columnId": 125,
                "name": "city_id",
                "label": "crud.chargerLocations.inputs.city_id.label",
                "placeholder": "crud.chargerLocations.inputs.city_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 22,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 21,
                "id": 155,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_156": {
                "crudId": 21,
                "columnId": 126,
                "name": "district_id",
                "label": "crud.chargerLocations.inputs.district_id.label",
                "placeholder": "crud.chargerLocations.inputs.district_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 24,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "panelId": 21,
                "id": 156,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_157": {
                "crudId": 21,
                "columnId": 127,
                "name": "subdistrict_id",
                "label": "crud.chargerLocations.inputs.subdistrict_id.label",
                "placeholder": "crud.chargerLocations.inputs.subdistrict_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 26,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "panelId": 21,
                "id": 157,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_158": {
                "crudId": 21,
                "columnId": 128,
                "name": "postal_code_id",
                "label": "crud.chargerLocations.inputs.postal_code_id.label",
                "placeholder": "crud.chargerLocations.inputs.postal_code_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 28,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "panelId": 21,
                "id": 158,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_159": {
                "crudId": 21,
                "columnId": 129,
                "name": "user_id",
                "label": "crud.chargerLocations.inputs.user_id.label",
                "placeholder": "crud.chargerLocations.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 30,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 21,
                "id": 159,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_160": {
                "crudId": 22,
                "columnId": 193,
                "name": "charger_location_id",
                "label": "crud.chargers.inputs.charger_location_id.label",
                "placeholder": "crud.chargers.inputs.charger_location_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 70,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 22,
                "id": 160,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_161": {
                "crudId": 22,
                "columnId": 190,
                "name": "current_charger_id",
                "label": "crud.chargers.inputs.current_charger_id.label",
                "placeholder": "crud.chargers.inputs.current_charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 64,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 22,
                "id": 161,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_162": {
                "crudId": 22,
                "columnId": 191,
                "name": "type_charger_id",
                "label": "crud.chargers.inputs.type_charger_id.label",
                "placeholder": "crud.chargers.inputs.type_charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 66,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 22,
                "id": 162,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_163": {
                "crudId": 22,
                "columnId": 192,
                "name": "power_charger_id",
                "label": "crud.chargers.inputs.power_charger_id.label",
                "placeholder": "crud.chargers.inputs.power_charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 68,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 22,
                "id": 163,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_164": {
                "crudId": 22,
                "columnId": 194,
                "name": "unit",
                "label": "crud.chargers.inputs.unit.label",
                "placeholder": "crud.chargers.inputs.unit.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 22,
                "id": 164,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_204": {
                "crudId": 9,
                "columnId": 169,
                "name": "status",
                "label": "crud.vehicles.inputs.status.label",
                "placeholder": "crud.vehicles.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "1",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "value": "1",
                        "label": "active"
                    },
                    {
                        "value": "2",
                        "label": "inactive"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.vehicles.filament.status.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.vehicles.filament.status.loading_message",
                        "noResultMessage": "crud.vehicles.filament.status.no_result_message",
                        "searchMessage": "crud.vehicles.filament.status.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.vehicles.filament.status.label"
                    }
                },
                "panelId": 9,
                "id": 204,
                "createdAt": "2024-07-29 18:28:27",
                "updatedAt": "2024-07-30 11:53:46",
                "order": 5
            },
            "item_205": {
                "crudId": 4,
                "columnId": 117,
                "name": "status",
                "label": "crud.chargerLocations.inputs.status.label",
                "placeholder": "crud.chargerLocations.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "value": "1",
                        "label": "not verified"
                    },
                    {
                        "value": "2",
                        "label": "verified"
                    },
                    {
                        "value": "3",
                        "label": "closed"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.status.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.status.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.status.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.status.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.status.label"
                    }
                },
                "panelId": 4,
                "id": 205,
                "createdAt": "2024-07-29 19:59:47",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 12
            },
            "item_206": {
                "crudId": 4,
                "columnId": 116,
                "name": "location_on",
                "label": "crud.chargerLocations.inputs.location_on.label",
                "placeholder": "crud.chargerLocations.inputs.location_on.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "1",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "value": "1",
                        "label": "public"
                    },
                    {
                        "value": "2",
                        "label": "private"
                    },
                    {
                        "value": "3",
                        "label": "dealer"
                    },
                    {
                        "value": "4",
                        "label": "closed"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.location_on.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.location_on.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.location_on.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.location_on.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.location_on.label"
                    }
                },
                "panelId": 4,
                "id": 206,
                "createdAt": "2024-07-29 20:02:02",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 13
            },
            "item_219": {
                "crudId": 27,
                "columnId": 193,
                "name": "charger_location_id",
                "label": "crud.chargers.inputs.charger_location_id.label",
                "placeholder": "crud.chargers.inputs.charger_location_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 70,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 27,
                "id": 219,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_220": {
                "crudId": 27,
                "columnId": 190,
                "name": "current_charger_id",
                "label": "crud.chargers.inputs.current_charger_id.label",
                "placeholder": "crud.chargers.inputs.current_charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 64,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 27,
                "id": 220,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_221": {
                "crudId": 27,
                "columnId": 191,
                "name": "type_charger_id",
                "label": "crud.chargers.inputs.type_charger_id.label",
                "placeholder": "crud.chargers.inputs.type_charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 66,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 27,
                "id": 221,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_222": {
                "crudId": 27,
                "columnId": 192,
                "name": "power_charger_id",
                "label": "crud.chargers.inputs.power_charger_id.label",
                "placeholder": "crud.chargers.inputs.power_charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 68,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 27,
                "id": 222,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_223": {
                "crudId": 27,
                "columnId": 194,
                "name": "unit",
                "label": "crud.chargers.inputs.unit.label",
                "placeholder": "crud.chargers.inputs.unit.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 27,
                "id": 223,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_234": {
                "crudId": 28,
                "columnId": 156,
                "name": "name",
                "label": "crud.typeVehicles.inputs.name.label",
                "placeholder": "crud.typeVehicles.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.typeVehicles.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeVehicles.filament.name.label",
                        "description": "crud.typeVehicles.filament.name.description"
                    }
                },
                "panelId": 28,
                "id": 234,
                "createdAt": "2024-07-30 08:58:15",
                "updatedAt": "2024-07-30 08:58:15"
            },
            "item_235": {
                "crudId": 28,
                "columnId": 158,
                "name": "model_vehicle_id",
                "label": "crud.typeVehicles.inputs.model_vehicle_id.label",
                "placeholder": "crud.typeVehicles.inputs.model_vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 44,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.typeVehicles.filament.model_vehicle_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.typeVehicles.filament.model_vehicle_id.loading_message",
                        "noResultMessage": "crud.typeVehicles.filament.model_vehicle_id.no_result_message",
                        "searchMessage": "crud.typeVehicles.filament.model_vehicle_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeVehicles.filament.model_vehicle_id.label"
                    }
                },
                "panelId": 28,
                "id": 235,
                "createdAt": "2024-07-30 08:58:15",
                "updatedAt": "2024-07-30 08:58:15"
            },
            "item_236": {
                "crudId": 28,
                "columnId": 221,
                "name": "battery_capacity",
                "label": "crud.typeVehicles.inputs.battery_capacity.label",
                "placeholder": "crud.typeVehicles.inputs.battery_capacity.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.typeVehicles.filament.battery_capacity.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "dataList": [],
                        "inputMode": "decimal",
                        "suffix": "kWh"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeVehicles.filament.battery_capacity.label",
                        "description": "crud.typeVehicles.filament.battery_capacity.description"
                    }
                },
                "panelId": 28,
                "id": 236,
                "createdAt": "2024-07-30 08:58:15",
                "updatedAt": "2024-07-30 17:40:52"
            },
            "item_239": {
                "crudId": 29,
                "columnId": 226,
                "name": "image",
                "label": "crud.stateOfHealths.inputs.image.label",
                "placeholder": "crud.stateOfHealths.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "file-upload",
                        "helperText": "crud.stateOfHealths.filament.image.helper_text",
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "preserveFilenames": false,
                        "useAvatarMode": false,
                        "useImageEditor": true,
                        "imageEditorAspectRatios": [
                            "null",
                            "16:9",
                            "4:3",
                            "1:1"
                        ],
                        "useCircleCropper": false,
                        "disablePreview": false,
                        "isDownloadable": false,
                        "canReorderFiles": false,
                        "disableDeleteButton": false
                    },
                    "columnData": {
                        "columnType": "image-column",
                        "label": "crud.stateOfHealths.filament.image.label"
                    }
                },
                "panelId": 29,
                "id": 239,
                "createdAt": "2024-07-30 11:59:03",
                "updatedAt": "2024-07-30 11:59:03"
            },
            "item_240": {
                "crudId": 29,
                "columnId": 228,
                "name": "vehicle_id",
                "label": "crud.stateOfHealths.inputs.vehicle_id.label",
                "placeholder": "crud.stateOfHealths.inputs.vehicle_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 82,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.stateOfHealths.filament.vehicle_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.stateOfHealths.filament.vehicle_id.loading_message",
                        "noResultMessage": "crud.stateOfHealths.filament.vehicle_id.no_result_message",
                        "searchMessage": "crud.stateOfHealths.filament.vehicle_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.stateOfHealths.filament.vehicle_id.label"
                    }
                },
                "panelId": 29,
                "id": 240,
                "createdAt": "2024-07-30 11:59:03",
                "updatedAt": "2024-07-30 11:59:03"
            },
            "item_241": {
                "crudId": 29,
                "columnId": 229,
                "name": "km",
                "label": "crud.stateOfHealths.inputs.km.label",
                "placeholder": "crud.stateOfHealths.inputs.km.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.stateOfHealths.filament.km.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "km",
                        "inputMode": "numeric"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.stateOfHealths.filament.km.label",
                        "description": "crud.stateOfHealths.filament.km.description"
                    }
                },
                "panelId": 29,
                "id": 241,
                "createdAt": "2024-07-30 11:59:03",
                "updatedAt": "2024-07-30 12:51:27"
            },
            "item_242": {
                "crudId": 29,
                "columnId": 230,
                "name": "percentage",
                "label": "crud.stateOfHealths.inputs.percentage.label",
                "placeholder": "crud.stateOfHealths.inputs.percentage.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.stateOfHealths.filament.percentage.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "%",
                        "inputMode": "numeric"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.stateOfHealths.filament.percentage.label",
                        "description": "crud.stateOfHealths.filament.percentage.description"
                    }
                },
                "panelId": 29,
                "id": 242,
                "createdAt": "2024-07-30 11:59:03",
                "updatedAt": "2024-07-30 12:51:39"
            },
            "item_243": {
                "crudId": 29,
                "columnId": 231,
                "name": "remaining_battery",
                "label": "crud.stateOfHealths.inputs.remaining_battery.label",
                "placeholder": "crud.stateOfHealths.inputs.remaining_battery.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.stateOfHealths.filament.remaining_battery.helper_text",
                        "autofocus": false,
                        "autoComplete": true,
                        "suffix": "kWh",
                        "inputMode": "numeric"
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.stateOfHealths.filament.remaining_battery.label",
                        "description": "crud.stateOfHealths.filament.remaining_battery.description"
                    }
                },
                "panelId": 29,
                "id": 243,
                "createdAt": "2024-07-30 11:59:03",
                "updatedAt": "2024-07-30 12:51:42"
            },
            "item_245": {
                "crudId": 29,
                "columnId": 232,
                "name": "user_id",
                "label": "crud.stateOfHealths.inputs.user_id.label",
                "placeholder": "crud.stateOfHealths.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": false,
                "showOnUpdate": false,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 84,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.stateOfHealths.filament.user_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.stateOfHealths.filament.user_id.loading_message",
                        "noResultMessage": "crud.stateOfHealths.filament.user_id.no_result_message",
                        "searchMessage": "crud.stateOfHealths.filament.user_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.stateOfHealths.filament.user_id.label"
                    }
                },
                "panelId": 29,
                "id": 245,
                "createdAt": "2024-07-30 12:38:32",
                "updatedAt": "2024-07-30 12:38:41"
            },
            "item_246": {
                "crudId": 4,
                "columnId": 129,
                "name": "user_id",
                "label": "crud.chargerLocations.inputs.user_id.label",
                "placeholder": "crud.chargerLocations.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": false,
                "showOnUpdate": false,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 30,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.chargerLocations.filament.user_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.chargerLocations.filament.user_id.loading_message",
                        "noResultMessage": "crud.chargerLocations.filament.user_id.no_result_message",
                        "searchMessage": "crud.chargerLocations.filament.user_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.user_id.label"
                    }
                },
                "panelId": 4,
                "id": 246,
                "createdAt": "2024-07-30 12:39:08",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 15
            },
            "item_247": {
                "crudId": 14,
                "columnId": 249,
                "name": "user_id",
                "label": "crud.charges.inputs.user_id.label",
                "placeholder": "crud.charges.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": false,
                "showOnUpdate": false,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 170,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.charges.filament.user_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.charges.filament.user_id.loading_message",
                        "noResultMessage": "crud.charges.filament.user_id.no_result_message",
                        "searchMessage": "crud.charges.filament.user_id.search_message",
                        "useCustomInput": true,
                        "isMultiple": false
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.user_id.label"
                    }
                },
                "panelId": 14,
                "id": 247,
                "createdAt": "2024-07-30 12:40:05",
                "updatedAt": "2024-07-30 17:22:39",
                "order": 16
            },
            "item_248": {
                "crudId": 14,
                "columnId": 208,
                "name": "charger_id",
                "label": "crud.charges.inputs.charger_id.label",
                "placeholder": "crud.charges.inputs.charger_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.charges.filament.charger_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.charges.filament.charger_id.loading_message",
                        "noResultMessage": "crud.charges.filament.charger_id.no_result_message",
                        "searchMessage": "crud.charges.filament.charger_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.charges.filament.charger_id.label"
                    }
                },
                "panelId": 14,
                "id": 248,
                "createdAt": "2024-07-30 12:44:32",
                "updatedAt": "2024-07-30 12:45:01",
                "order": 4
            },
            "item_249": {
                "crudId": 6,
                "columnId": 251,
                "name": "image",
                "label": "crud.brandVehicles.inputs.image.label",
                "placeholder": "crud.brandVehicles.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "file-upload",
                        "helperText": "crud.brandVehicles.filament.image.helper_text",
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "preserveFilenames": false,
                        "useAvatarMode": false,
                        "useImageEditor": true,
                        "imageEditorAspectRatios": [
                            "null",
                            "16:9",
                            "4:3",
                            "1:1"
                        ],
                        "useCircleCropper": false,
                        "disablePreview": false,
                        "isDownloadable": false,
                        "canReorderFiles": false,
                        "disableDeleteButton": false
                    },
                    "columnData": {
                        "columnType": "image-column",
                        "label": "crud.brandVehicles.filament.image.label"
                    }
                },
                "panelId": 6,
                "id": 249,
                "createdAt": "2024-07-30 15:49:35",
                "updatedAt": "2024-07-30 15:49:37",
                "order": 0
            },
            "item_250": {
                "crudId": 30,
                "columnId": 252,
                "name": "image",
                "label": "crud.modelVehicles.inputs.image.label",
                "placeholder": "crud.modelVehicles.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "file-upload",
                        "helperText": "crud.modelVehicles.filament.image.helper_text",
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "preserveFilenames": false,
                        "useAvatarMode": false,
                        "useImageEditor": true,
                        "imageEditorAspectRatios": [
                            "null",
                            "16:9",
                            "4:3",
                            "1:1"
                        ],
                        "useCircleCropper": false,
                        "disablePreview": false,
                        "isDownloadable": false,
                        "canReorderFiles": false,
                        "disableDeleteButton": false
                    },
                    "columnData": {
                        "columnType": "image-column",
                        "label": "crud.modelVehicles.filament.image.label"
                    }
                },
                "panelId": 30,
                "id": 250,
                "createdAt": "2024-07-30 15:49:50",
                "updatedAt": "2024-07-30 15:49:50"
            },
            "item_251": {
                "crudId": 30,
                "columnId": 152,
                "name": "name",
                "label": "crud.modelVehicles.inputs.name.label",
                "placeholder": "crud.modelVehicles.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.modelVehicles.filament.name.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.modelVehicles.filament.name.label",
                        "description": "crud.modelVehicles.filament.name.description"
                    }
                },
                "panelId": 30,
                "id": 251,
                "createdAt": "2024-07-30 15:49:50",
                "updatedAt": "2024-07-30 15:49:50"
            },
            "item_252": {
                "crudId": 31,
                "columnId": 156,
                "name": "name",
                "label": "crud.typeVehicles.inputs.name.label",
                "placeholder": "crud.typeVehicles.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.typeVehicles.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeVehicles.filament.name.label",
                        "description": "crud.typeVehicles.filament.name.description"
                    }
                },
                "panelId": 31,
                "id": 252,
                "createdAt": "2024-07-30 15:50:00",
                "updatedAt": "2024-07-30 15:50:00"
            },
            "item_253": {
                "crudId": 31,
                "columnId": 221,
                "name": "battery_capacity",
                "label": "crud.typeVehicles.inputs.battery_capacity.label",
                "placeholder": "crud.typeVehicles.inputs.battery_capacity.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.typeVehicles.filament.battery_capacity.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeVehicles.filament.battery_capacity.label",
                        "description": "crud.typeVehicles.filament.battery_capacity.description"
                    }
                },
                "panelId": 31,
                "id": 253,
                "createdAt": "2024-07-30 15:50:00",
                "updatedAt": "2024-07-30 15:50:00"
            },
            "item_254": {
                "crudId": 31,
                "columnId": 247,
                "name": "type_charger",
                "label": "crud.typeVehicles.inputs.type_charger.label",
                "placeholder": "crud.typeVehicles.inputs.type_charger.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "rich-editor",
                        "helperText": "crud.typeVehicles.filament.type_charger.helper_text",
                        "toolbarButtons": null,
                        "disableToolbarButtons": null,
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "rows": null,
                        "cols": null,
                        "autosize": false,
                        "exactLength": null
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeVehicles.filament.type_charger.label"
                    }
                },
                "panelId": 31,
                "id": 254,
                "createdAt": "2024-07-30 15:50:00",
                "updatedAt": "2024-07-30 15:50:00"
            },
            "item_255": {
                "crudId": 13,
                "columnId": 186,
                "name": "name",
                "label": "crud.typeChargers.inputs.name.label",
                "placeholder": "crud.typeChargers.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "AC",
                        "value": "AC"
                    },
                    {
                        "label": "DC",
                        "value": "DC"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "radio",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "radio",
                        "helperText": "crud.typeChargers.filament.name.helper_text",
                        "inline": false,
                        "inlineLabel": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeChargers.filament.name.label"
                    }
                },
                "panelId": 13,
                "id": 255,
                "createdAt": "2024-07-30 15:55:44",
                "updatedAt": "2024-07-30 15:55:59",
                "order": 0
            },
            "item_256": {
                "crudId": 28,
                "columnId": 247,
                "name": "type_charger",
                "label": "crud.typeVehicles.inputs.type_charger.label",
                "placeholder": "crud.typeVehicles.inputs.type_charger.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "value": "1",
                        "label": "CCS2"
                    },
                    {
                        "value": "2",
                        "label": "Chademo"
                    },
                    {
                        "value": "3",
                        "label": "DC GBT"
                    },
                    {
                        "value": "4",
                        "label": "Type 2"
                    },
                    {
                        "value": "5",
                        "label": "AC GBT"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.typeVehicles.filament.type_charger.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.typeVehicles.filament.type_charger.loading_message",
                        "noResultMessage": "crud.typeVehicles.filament.type_charger.no_result_message",
                        "searchMessage": "crud.typeVehicles.filament.type_charger.search_message",
                        "useCustomInput": true,
                        "isMultiple": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.typeVehicles.filament.type_charger.label"
                    }
                },
                "panelId": 28,
                "id": 256,
                "createdAt": "2024-07-30 17:34:08",
                "updatedAt": "2024-07-30 17:35:09"
            },
            "item_257": {
                "crudId": 32,
                "columnId": 245,
                "name": "image",
                "label": "crud.providers.inputs.image.label",
                "placeholder": "crud.providers.inputs.image.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "image",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "image"
                    },
                    {
                        "type": "textual",
                        "value": "max:1024"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "file-upload",
                        "helperText": "crud.providers.filament.image.helper_text",
                        "disk": null,
                        "directory": null,
                        "visibility": "public",
                        "preserveFilenames": false,
                        "useAvatarMode": false,
                        "useImageEditor": true,
                        "imageEditorAspectRatios": [
                            "null",
                            "16:9",
                            "4:3",
                            "1:1"
                        ],
                        "useCircleCropper": false,
                        "disablePreview": false,
                        "isDownloadable": false,
                        "canReorderFiles": false,
                        "disableDeleteButton": false
                    },
                    "columnData": {
                        "columnType": "image-column",
                        "label": "crud.providers.filament.image.label"
                    }
                },
                "panelId": 32,
                "id": 257,
                "createdAt": "2024-07-30 18:34:37",
                "updatedAt": "2024-07-30 18:34:37"
            },
            "item_258": {
                "crudId": 32,
                "columnId": 105,
                "name": "name",
                "label": "crud.providers.inputs.name.label",
                "placeholder": "crud.providers.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.providers.filament.name.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.name.label",
                        "description": "crud.providers.filament.name.description"
                    }
                },
                "panelId": 32,
                "id": 258,
                "createdAt": "2024-07-30 18:34:37",
                "updatedAt": "2024-07-30 18:34:37"
            },
            "item_260": {
                "crudId": 32,
                "columnId": 238,
                "name": "contact",
                "label": "crud.providers.inputs.contact.label",
                "placeholder": "crud.providers.inputs.contact.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.providers.filament.contact.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.contact.label",
                        "description": "crud.providers.filament.contact.description"
                    }
                },
                "panelId": 32,
                "id": 260,
                "createdAt": "2024-07-30 18:34:37",
                "updatedAt": "2024-07-30 18:34:37"
            },
            "item_261": {
                "crudId": 32,
                "columnId": 239,
                "name": "address",
                "label": "crud.providers.inputs.address.label",
                "placeholder": "crud.providers.inputs.address.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.providers.filament.address.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.address.label",
                        "description": "crud.providers.filament.address.description"
                    }
                },
                "panelId": 32,
                "id": 261,
                "createdAt": "2024-07-30 18:34:38",
                "updatedAt": "2024-07-30 18:34:38"
            },
            "item_262": {
                "crudId": 32,
                "columnId": 240,
                "name": "province_id",
                "label": "crud.providers.inputs.province_id.label",
                "placeholder": "crud.providers.inputs.province_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 113,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.providers.filament.province_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.providers.filament.province_id.loading_message",
                        "noResultMessage": "crud.providers.filament.province_id.no_result_message",
                        "searchMessage": "crud.providers.filament.province_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.province_id.label"
                    }
                },
                "panelId": 32,
                "id": 262,
                "createdAt": "2024-07-30 18:34:38",
                "updatedAt": "2024-07-30 18:34:38"
            },
            "item_263": {
                "crudId": 32,
                "columnId": 241,
                "name": "city_id",
                "label": "crud.providers.inputs.city_id.label",
                "placeholder": "crud.providers.inputs.city_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 115,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.providers.filament.city_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.providers.filament.city_id.loading_message",
                        "noResultMessage": "crud.providers.filament.city_id.no_result_message",
                        "searchMessage": "crud.providers.filament.city_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.city_id.label"
                    }
                },
                "panelId": 32,
                "id": 263,
                "createdAt": "2024-07-30 18:34:38",
                "updatedAt": "2024-07-30 18:34:38"
            },
            "item_264": {
                "crudId": 32,
                "columnId": 242,
                "name": "district_id",
                "label": "crud.providers.inputs.district_id.label",
                "placeholder": "crud.providers.inputs.district_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 117,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.providers.filament.district_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.providers.filament.district_id.loading_message",
                        "noResultMessage": "crud.providers.filament.district_id.no_result_message",
                        "searchMessage": "crud.providers.filament.district_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.district_id.label"
                    }
                },
                "panelId": 32,
                "id": 264,
                "createdAt": "2024-07-30 18:34:38",
                "updatedAt": "2024-07-30 18:34:38"
            },
            "item_265": {
                "crudId": 32,
                "columnId": 243,
                "name": "subdistrict_id",
                "label": "crud.providers.inputs.subdistrict_id.label",
                "placeholder": "crud.providers.inputs.subdistrict_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 119,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.providers.filament.subdistrict_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.providers.filament.subdistrict_id.loading_message",
                        "noResultMessage": "crud.providers.filament.subdistrict_id.no_result_message",
                        "searchMessage": "crud.providers.filament.subdistrict_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.subdistrict_id.label"
                    }
                },
                "panelId": 32,
                "id": 265,
                "createdAt": "2024-07-30 18:34:38",
                "updatedAt": "2024-07-30 18:34:38"
            },
            "item_266": {
                "crudId": 32,
                "columnId": 244,
                "name": "postal_code_id",
                "label": "crud.providers.inputs.postal_code_id.label",
                "placeholder": "crud.providers.inputs.postal_code_id.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 121,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.providers.filament.postal_code_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.providers.filament.postal_code_id.loading_message",
                        "noResultMessage": "crud.providers.filament.postal_code_id.no_result_message",
                        "searchMessage": "crud.providers.filament.postal_code_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.postal_code_id.label"
                    }
                },
                "panelId": 32,
                "id": 266,
                "createdAt": "2024-07-30 18:34:38",
                "updatedAt": "2024-07-30 18:34:38"
            },
            "item_267": {
                "crudId": 32,
                "columnId": 106,
                "name": "status",
                "label": "crud.providers.inputs.status.label",
                "placeholder": "crud.providers.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "value": "1",
                        "label": "active"
                    },
                    {
                        "value": "2",
                        "label": "inactive"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.providers.filament.status.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.providers.filament.status.loading_message",
                        "noResultMessage": "crud.providers.filament.status.no_result_message",
                        "searchMessage": "crud.providers.filament.status.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.providers.filament.status.label"
                    }
                },
                "panelId": 32,
                "id": 267,
                "createdAt": "2024-07-30 18:35:32",
                "updatedAt": "2024-07-30 18:35:46"
            },
            "item_268": {
                "crudId": 4,
                "columnId": 271,
                "name": "address",
                "label": "crud.chargerLocations.inputs.address.label",
                "placeholder": "crud.chargerLocations.inputs.address.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.chargerLocations.filament.address.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.chargerLocations.filament.address.label",
                        "description": "crud.chargerLocations.filament.address.description"
                    }
                },
                "panelId": 4,
                "id": 268,
                "createdAt": "2024-07-30 19:26:18",
                "updatedAt": "2024-07-30 19:26:26",
                "order": 6
            },
            "item_269": {
                "crudId": 33,
                "columnId": 54,
                "name": "name",
                "label": "crud.users.inputs.name.label",
                "placeholder": "crud.users.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.users.filament.name.helper_text",
                        "autofocus": true,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.users.filament.name.label",
                        "description": "crud.users.filament.name.description"
                    }
                },
                "panelId": 33,
                "id": 269,
                "createdAt": "2024-07-30 22:45:20",
                "updatedAt": "2024-07-30 22:45:20"
            },
            "item_270": {
                "crudId": 33,
                "columnId": 55,
                "name": "email",
                "label": "crud.users.inputs.email.label",
                "placeholder": "crud.users.inputs.email.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "email",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.users.filament.email.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.users.filament.email.label",
                        "description": "crud.users.filament.email.description"
                    }
                },
                "panelId": 33,
                "id": 270,
                "createdAt": "2024-07-30 22:45:20",
                "updatedAt": "2024-07-30 22:45:20"
            },
            "item_271": {
                "crudId": 33,
                "columnId": 57,
                "name": "password",
                "label": "crud.users.inputs.password.label",
                "placeholder": "crud.users.inputs.password.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": false,
                "showOnIndex": false,
                "type": "password",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.users.filament.password.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.users.filament.password.label",
                        "description": "crud.users.filament.password.description"
                    }
                },
                "panelId": 33,
                "id": 271,
                "createdAt": "2024-07-30 22:45:20",
                "updatedAt": "2024-07-30 22:45:20"
            },
            "item_272": {
                "crudId": 34,
                "columnId": 288,
                "name": "charger_location_id",
                "label": "crud.discountHomeChargings.inputs.charger_location_id.label",
                "placeholder": "crud.discountHomeChargings.inputs.charger_location_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 383,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.discountHomeChargings.filament.charger_location_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.discountHomeChargings.filament.charger_location_id.loading_message",
                        "noResultMessage": "crud.discountHomeChargings.filament.charger_location_id.no_result_message",
                        "searchMessage": "crud.discountHomeChargings.filament.charger_location_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.discountHomeChargings.filament.charger_location_id.label"
                    }
                },
                "panelId": 34,
                "id": 272,
                "createdAt": "2024-08-19 08:59:11",
                "updatedAt": "2024-08-19 08:59:11"
            },
            "item_273": {
                "crudId": 34,
                "columnId": 284,
                "name": "month",
                "label": "crud.discountHomeChargings.inputs.month.label",
                "placeholder": "crud.discountHomeChargings.inputs.month.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "date",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "date-picker",
                        "helperText": "crud.discountHomeChargings.filament.month.helper_text",
                        "closeOnDateSelection": false,
                        "timezone": null,
                        "dateFormat": null,
                        "displayFormat": null,
                        "disableSeconds": false,
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.discountHomeChargings.filament.month.label"
                    }
                },
                "panelId": 34,
                "id": 273,
                "createdAt": "2024-08-19 08:59:11",
                "updatedAt": "2024-08-19 08:59:11"
            },
            "item_274": {
                "crudId": 34,
                "columnId": 285,
                "name": "total_kwh",
                "label": "crud.discountHomeChargings.inputs.total_kwh.label",
                "placeholder": "crud.discountHomeChargings.inputs.total_kwh.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.discountHomeChargings.filament.total_kwh.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.discountHomeChargings.filament.total_kwh.label",
                        "description": "crud.discountHomeChargings.filament.total_kwh.description"
                    }
                },
                "panelId": 34,
                "id": 274,
                "createdAt": "2024-08-19 08:59:11",
                "updatedAt": "2024-08-19 08:59:11"
            },
            "item_275": {
                "crudId": 34,
                "columnId": 286,
                "name": "discount_kwh",
                "label": "crud.discountHomeChargings.inputs.discount_kwh.label",
                "placeholder": "crud.discountHomeChargings.inputs.discount_kwh.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.discountHomeChargings.filament.discount_kwh.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.discountHomeChargings.filament.discount_kwh.label",
                        "description": "crud.discountHomeChargings.filament.discount_kwh.description"
                    }
                },
                "panelId": 34,
                "id": 275,
                "createdAt": "2024-08-19 08:59:11",
                "updatedAt": "2024-08-19 08:59:11"
            },
            "item_276": {
                "crudId": 34,
                "columnId": 287,
                "name": "discount_total",
                "label": "crud.discountHomeChargings.inputs.discount_total.label",
                "placeholder": "crud.discountHomeChargings.inputs.discount_total.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "text-input",
                        "helperText": "crud.discountHomeChargings.filament.discount_total.helper_text",
                        "autofocus": false,
                        "autoComplete": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.discountHomeChargings.filament.discount_total.label",
                        "description": "crud.discountHomeChargings.filament.discount_total.description"
                    }
                },
                "panelId": 34,
                "id": 276,
                "createdAt": "2024-08-19 08:59:11",
                "updatedAt": "2024-08-19 08:59:11"
            },
            "item_277": {
                "crudId": 34,
                "columnId": 283,
                "name": "user_id",
                "label": "crud.discountHomeChargings.inputs.user_id.label",
                "placeholder": "crud.discountHomeChargings.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 381,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "filamentSettings": {
                    "formData": {
                        "inputType": "select",
                        "helperText": "crud.discountHomeChargings.filament.user_id.helper_text",
                        "allowHtml": false,
                        "canBePreloaded": true,
                        "canBeSearchable": true,
                        "canSelectPlaceholder": true,
                        "loadingMessage": "crud.discountHomeChargings.filament.user_id.loading_message",
                        "noResultMessage": "crud.discountHomeChargings.filament.user_id.no_result_message",
                        "searchMessage": "crud.discountHomeChargings.filament.user_id.search_message",
                        "useCustomInput": true
                    },
                    "columnData": {
                        "columnType": "text-column",
                        "label": "crud.discountHomeChargings.filament.user_id.label"
                    }
                },
                "panelId": 34,
                "id": 277,
                "createdAt": "2024-08-19 08:59:11",
                "updatedAt": "2024-08-19 08:59:11"
            }
        },
        "renderable_files": {
            "item_1": {
                "path": "resources/views/components/ui",
                "name": "/toast.blade.php",
                "fullPath": "resources/views/components/ui//toast.blade.php",
                "template": "blade/ui/Toast.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 1,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props([\n    'on',\n    'timeout' => 2000,\n    'closeable' => true,\n])\n\n<div x-data=\"{ shown: false, timeout: null }\"\n    x-init=\"@this.on('{{ $on }}', () => { clearTimeout(timeout); shown = true; timeout = setTimeout(() => { shown = false }, {{ $timeout }});  })\"\n    x-show.transition.out.opacity.duration.500ms=\"shown\"\n    x-transition:leave.opacity.duration.500ms\n    x-transition:enter.opacity.duration.500ms\n    style=\"display: none;\"\n    {{ $attributes->merge(['class' => 'fixed right-0 top-0 p-2']) }}>\n    <div class=\"flex items-center bg-green-500 text-white rounded px-6 py-4\">\n        <div>\n            {{ $slot->isEmpty() ? 'Saved.' : $slot }}\n        </div>\n\n        @if($closeable)\n        <div @click=\"shown = false\" class=\"ml-4 cursor-pointer\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>              \n        </div>\n        @endif\n    </div>\n</div>"
            },
            "__tableData": {
                "count": 217,
                "lastPrimaryKey": 231,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {}
                    },
                    "62": {
                        "hasMany": {}
                    },
                    "63": {
                        "hasMany": {}
                    },
                    "64": {
                        "hasMany": {}
                    },
                    "65": {
                        "hasMany": {}
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {}
                    },
                    "68": {
                        "hasMany": {}
                    },
                    "69": {
                        "hasMany": {}
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {}
                    },
                    "72": {
                        "hasMany": {}
                    },
                    "73": {
                        "hasMany": {}
                    },
                    "74": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {}
                    },
                    "80": {
                        "hasMany": {}
                    },
                    "81": {
                        "hasMany": {}
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {}
                    },
                    "84": {
                        "hasMany": {}
                    },
                    "85": {
                        "hasMany": {}
                    },
                    "86": {
                        "hasMany": {}
                    },
                    "87": {
                        "hasMany": {}
                    },
                    "88": {
                        "hasMany": {}
                    },
                    "89": {
                        "hasMany": {}
                    },
                    "90": {
                        "hasMany": {}
                    },
                    "91": {
                        "hasMany": {}
                    },
                    "92": {
                        "hasMany": {}
                    },
                    "93": {
                        "hasMany": {}
                    },
                    "94": {
                        "hasMany": {}
                    },
                    "95": {
                        "hasMany": {}
                    },
                    "96": {
                        "hasMany": {}
                    },
                    "97": {
                        "hasMany": {}
                    },
                    "98": {
                        "hasMany": {}
                    },
                    "99": {
                        "hasMany": {}
                    },
                    "100": {
                        "hasMany": {}
                    },
                    "101": {
                        "hasMany": {}
                    },
                    "102": {
                        "hasMany": {}
                    },
                    "103": {
                        "hasMany": {}
                    },
                    "104": {
                        "hasMany": {}
                    },
                    "105": {
                        "hasMany": {}
                    },
                    "106": {
                        "hasMany": {}
                    },
                    "107": {
                        "hasMany": {}
                    },
                    "108": {
                        "hasMany": {}
                    },
                    "109": {
                        "hasMany": {}
                    },
                    "110": {
                        "hasMany": {}
                    },
                    "111": {
                        "hasMany": {}
                    },
                    "112": {
                        "hasMany": {}
                    },
                    "113": {
                        "hasMany": {}
                    },
                    "119": {
                        "hasMany": {}
                    },
                    "120": {
                        "hasMany": {}
                    },
                    "121": {
                        "hasMany": {}
                    },
                    "122": {
                        "hasMany": {}
                    },
                    "123": {
                        "hasMany": {}
                    },
                    "124": {
                        "hasMany": {}
                    },
                    "125": {
                        "hasMany": {}
                    },
                    "126": {
                        "hasMany": {}
                    },
                    "127": {
                        "hasMany": {}
                    },
                    "128": {
                        "hasMany": {}
                    },
                    "129": {
                        "hasMany": {}
                    },
                    "130": {
                        "hasMany": {}
                    },
                    "131": {
                        "hasMany": {}
                    },
                    "132": {
                        "hasMany": {}
                    },
                    "133": {
                        "hasMany": {}
                    },
                    "134": {
                        "hasMany": {}
                    },
                    "135": {
                        "hasMany": {}
                    },
                    "136": {
                        "hasMany": {}
                    },
                    "137": {
                        "hasMany": {}
                    },
                    "138": {
                        "hasMany": {}
                    },
                    "144": {
                        "hasMany": {}
                    },
                    "145": {
                        "hasMany": {}
                    },
                    "146": {
                        "hasMany": {}
                    },
                    "147": {
                        "hasMany": {}
                    },
                    "148": {
                        "hasMany": {}
                    },
                    "149": {
                        "hasMany": {}
                    },
                    "150": {
                        "hasMany": {}
                    },
                    "151": {
                        "hasMany": {}
                    },
                    "152": {
                        "hasMany": {}
                    },
                    "153": {
                        "hasMany": {}
                    },
                    "154": {
                        "hasMany": {}
                    },
                    "155": {
                        "hasMany": {}
                    },
                    "156": {
                        "hasMany": {}
                    },
                    "157": {
                        "hasMany": {}
                    },
                    "158": {
                        "hasMany": {}
                    },
                    "159": {
                        "hasMany": {}
                    },
                    "160": {
                        "hasMany": {}
                    },
                    "161": {
                        "hasMany": {}
                    },
                    "162": {
                        "hasMany": {}
                    },
                    "163": {
                        "hasMany": {}
                    },
                    "164": {
                        "hasMany": {}
                    },
                    "165": {
                        "hasMany": {}
                    },
                    "166": {
                        "hasMany": {}
                    },
                    "167": {
                        "hasMany": {}
                    },
                    "168": {
                        "hasMany": {}
                    },
                    "169": {
                        "hasMany": {}
                    },
                    "170": {
                        "hasMany": {}
                    },
                    "171": {
                        "hasMany": {}
                    },
                    "172": {
                        "hasMany": {}
                    },
                    "173": {
                        "hasMany": {}
                    },
                    "174": {
                        "hasMany": {}
                    },
                    "175": {
                        "hasMany": {}
                    },
                    "176": {
                        "hasMany": {}
                    },
                    "177": {
                        "hasMany": {}
                    },
                    "178": {
                        "hasMany": {}
                    },
                    "179": {
                        "hasMany": {}
                    },
                    "180": {
                        "hasMany": {}
                    },
                    "181": {
                        "hasMany": {}
                    },
                    "182": {
                        "hasMany": {}
                    },
                    "183": {
                        "hasMany": {}
                    },
                    "184": {
                        "hasMany": {}
                    },
                    "185": {
                        "hasMany": {}
                    },
                    "186": {
                        "hasMany": {}
                    },
                    "187": {
                        "hasMany": {}
                    },
                    "188": {
                        "hasMany": {}
                    },
                    "189": {
                        "hasMany": {}
                    },
                    "190": {
                        "hasMany": {}
                    },
                    "191": {
                        "hasMany": {}
                    },
                    "196": {
                        "hasMany": {}
                    },
                    "197": {
                        "hasMany": {}
                    },
                    "198": {
                        "hasMany": {}
                    },
                    "199": {
                        "hasMany": {}
                    },
                    "200": {
                        "hasMany": {}
                    },
                    "201": {
                        "hasMany": {}
                    },
                    "202": {
                        "hasMany": {}
                    },
                    "203": {
                        "hasMany": {}
                    },
                    "204": {
                        "hasMany": {}
                    },
                    "205": {
                        "hasMany": {}
                    },
                    "206": {
                        "hasMany": {}
                    },
                    "207": {
                        "hasMany": {}
                    },
                    "208": {
                        "hasMany": {}
                    },
                    "209": {
                        "hasMany": {}
                    },
                    "210": {
                        "hasMany": {}
                    },
                    "211": {
                        "hasMany": {}
                    },
                    "212": {
                        "hasMany": {}
                    },
                    "213": {
                        "hasMany": {}
                    },
                    "214": {
                        "hasMany": {}
                    },
                    "215": {
                        "hasMany": {}
                    },
                    "216": {
                        "hasMany": {}
                    },
                    "217": {
                        "hasMany": {}
                    },
                    "218": {
                        "hasMany": {}
                    },
                    "219": {
                        "hasMany": {}
                    },
                    "220": {
                        "hasMany": {}
                    },
                    "221": {
                        "hasMany": {}
                    },
                    "222": {
                        "hasMany": {}
                    },
                    "223": {
                        "hasMany": {}
                    },
                    "224": {
                        "hasMany": {}
                    },
                    "225": {
                        "hasMany": {}
                    },
                    "226": {
                        "hasMany": {}
                    },
                    "227": {
                        "hasMany": {}
                    },
                    "228": {
                        "hasMany": {}
                    },
                    "229": {
                        "hasMany": {}
                    },
                    "230": {
                        "hasMany": {}
                    },
                    "231": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "path": "resources/views/components/ui",
                "name": "/action/danger.blade.php",
                "fullPath": "resources/views/components/ui//action/danger.blade.php",
                "template": "blade/ui/action/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 2,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<a {!! $attributes->merge(['class' => 'text-red-600 hover:text-red-700 cursor-pointer']) !!}>\n    {{ $slot }}\n</a>"
            },
            "item_3": {
                "path": "resources/views/components/ui",
                "name": "/action/index.blade.php",
                "fullPath": "resources/views/components/ui//action/index.blade.php",
                "template": "blade/ui/action/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 3,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<a {!! $attributes->merge(['class' => 'text-indigo-600 hover:text-indigo-700 cursor-pointer']) !!}>\n    {{ $slot }}\n</a>"
            },
            "item_4": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/index.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/index.blade.php",
                "template": "blade/ui/breadcrumbs/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 4,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<nav class=\"flex justify-between py-1\">\n    <ol class=\"inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0\"> \n        {{ $slot }}\n    </ol>\n</nav>"
            },
            "item_5": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/link.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/link.blade.php",
                "template": "blade/ui/breadcrumbs/Link.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 5,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props([\n    'href' => false,\n    'active' => false,\n])\n\n<li class=\"\">\n    <a \n        @if($href)\n            wire:navigate\n            href=\"{{ $href }}\"\n        @endif\n        class=\"inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none {{ $active ? 'active-breadcrumb' : '' }}\"\n    >\n        {{ $slot }}\n    </a>\n</li>"
            },
            "item_6": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/separator.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/separator.blade.php",
                "template": "blade/ui/breadcrumbs/Separator.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 6,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<svg class=\"w-5 h-5 text-gray-400/70\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"none\"><path d=\"M10 8.013l4 4-4 4\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg>"
            },
            "item_7": {
                "path": "resources/views/components/ui",
                "name": "/button/danger.blade.php",
                "fullPath": "resources/views/components/ui//button/danger.blade.php",
                "template": "blade/ui/button/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 7,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>\n    {{ $slot }}\n</button>"
            },
            "item_8": {
                "path": "resources/views/components/ui",
                "name": "/button/index.blade.php",
                "fullPath": "resources/views/components/ui//button/index.blade.php",
                "template": "blade/ui/button/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 8,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none']) }}>\n    {{ $slot }}\n</button>"
            },
            "item_9": {
                "path": "resources/views/components/ui",
                "name": "/card/body.blade.php",
                "fullPath": "resources/views/components/ui//card/body.blade.php",
                "template": "blade/ui/card/Body.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 9,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": ""
            },
            "item_10": {
                "path": "resources/views/components/ui",
                "name": "/card/header.blade.php",
                "fullPath": "resources/views/components/ui//card/header.blade.php",
                "template": "blade/ui/card/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 10,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": ""
            },
            "item_11": {
                "path": "resources/views/components/ui",
                "name": "/card/index.blade.php",
                "fullPath": "resources/views/components/ui//card/index.blade.php",
                "template": "blade/ui/card/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 11,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": ""
            },
            "item_12": {
                "path": "resources/views/components/ui",
                "name": "/card/title.blade.php",
                "fullPath": "resources/views/components/ui//card/title.blade.php",
                "template": "blade/ui/card/Title.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 12,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": ""
            },
            "item_13": {
                "path": "resources/views/components/ui",
                "name": "/container/table.blade.php",
                "fullPath": "resources/views/components/ui//container/table.blade.php",
                "template": "blade/ui/container/Table.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 13,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<div class=\"flex flex-col\">\n    <div class=\"overflow-x-auto\">\n        <div class=\"inline-block min-w-full\">\n            {{ $slot }}\n        </div>\n    </div>\n</div>\n"
            },
            "item_14": {
                "path": "resources/views/components/ui",
                "name": "/input/checkbox.blade.php",
                "fullPath": "resources/views/components/ui//input/checkbox.blade.php",
                "template": "blade/ui/input/Checkbox.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 14,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<input \n    {{ $disabled ? 'disabled' : '' }} \n    type=\"checkbox\"\n    {!! $attributes->merge(['class' => '']) !!}\n>"
            },
            "item_15": {
                "path": "resources/views/components/ui",
                "name": "/input/color.blade.php",
                "fullPath": "resources/views/components/ui//input/color.blade.php",
                "template": "blade/ui/input/Color.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 15,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"color\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_16": {
                "path": "resources/views/components/ui",
                "name": "/input/date.blade.php",
                "fullPath": "resources/views/components/ui//input/date.blade.php",
                "template": "blade/ui/input/Date.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 16,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"date\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_17": {
                "path": "resources/views/components/ui",
                "name": "/input/date-time.blade.php",
                "fullPath": "resources/views/components/ui//input/date-time.blade.php",
                "template": "blade/ui/input/DateTime.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 17,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"datetime-local\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_18": {
                "path": "resources/views/components/ui",
                "name": "/input/email.blade.php",
                "fullPath": "resources/views/components/ui//input/email.blade.php",
                "template": "blade/ui/input/Email.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 18,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"email\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_19": {
                "path": "resources/views/components/ui",
                "name": "/input/error.blade.php",
                "fullPath": "resources/views/components/ui//input/error.blade.php",
                "template": "blade/ui/input/Error.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 19,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['for'])\n\n@error($for)\n    <p {{ $attributes->merge(['class' => 'text-sm text-red-600']) }}>{{ $message }}</p>\n@enderror\n"
            },
            "item_20": {
                "path": "resources/views/components/ui",
                "name": "/input/file.blade.php",
                "fullPath": "resources/views/components/ui//input/file.blade.php",
                "template": "blade/ui/input/File.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 20,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props([\n    'src' => '',\n    'accept' => '*',\n])\n\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\n    fileUrl: '{{ $src }}',\n    file: null,\n    fileInput: null,\n    initFileInput() {\n        this.fileInput = this.$el.querySelector('input[type=file]')\n\n        this.fileInput.addEventListener('change', () => {\n            this.file = this.fileInput.files[0]\n            this.fileUrl = URL.createObjectURL(this.file)\n        })\n    },\n    destroyFileInput() {\n        this.fileInput.removeEventListener('change')\n    },\n    remove() {\n        if (!confirm('Are you sure?')) return\n\n        this.fileUrl = ''\n        this.file = null\n        this.fileInput.value = ''\n\n        this.$dispatch('removed')\n    }\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\n    <div class=\"mb-2\">\n        {{-- Show the filename --}}\n        <template x-if=\"file\">\n            <div class=\"text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1\" x-text=\"file.name\"></div>\n        </template>\n\n        {{-- File selector --}}\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\n\n        {{-- Upload and remove buttons --}}\n        <div>\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"fileInput.click()\">Upload</button>\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"fileUrl\" @click.stop=\"remove()\">Remove</button>\n        </div>\n    </div>\n</div>"
            },
            "item_21": {
                "path": "resources/views/components/ui",
                "name": "/input/hidden.blade.php",
                "fullPath": "resources/views/components/ui//input/hidden.blade.php",
                "template": "blade/ui/input/Hidden.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 21,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"hidden\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_22": {
                "path": "resources/views/components/ui",
                "name": "/input/image.blade.php",
                "fullPath": "resources/views/components/ui//input/image.blade.php",
                "template": "blade/ui/input/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 22,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props([\n    'src' => '',\n    'accept' => 'image/*',\n])\n\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\n    imageUrl: '{{ $src }}',\n    imageFile: null,\n    imageInput: null,\n    initFileInput() {\n        this.imageInput = this.$el.querySelector('input[type=file]')\n\n        this.imageInput.addEventListener('change', () => {\n            this.imageFile = this.imageInput.files[0]\n            this.imageUrl = URL.createObjectURL(this.imageFile)\n        })\n    },\n    destroyFileInput() {\n        this.imageInput.removeEventListener('change')\n    },\n    remove() {\n        if (!confirm('Are you sure?')) return\n\n        this.imageUrl = ''\n        this.imageFile = null\n        this.imageInput.value = ''\n\n        this.$dispatch('removed')\n    }\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\n    <div class=\"mb-2\">\n\n        {{-- Show the image --}}\n        <template x-if=\"imageUrl\">\n            <img @click.stop=\"imageInput.click()\" :src=\"imageUrl\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\">\n        </template>\n\n        {{-- Show the gray box when image is not available --}}\n        <template x-if=\"!imageUrl\">\n            <div @click.stop=\"imageInput.click()\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\"></div>\n        </template>\n\n        {{-- Image file selector --}}\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\n\n        {{-- Upload and remove buttons --}}\n        <div>\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"imageInput.click()\">Upload</button>\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"imageUrl\" @click.stop=\"remove()\">Remove</button>\n        </div>\n    </div>\n</div>"
            },
            "item_23": {
                "path": "resources/views/components/ui",
                "name": "/input/index.blade.php",
                "fullPath": "resources/views/components/ui//input/index.blade.php",
                "template": "blade/ui/input/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 23,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<input \n    {{ $disabled ? 'disabled' : '' }} \n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\n>\n"
            },
            "item_24": {
                "path": "resources/views/components/ui",
                "name": "/input/number.blade.php",
                "fullPath": "resources/views/components/ui//input/number.blade.php",
                "template": "blade/ui/input/Number.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 24,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"number\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_25": {
                "path": "resources/views/components/ui",
                "name": "/input/password.blade.php",
                "fullPath": "resources/views/components/ui//input/password.blade.php",
                "template": "blade/ui/input/Password.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 25,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"password\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_26": {
                "path": "resources/views/components/ui",
                "name": "/input/radio.blade.php",
                "fullPath": "resources/views/components/ui//input/radio.blade.php",
                "template": "blade/ui/input/Radio.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 26,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<input \n    :disabled=\"$disabled\" \n    type=\"radio\"\n    {!! $attributes->merge(['class' => '!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500']) !!}\n/>"
            },
            "item_27": {
                "path": "resources/views/components/ui",
                "name": "/input/select.blade.php",
                "fullPath": "resources/views/components/ui//input/select.blade.php",
                "template": "blade/ui/input/Select.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 27,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<select \n    {{ $disabled ? 'disabled' : '' }} \n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\n>\n    {{ $slot }}\n</select>"
            },
            "item_28": {
                "path": "resources/views/components/ui",
                "name": "/input/text.blade.php",
                "fullPath": "resources/views/components/ui//input/text.blade.php",
                "template": "blade/ui/input/Text.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 28,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"text\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_29": {
                "path": "resources/views/components/ui",
                "name": "/input/textarea.blade.php",
                "fullPath": "resources/views/components/ui//input/textarea.blade.php",
                "template": "blade/ui/input/Textarea.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 29,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<textarea \n    {{ $disabled ? 'disabled' : '' }} \n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\n></textarea>"
            },
            "item_30": {
                "path": "resources/views/components/ui",
                "name": "/input/time.blade.php",
                "fullPath": "resources/views/components/ui//input/time.blade.php",
                "template": "blade/ui/input/Time.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 30,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"time\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_31": {
                "path": "resources/views/components/ui",
                "name": "/input/url.blade.php",
                "fullPath": "resources/views/components/ui//input/url.blade.php",
                "template": "blade/ui/input/Url.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 31,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['disabled' => false])\n\n<x-ui.input \n    :disabled=\"$disabled\" \n    type=\"url\"\n    :attributes=\"$attributes\"\n/>"
            },
            "item_32": {
                "path": "resources/views/components/ui",
                "name": "/label/index.blade.php",
                "fullPath": "resources/views/components/ui//label/index.blade.php",
                "template": "blade/ui/label/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 32,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['value'])\n\n<label {{ $attributes->merge(['class' => 'block mb-1.5 font-medium text-sm text-gray-700']) }}>\n    {{ $value ?? $slot }}\n</label>"
            },
            "item_33": {
                "path": "resources/views/components/ui",
                "name": "/modal/confirm.blade.php",
                "fullPath": "resources/views/components/ui//modal/confirm.blade.php",
                "template": "blade/ui/modal/Confirm.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 33,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['id' => null, 'maxWidth' => null])\n\n<x-ui.modal :id=\"$id\" :maxWidth=\"$maxWidth\" {{ $attributes }}>\n    <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n        <div class=\"sm:flex sm:items-start\">\n            <div class=\"mx-auto shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                <svg class=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\n                </svg>\n            </div>\n\n            <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                <h3 class=\"text-lg font-medium text-gray-900\">\n                    {{ $title }}\n                </h3>\n\n                <div class=\"mt-4 text-sm text-gray-600\">\n                    {{ $content }}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"flex flex-row justify-between p-4 bg-gray-100 text-right\">\n        {{ $footer }}\n    </div>\n</x-ui.modal>"
            },
            "item_34": {
                "path": "resources/views/components/ui",
                "name": "/modal/index.blade.php",
                "fullPath": "resources/views/components/ui//modal/index.blade.php",
                "template": "blade/ui/modal/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 34,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props(['id', 'maxWidth'])\n\n@php\n$id = $id ?? md5($attributes->wire('model'));\n\n$maxWidth = [\n    'sm' => 'sm:max-w-sm',\n    'md' => 'sm:max-w-md',\n    'lg' => 'sm:max-w-lg',\n    'xl' => 'sm:max-w-xl',\n    '2xl' => 'sm:max-w-2xl',\n][$maxWidth ?? '2xl'];\n@endphp\n\n<div\n    x-data=\"{ show: @entangle($attributes->wire('model')) }\"\n    x-on:close.stop=\"show = false\"\n    x-on:keydown.escape.window=\"show = false\"\n    x-show=\"show\"\n    id=\"{{ $id }}\"\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\n    style=\"display: none;\"\n>\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\n                    x-transition:enter-start=\"opacity-0\"\n                    x-transition:enter-end=\"opacity-100\"\n                    x-transition:leave=\"ease-in duration-200\"\n                    x-transition:leave-start=\"opacity-100\"\n                    x-transition:leave-end=\"opacity-0\">\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n    </div>\n\n    <div x-show=\"show\" \n        class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\n        x-trap.inert.noscroll=\"show\"\n        x-transition:enter=\"ease-out duration-300\"\n        x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n        x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\n        x-transition:leave=\"ease-in duration-200\"\n        x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\n        x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\n        {{ $slot }}\n    </div>\n</div>\n"
            },
            "item_35": {
                "path": "resources/views/components/ui",
                "name": "/table/action-column.blade.php",
                "fullPath": "resources/views/components/ui//table/action-column.blade.php",
                "template": "blade/ui/table/ActionColumn.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 35,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2']) !!}>\n    {{ $slot }}\n</td>"
            },
            "item_36": {
                "path": "resources/views/components/ui",
                "name": "/table/action-header.blade.php",
                "fullPath": "resources/views/components/ui//table/action-header.blade.php",
                "template": "blade/ui/table/ActionHeader.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 36,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<th {!! $attributes->merge(['class' => 'px-5 py-3 text-xs font-medium text-right uppercase']) !!}>\n    {{ $slot }}\n</th>"
            },
            "item_37": {
                "path": "resources/views/components/ui",
                "name": "/table/column.blade.php",
                "fullPath": "resources/views/components/ui//table/column.blade.php",
                "template": "blade/ui/table/Column.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 37,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props([\n    'forCrud' => false\n])\n\n@php\n$allClasses = [\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\n    'max-w-xs truncate' => $forCrud,\n];\n\n$classes = join(' ', array_keys(array_filter($allClasses)));\n@endphp\n\n<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm whitespace-nowrap']) !!}>\n    {{ $slot }}\n</td>"
            },
            "item_38": {
                "path": "resources/views/components/ui",
                "name": "/table/header.blade.php",
                "fullPath": "resources/views/components/ui//table/header.blade.php",
                "template": "blade/ui/table/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 38,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props([\n    'forCrud' => false\n])\n\n@php\n$allClasses = [\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\n    'cursor-pointer' => $forCrud,\n];\n\n$classes = join(' ', array_keys(array_filter($allClasses)));\n@endphp\n\n<th {!! $attributes->merge(['class' => $classes]) !!}>\n    {{ $slot }}\n</th>"
            },
            "item_39": {
                "path": "resources/views/components/ui",
                "name": "/table/image.blade.php",
                "fullPath": "resources/views/components/ui//table/image.blade.php",
                "template": "blade/ui/table/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 39,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props([\n    'url' => '',\n    'alt' => ''\n])\n\n<img\n    src=\"{{ $url }}\"\n    alt=\"{{ $alt }}\"\n    class=\"w-12 h-12 rounded-lg bg-center\"\n/>"
            },
            "item_40": {
                "path": "resources/views/components/ui",
                "name": "/table/index.blade.php",
                "fullPath": "resources/views/components/ui//table/index.blade.php",
                "template": "blade/ui/table/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 40,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "@props([\n    'head',\n    'body',\n    'foot'\n])\n\n<div class=\"overflow-hidden border rounded-lg\">\n    <table {!! $attributes->merge(['class' => 'min-w-full divide-y divide-gray-200']) !!}>\n        @if(isset($head))\n        <thead class=\"bg-gray-50\">\n            <tr class=\"text-gray-500\">\n                {{ $head }}\n            </tr>\n        </thead>\n        @endif\n\n        @if(isset($body))\n        <tbody class=\"bg-white divide-y divide-gray-200 dark:divide-gray-700\">\n            {{ $body }}\n        </tbody>\n        @endif\n\n        @if(isset($foot))\n        <tfoot class=\"\">\n            {{ $foot }}\n        </tfoot>\n        @endif\n    </table>\n    \n</div>"
            },
            "item_41": {
                "path": "resources/views/components/ui",
                "name": "/table/row.blade.php",
                "fullPath": "resources/views/components/ui//table/row.blade.php",
                "template": "blade/ui/table/Row.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 41,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<tr {!! $attributes->merge(['class' => 'text-gray-800']) !!}>\n    {{ $slot }}\n</tr>"
            },
            "item_42": {
                "path": "resources/views/partials",
                "name": "app-menu.blade.php",
                "fullPath": "resources/views/partials/app-menu.blade.php",
                "template": "menu/AppMenu.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 42,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n    <div class=\"ml-3 relative\">\n        <x-dropdown align=\"right\" width=\"48\">\n            <x-slot name=\"trigger\">\n                <span class=\"inline-flex rounded-md\">\n                    <button\n                        type=\"button\"\n                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                    >\n                        {{ __('navigation.home') }}\n\n                        <svg\n                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke-width=\"1.5\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                            />\n                        </svg>\n                    </button>\n                </span>\n            </x-slot>\n\n            <x-slot name=\"content\">\n                <x-dropdown-link> No items found </x-dropdown-link>\n            </x-slot>\n        </x-dropdown>\n    </div>\n    <div class=\"ml-3 relative\">\n        <x-dropdown align=\"right\" width=\"48\">\n            <x-slot name=\"trigger\">\n                <span class=\"inline-flex rounded-md\">\n                    <button\n                        type=\"button\"\n                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                    >\n                        {{ __('navigation.apps') }}\n\n                        <svg\n                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke-width=\"1.5\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                stroke-linecap=\"round\"\n                                stroke-linejoin=\"round\"\n                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                            />\n                        </svg>\n                    </button>\n                </span>\n            </x-slot>\n\n            <x-slot name=\"content\">\n                <x-dropdown-link> No items found </x-dropdown-link>\n            </x-slot>\n        </x-dropdown>\n    </div>\n</div>\n"
            },
            "item_43": {
                "path": "resources/views/partials",
                "name": "app-responsive-menu.blade.php",
                "fullPath": "resources/views/partials/app-responsive-menu.blade.php",
                "template": "menu/AppResponsiveMenu.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 43,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": ""
            },
            "item_44": {
                "path": "routes",
                "name": "app.php",
                "fullPath": "routes/app.php",
                "template": "routes/Routes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 44,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\n// Dashboard\nRoute::prefix('/dashboard')\n    ->name('dashboard.')\n    ->middleware(['auth:sanctum', config('jetstream.auth_session'), 'verified'])\n    ->group(function () {});\n\n// API\nRoute::prefix('/api')\n    ->name('api.')\n    ->middleware(['auth:sanctum', config('jetstream.auth_session'), 'verified'])\n    ->group(function () {});\n\n// Site\nRoute::prefix('/')->group(function () {});\n\n// Filament Panel\nRoute::prefix('/panel')\n    ->name('panel.')\n    ->group(function () {});\n"
            },
            "item_45": {
                "path": "routes",
                "name": "app-api.php",
                "fullPath": "routes/app-api.php",
                "template": "routes/ApiRoutes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 45,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\AuthController;\nuse App\\Http\\Controllers\\Api\\ChargeController;\n\nuse App\\Http\\Controllers\\Api\\VehicleController;\nuse App\\Http\\Controllers\\Api\\ChargerController;\nuse App\\Http\\Controllers\\Api\\ChargersChargeController;\nuse App\\Http\\Controllers\\Api\\ChargerLocationController;\nuse App\\Http\\Controllers\\Api\\VehiclesChargeController;\nuse App\\Http\\Controllers\\Api\\VehiclesStateOfHealthController;\nuse App\\Http\\Controllers\\Api\\ChargerLocationsChargerController;\nuse App\\Http\\Controllers\\Api\\ChargerLocationsChargeController;\nuse App\\Http\\Controllers\\Api\\ChargerLocationsDiscountHomeChargingController;\n\n/*\n|--------------------------------------------------------------------------\n| Api Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\nRoute::name('api.')\n    ->prefix('api')\n    ->group(function () {\n        Route::post('/login', [AuthController::class, 'login'])->name(\n            'api.login'\n        );\n\n        Route::middleware('auth:sanctum')->group(function () {\n            Route::get('/charges', [ChargeController::class, 'index'])->name(\n                'charges.index'\n            );\n\n            Route::post('/charges', [ChargeController::class, 'store'])->name(\n                'charges.store'\n            );\n\n            Route::get('/charges/{charge}', [\n                ChargeController::class,\n                'show',\n            ])->name('charges.show');\n\n            Route::put('/charges/{charge}', [\n                ChargeController::class,\n                'update',\n            ])->name('charges.update');\n\n            Route::delete('/charges/{charge}', [\n                ChargeController::class,\n                'destroy',\n            ])->name('charges.destroy');\n\n            Route::get('/vehicles/{vehicle}/charges', [\n                VehiclesChargeController::class,\n                'index',\n            ])->name('vehicles.charges.index');\n\n            Route::post('/vehicles/{vehicle}/charges', [\n                VehiclesChargeController::class,\n                'store',\n            ])->name('vehicles.charges.store');\n\n            Route::get('/vehicles/{vehicle}/state-of-healths', [\n                VehiclesStateOfHealthController::class,\n                'index',\n            ])->name('vehicles.state-of-healths.index');\n\n            Route::post('/vehicles/{vehicle}/state-of-healths', [\n                VehiclesStateOfHealthController::class,\n                'store',\n            ])->name('vehicles.state-of-healths.store');\n\n            Route::get('/vehicles', [VehicleController::class, 'index'])->name(\n                'vehicles.index'\n            );\n\n            Route::post('/vehicles', [VehicleController::class, 'store'])->name(\n                'vehicles.store'\n            );\n\n            Route::get('/vehicles/{vehicle}', [\n                VehicleController::class,\n                'show',\n            ])->name('vehicles.show');\n\n            Route::put('/vehicles/{vehicle}', [\n                VehicleController::class,\n                'update',\n            ])->name('vehicles.update');\n\n            Route::delete('/vehicles/{vehicle}', [\n                VehicleController::class,\n                'destroy',\n            ])->name('vehicles.destroy');\n\n            Route::get('/charger-locations/{charger-location}/chargers', [\n                ChargerLocationsChargerController::class,\n                'index',\n            ])->name('charger-locations.chargers.index');\n\n            Route::post('/charger-locations/{charger-location}/chargers', [\n                ChargerLocationsChargerController::class,\n                'store',\n            ])->name('charger-locations.chargers.store');\n\n            Route::get('/charger-locations', [\n                ChargerLocationController::class,\n                'index',\n            ])->name('charger-locations.index');\n\n            Route::post('/charger-locations', [\n                ChargerLocationController::class,\n                'store',\n            ])->name('charger-locations.store');\n\n            Route::get('/charger-locations/{chargerLocation}', [\n                ChargerLocationController::class,\n                'show',\n            ])->name('charger-locations.show');\n\n            Route::put('/charger-locations/{chargerLocation}', [\n                ChargerLocationController::class,\n                'update',\n            ])->name('charger-locations.update');\n\n            Route::delete('/charger-locations/{chargerLocation}', [\n                ChargerLocationController::class,\n                'destroy',\n            ])->name('charger-locations.destroy');\n\n            Route::get('/chargers', [ChargerController::class, 'index'])->name(\n                'chargers.index'\n            );\n\n            Route::post('/chargers', [ChargerController::class, 'store'])->name(\n                'chargers.store'\n            );\n\n            Route::get('/chargers/{charger}', [\n                ChargerController::class,\n                'show',\n            ])->name('chargers.show');\n\n            Route::put('/chargers/{charger}', [\n                ChargerController::class,\n                'update',\n            ])->name('chargers.update');\n\n            Route::delete('/chargers/{charger}', [\n                ChargerController::class,\n                'destroy',\n            ])->name('chargers.destroy');\n        });\n    });\n"
            },
            "item_46": {
                "path": "bootstrap",
                "name": "app.php",
                "fullPath": "bootstrap/app.php",
                "template": "laravel/BootstrapApp.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 46,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Foundation\\Configuration\\Exceptions;\nuse Illuminate\\Foundation\\Configuration\\Middleware;\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    ->withProviders()\n    ->withRouting(\n        web: __DIR__ . '/../routes/web.php',\n        // api: __DIR__.'/../routes/api.php',\n        commands: __DIR__ . '/../routes/console.php',\n        // channels: __DIR__.'/../routes/channels.php',\n        health: '/up',\n\n        then: function () {\n            Route::middleware('web')->group(__DIR__ . '/../routes/app.php');\n            Route::middleware('api')->group(__DIR__ . '/../routes/app-api.php');\n        }\n    )\n    ->withMiddleware(function (Middleware $middleware) {\n        //\n    })\n    ->withExceptions(function (Exceptions $exceptions) {\n        //\n    })\n    ->create();\n",
                "conflictFileName": null
            },
            "item_47": {
                "path": "database/factories",
                "name": "UserFactory.php",
                "fullPath": "database/factories/UserFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 47,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'email' => fake()\n                ->unique()\n                ->safeEmail(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'two_factor_secret' => fake()->text(),\n            'two_factor_recovery_codes' => fake()->text(),\n            'remember_token' => \\Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n",
                "conflictFileName": null
            },
            "item_48": {
                "path": "database/seeders",
                "name": "UserSeeder.php",
                "fullPath": "database/seeders/UserSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 48,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_49": {
                "path": "app/Policies",
                "name": "UserPolicy.php",
                "fullPath": "app/Policies/UserPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 49,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\n\nclass UserPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "I7CyGBBwhWj4z6Kqe3aCm04ezeFjs7NI.json"
            },
            "item_50": {
                "path": "database/factories",
                "name": "ProvinceFactory.php",
                "fullPath": "database/factories/ProvinceFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 50,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Province;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ProvinceFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Province::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n        ];\n    }\n}\n"
            },
            "item_51": {
                "path": "database/seeders",
                "name": "ProvinceSeeder.php",
                "fullPath": "database/seeders/ProvinceSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 51,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Province;\nuse Illuminate\\Database\\Seeder;\n\nclass ProvinceSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Province::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_52": {
                "path": "app/Policies",
                "name": "ProvincePolicy.php",
                "fullPath": "app/Policies/ProvincePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 52,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Province;\n\nclass ProvincePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Province $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Province $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Province $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Province $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Province $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_53": {
                "path": "database/factories",
                "name": "CityFactory.php",
                "fullPath": "database/factories/CityFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 53,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\City;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CityFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = City::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'province_id' => \\App\\Models\\Province::factory(),\n        ];\n    }\n}\n"
            },
            "item_54": {
                "path": "database/seeders",
                "name": "CitySeeder.php",
                "fullPath": "database/seeders/CitySeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 54,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\City;\nuse Illuminate\\Database\\Seeder;\n\nclass CitySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        City::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_55": {
                "path": "app/Policies",
                "name": "CityPolicy.php",
                "fullPath": "app/Policies/CityPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 55,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\City;\nuse App\\Models\\User;\n\nclass CityPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, City $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, City $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, City $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, City $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, City $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_56": {
                "path": "database/factories",
                "name": "DistrictFactory.php",
                "fullPath": "database/factories/DistrictFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 56,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\District;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass DistrictFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = District::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'city_id' => \\App\\Models\\City::factory(),\n        ];\n    }\n}\n"
            },
            "item_57": {
                "path": "database/seeders",
                "name": "DistrictSeeder.php",
                "fullPath": "database/seeders/DistrictSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 57,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\District;\nuse Illuminate\\Database\\Seeder;\n\nclass DistrictSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        District::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_58": {
                "path": "app/Policies",
                "name": "DistrictPolicy.php",
                "fullPath": "app/Policies/DistrictPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 58,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\District;\n\nclass DistrictPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, District $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, District $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, District $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, District $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, District $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_59": {
                "path": "database/factories",
                "name": "SubdistrictFactory.php",
                "fullPath": "database/factories/SubdistrictFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 59,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Subdistrict;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass SubdistrictFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Subdistrict::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'district_id' => \\App\\Models\\District::factory(),\n        ];\n    }\n}\n"
            },
            "item_60": {
                "path": "database/seeders",
                "name": "SubdistrictSeeder.php",
                "fullPath": "database/seeders/SubdistrictSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 60,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Subdistrict;\nuse Illuminate\\Database\\Seeder;\n\nclass SubdistrictSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Subdistrict::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_61": {
                "path": "app/Policies",
                "name": "SubdistrictPolicy.php",
                "fullPath": "app/Policies/SubdistrictPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 61,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Subdistrict;\n\nclass SubdistrictPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Subdistrict $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Subdistrict $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Subdistrict $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Subdistrict $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Subdistrict $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_62": {
                "path": "database/factories",
                "name": "PostalCodeFactory.php",
                "fullPath": "database/factories/PostalCodeFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 62,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\PostalCode;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PostalCodeFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = PostalCode::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'province_id' => \\App\\Models\\Province::factory(),\n            'city_id' => \\App\\Models\\City::factory(),\n            'district_id' => \\App\\Models\\District::factory(),\n            'subdistrict_id' => \\App\\Models\\Subdistrict::factory(),\n        ];\n    }\n}\n"
            },
            "item_63": {
                "path": "database/seeders",
                "name": "PostalCodeSeeder.php",
                "fullPath": "database/seeders/PostalCodeSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 63,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\PostalCode;\nuse Illuminate\\Database\\Seeder;\n\nclass PostalCodeSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        PostalCode::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_64": {
                "path": "app/Policies",
                "name": "PostalCodePolicy.php",
                "fullPath": "app/Policies/PostalCodePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 64,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\PostalCode;\n\nclass PostalCodePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, PostalCode $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, PostalCode $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, PostalCode $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, PostalCode $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, PostalCode $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_65": {
                "path": "database/factories",
                "name": "ProviderFactory.php",
                "fullPath": "database/factories/ProviderFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 65,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Provider;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ProviderFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Provider::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'image' => fake()->optional(),\n            'name' => fake()->name(),\n            'status' => fake()->numberBetween(1, 2),\n            'contact' => fake()->randomNumber(),\n            'address' => fake()->address(),\n            'province_id' => \\App\\Models\\Province::factory(),\n            'city_id' => \\App\\Models\\City::factory(),\n            'district_id' => \\App\\Models\\District::factory(),\n            'subdistrict_id' => \\App\\Models\\Subdistrict::factory(),\n            'postal_code_id' => \\App\\Models\\PostalCode::factory(),\n        ];\n    }\n}\n"
            },
            "item_66": {
                "path": "database/seeders",
                "name": "ProviderSeeder.php",
                "fullPath": "database/seeders/ProviderSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 66,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Provider;\nuse Illuminate\\Database\\Seeder;\n\nclass ProviderSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Provider::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_67": {
                "path": "app/Policies",
                "name": "ProviderPolicy.php",
                "fullPath": "app/Policies/ProviderPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 67,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Provider;\n\nclass ProviderPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Provider $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Provider $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Provider $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Provider $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Provider $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "40vfKvKvIxvDLbaK7rihKhENwGtzNoge.json"
            },
            "item_68": {
                "path": "database/factories",
                "name": "ChargerLocationFactory.php",
                "fullPath": "database/factories/ChargerLocationFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 68,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\ChargerLocation;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ChargerLocationFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = ChargerLocation::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'image' => fake()->optional(),\n            'name' => fake()->name(),\n            'location_on' => fake()->numberBetween(1, 2),\n            'status' => fake()->numberBetween(1, 2),\n            'description' => fake()->sentence(15),\n            'latitude' => fake()->latitude(),\n            'longitude' => fake()->longitude(),\n            'parking' => fake()->boolean(),\n            'address' => fake()->address(),\n            'deleted_at' => fake()->dateTime(),\n            'provider_id' => \\App\\Models\\Provider::factory(),\n            'province_id' => \\App\\Models\\Province::factory(),\n            'city_id' => \\App\\Models\\City::factory(),\n            'district_id' => \\App\\Models\\District::factory(),\n            'subdistrict_id' => \\App\\Models\\Subdistrict::factory(),\n            'postal_code_id' => \\App\\Models\\PostalCode::factory(),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n"
            },
            "item_69": {
                "path": "database/seeders",
                "name": "ChargerLocationSeeder.php",
                "fullPath": "database/seeders/ChargerLocationSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 69,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\ChargerLocation;\n\nclass ChargerLocationSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        ChargerLocation::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_70": {
                "path": "app/Policies",
                "name": "ChargerLocationPolicy.php",
                "fullPath": "app/Policies/ChargerLocationPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 70,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\ChargerLocation;\n\nclass ChargerLocationPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, ChargerLocation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, ChargerLocation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, ChargerLocation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, ChargerLocation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, ChargerLocation $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "xRbyGLXIWaAjweD8gVVEeG4ruZwoEVzY.json"
            },
            "item_71": {
                "path": "database/factories",
                "name": "PaymentFactory.php",
                "fullPath": "database/factories/PaymentFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 71,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Payment;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PaymentFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Payment::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'image' => fake()->word(),\n        ];\n    }\n}\n"
            },
            "item_72": {
                "path": "database/seeders",
                "name": "PaymentSeeder.php",
                "fullPath": "database/seeders/PaymentSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 72,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Payment;\nuse Illuminate\\Database\\Seeder;\n\nclass PaymentSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Payment::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_73": {
                "path": "app/Policies",
                "name": "PaymentPolicy.php",
                "fullPath": "app/Policies/PaymentPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 73,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Payment;\n\nclass PaymentPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Payment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Payment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Payment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Payment $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Payment $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "msL0xydTflwtTRbkfqSMkQ6Qx2cJW4VD.json"
            },
            "item_74": {
                "path": "database/factories",
                "name": "BrandVehicleFactory.php",
                "fullPath": "database/factories/BrandVehicleFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 74,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\BrandVehicle;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass BrandVehicleFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = BrandVehicle::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'image' => fake()->word(),\n            'name' => fake()->name(),\n        ];\n    }\n}\n"
            },
            "item_75": {
                "path": "database/seeders",
                "name": "BrandVehicleSeeder.php",
                "fullPath": "database/seeders/BrandVehicleSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 75,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\BrandVehicle;\nuse Illuminate\\Database\\Seeder;\n\nclass BrandVehicleSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        BrandVehicle::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_76": {
                "path": "app/Policies",
                "name": "BrandVehiclePolicy.php",
                "fullPath": "app/Policies/BrandVehiclePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 76,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\BrandVehicle;\n\nclass BrandVehiclePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, BrandVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, BrandVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, BrandVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, BrandVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, BrandVehicle $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "jEEIMPcP9e7PUmlS7KuinusVn5pnldsO.json"
            },
            "item_77": {
                "path": "database/factories",
                "name": "ModelVehicleFactory.php",
                "fullPath": "database/factories/ModelVehicleFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 77,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\ModelVehicle;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ModelVehicleFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = ModelVehicle::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'image' => fake()->word(),\n            'name' => fake()->name(),\n            'brand_vehicle_id' => \\App\\Models\\BrandVehicle::factory(),\n        ];\n    }\n}\n"
            },
            "item_78": {
                "path": "database/seeders",
                "name": "ModelVehicleSeeder.php",
                "fullPath": "database/seeders/ModelVehicleSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 78,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\ModelVehicle;\nuse Illuminate\\Database\\Seeder;\n\nclass ModelVehicleSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        ModelVehicle::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_79": {
                "path": "app/Policies",
                "name": "ModelVehiclePolicy.php",
                "fullPath": "app/Policies/ModelVehiclePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 79,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\ModelVehicle;\n\nclass ModelVehiclePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, ModelVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, ModelVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, ModelVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, ModelVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, ModelVehicle $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "GUSSPsJ6PhzoGHrpCfbb6IuiBpnoJADO.json"
            },
            "item_80": {
                "path": "database/factories",
                "name": "TypeVehicleFactory.php",
                "fullPath": "database/factories/TypeVehicleFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 80,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\TypeVehicle;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TypeVehicleFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = TypeVehicle::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'battery_capacity' => fake()->numberBetween(1, 2),\n            'type_charger' => fake()->word(),\n            'model_vehicle_id' => \\App\\Models\\ModelVehicle::factory(),\n        ];\n    }\n}\n"
            },
            "item_81": {
                "path": "database/seeders",
                "name": "TypeVehicleSeeder.php",
                "fullPath": "database/seeders/TypeVehicleSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 81,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\TypeVehicle;\nuse Illuminate\\Database\\Seeder;\n\nclass TypeVehicleSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        TypeVehicle::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_82": {
                "path": "app/Policies",
                "name": "TypeVehiclePolicy.php",
                "fullPath": "app/Policies/TypeVehiclePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 82,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\TypeVehicle;\n\nclass TypeVehiclePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, TypeVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, TypeVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, TypeVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, TypeVehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, TypeVehicle $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "AkVkLjsAsV6XOcdpfwq5lj0eBGoNQxt0.json"
            },
            "item_83": {
                "path": "database/factories",
                "name": "VehicleFactory.php",
                "fullPath": "database/factories/VehicleFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 83,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Vehicle;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass VehicleFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Vehicle::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'image' => fake()->word(),\n            'license_plate' => fake()->name(),\n            'ownership' => fake()->date(),\n            'status' => fake()->numberBetween(1, 2),\n            'deleted_at' => fake()->dateTime(),\n            'brand_vehicle_id' => \\App\\Models\\BrandVehicle::factory(),\n            'model_vehicle_id' => \\App\\Models\\ModelVehicle::factory(),\n            'type_vehicle_id' => \\App\\Models\\TypeVehicle::factory(),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n"
            },
            "item_84": {
                "path": "database/seeders",
                "name": "VehicleSeeder.php",
                "fullPath": "database/seeders/VehicleSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 84,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Vehicle;\nuse Illuminate\\Database\\Seeder;\n\nclass VehicleSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Vehicle::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_85": {
                "path": "app/Policies",
                "name": "VehiclePolicy.php",
                "fullPath": "app/Policies/VehiclePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 85,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Vehicle;\n\nclass VehiclePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Vehicle $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "E4DZdmWP3qugxMItHA9q50JPeG8K1C6z.json"
            },
            "item_86": {
                "path": "database/factories",
                "name": "ChargerFactory.php",
                "fullPath": "database/factories/ChargerFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 86,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Charger;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ChargerFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Charger::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'unit' => fake()->numberBetween(1, 2),\n            'deleted_at' => fake()->dateTime(),\n            'current_charger_id' => \\App\\Models\\CurrentCharger::factory(),\n            'type_charger_id' => \\App\\Models\\TypeCharger::factory(),\n            'power_charger_id' => \\App\\Models\\PowerCharger::factory(),\n            'charger_location_id' => \\App\\Models\\ChargerLocation::factory(),\n        ];\n    }\n}\n"
            },
            "item_87": {
                "path": "database/seeders",
                "name": "ChargerSeeder.php",
                "fullPath": "database/seeders/ChargerSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 87,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Charger;\nuse Illuminate\\Database\\Seeder;\n\nclass ChargerSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Charger::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_88": {
                "path": "app/Policies",
                "name": "ChargerPolicy.php",
                "fullPath": "app/Policies/ChargerPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 88,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Charger;\n\nclass ChargerPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Charger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Charger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Charger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Charger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Charger $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_89": {
                "path": "database/factories",
                "name": "PowerChargerFactory.php",
                "fullPath": "database/factories/PowerChargerFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 89,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\PowerCharger;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass PowerChargerFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = PowerCharger::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'type_charger_id' => \\App\\Models\\TypeCharger::factory(),\n        ];\n    }\n}\n"
            },
            "item_90": {
                "path": "database/seeders",
                "name": "PowerChargerSeeder.php",
                "fullPath": "database/seeders/PowerChargerSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 90,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\PowerCharger;\nuse Illuminate\\Database\\Seeder;\n\nclass PowerChargerSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        PowerCharger::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_91": {
                "path": "app/Policies",
                "name": "PowerChargerPolicy.php",
                "fullPath": "app/Policies/PowerChargerPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 91,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\PowerCharger;\n\nclass PowerChargerPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, PowerCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, PowerCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, PowerCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, PowerCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, PowerCharger $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "lJHSyg7INcilkmChbv7E6DVGEPu9HuVf.json"
            },
            "item_92": {
                "path": "database/factories",
                "name": "CurrentChargerFactory.php",
                "fullPath": "database/factories/CurrentChargerFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 92,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\CurrentCharger;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CurrentChargerFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = CurrentCharger::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n        ];\n    }\n}\n"
            },
            "item_93": {
                "path": "database/seeders",
                "name": "CurrentChargerSeeder.php",
                "fullPath": "database/seeders/CurrentChargerSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 93,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\CurrentCharger;\nuse Illuminate\\Database\\Seeder;\n\nclass CurrentChargerSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        CurrentCharger::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_94": {
                "path": "app/Policies",
                "name": "CurrentChargerPolicy.php",
                "fullPath": "app/Policies/CurrentChargerPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 94,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\CurrentCharger;\n\nclass CurrentChargerPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, CurrentCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, CurrentCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, CurrentCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, CurrentCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, CurrentCharger $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "IoutDoihSXgylcikyQZKsgQy5nUljkOe.json"
            },
            "item_95": {
                "path": "database/factories",
                "name": "TypeChargerFactory.php",
                "fullPath": "database/factories/TypeChargerFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 95,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\TypeCharger;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TypeChargerFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = TypeCharger::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'current_charger_id' => \\App\\Models\\CurrentCharger::factory(),\n        ];\n    }\n}\n"
            },
            "item_96": {
                "path": "database/seeders",
                "name": "TypeChargerSeeder.php",
                "fullPath": "database/seeders/TypeChargerSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 96,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\TypeCharger;\nuse Illuminate\\Database\\Seeder;\n\nclass TypeChargerSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        TypeCharger::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_97": {
                "path": "app/Policies",
                "name": "TypeChargerPolicy.php",
                "fullPath": "app/Policies/TypeChargerPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 97,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\TypeCharger;\n\nclass TypeChargerPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, TypeCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, TypeCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, TypeCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, TypeCharger $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, TypeCharger $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "rONRwCTM7B9wPwyhP3YksAOKFLwrVRok.json"
            },
            "item_98": {
                "path": "database/factories",
                "name": "ChargeFactory.php",
                "fullPath": "database/factories/ChargeFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 98,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Charge;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ChargeFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Charge::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'date' => fake()->date(),\n            'km_now' => fake()->randomNumber(),\n            'km_before' => fake()->randomNumber(),\n            'start_charging_now' => fake()->randomNumber(),\n            'finish_charging_now' => fake()->randomNumber(),\n            'finish_charging_before' => fake()->randomNumber(),\n            'parking' => fake()->randomNumber(),\n            'kWh' => fake()->randomFloat(0, 9999),\n            'street_lighting_tax' => fake()->randomNumber(),\n            'value_added_tax' => fake()->randomNumber(),\n            'admin_cost' => fake()->randomNumber(),\n            'total_cost' => fake()->randomNumber(),\n            'image' => fake()->optional(),\n            'deleted_at' => fake()->dateTime(),\n            'vehicle_id' => \\App\\Models\\Vehicle::factory(),\n            'charger_location_id' => \\App\\Models\\ChargerLocation::factory(),\n            'user_id' => \\App\\Models\\User::factory(),\n            'charger_id' => \\App\\Models\\Charger::factory(),\n        ];\n    }\n}\n"
            },
            "item_99": {
                "path": "database/seeders",
                "name": "ChargeSeeder.php",
                "fullPath": "database/seeders/ChargeSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 99,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Charge;\nuse Illuminate\\Database\\Seeder;\n\nclass ChargeSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Charge::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_100": {
                "path": "app/Policies",
                "name": "ChargePolicy.php",
                "fullPath": "app/Policies/ChargePolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 100,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Charge;\n\nclass ChargePolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Charge $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Charge $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Charge $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Charge $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Charge $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "mOepmfDRCnYWApNo2AfOPqTSS9kzjXfy.json"
            },
            "item_101": {
                "path": "database/factories",
                "name": "StateOfHealthFactory.php",
                "fullPath": "database/factories/StateOfHealthFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 101,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\StateOfHealth;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass StateOfHealthFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = StateOfHealth::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'image' => fake()->optional(),\n            'date' => fake()->date(),\n            'km' => fake()->randomNumber(),\n            'percentage' => fake()->randomNumber(),\n            'remaining_battery' => fake()->randomNumber(),\n            'deleted_at' => fake()->dateTime(),\n            'vehicle_id' => \\App\\Models\\Vehicle::factory(),\n            'user_id' => \\App\\Models\\User::factory(),\n        ];\n    }\n}\n"
            },
            "item_102": {
                "path": "database/seeders",
                "name": "StateOfHealthSeeder.php",
                "fullPath": "database/seeders/StateOfHealthSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 102,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\StateOfHealth;\nuse Illuminate\\Database\\Seeder;\n\nclass StateOfHealthSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        StateOfHealth::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_103": {
                "path": "app/Policies",
                "name": "StateOfHealthPolicy.php",
                "fullPath": "app/Policies/StateOfHealthPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 103,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\StateOfHealth;\n\nclass StateOfHealthPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, StateOfHealth $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, StateOfHealth $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, StateOfHealth $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, StateOfHealth $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, StateOfHealth $model): bool\n    {\n        return true;\n    }\n}\n",
                "conflictFileName": "hZNighC508M5CVl4BCPaPvNQsT01dmiI.json"
            },
            "item_104": {
                "path": "app/Filament/Resources/Panel",
                "name": "ProviderResource.php",
                "fullPath": "app/Filament/Resources/Panel/ProviderResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 104,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse App\\Models\\Provider;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\ProviderResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ProviderResource\\RelationManagers;\n\nclass ProviderResource extends Resource\n{\n    protected static ?string $model = Provider::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Chargers';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.providers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.providers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.providers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    TextInput::make('name')\n                        ->required()\n                        ->string(),\n\n                    TextInput::make('contact')\n                        ->nullable()\n                        ->string(),\n\n                    TextInput::make('address')\n                        ->nullable()\n                        ->string(),\n\n                    Select::make('province_id')\n                        ->nullable()\n                        ->relationship('province', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('city_id')\n                        ->nullable()\n                        ->relationship('city', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('district_id')\n                        ->nullable()\n                        ->relationship('district', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('subdistrict_id')\n                        ->nullable()\n                        ->relationship('subdistrict', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('postal_code_id')\n                        ->nullable()\n                        ->relationship('postalCode', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'active',\n                            '2' => 'inactive',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('name'),\n\n                TextColumn::make('contact'),\n\n                TextColumn::make('address'),\n\n                TextColumn::make('province.name'),\n\n                TextColumn::make('city.name'),\n\n                TextColumn::make('district.name'),\n\n                TextColumn::make('subdistrict.name'),\n\n                TextColumn::make('postalCode.name'),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListProviders::route('/'),\n            'create' => Pages\\CreateProvider::route('/create'),\n            'view' => Pages\\ViewProvider::route('/{record}'),\n            'edit' => Pages\\EditProvider::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "vLVH1lhIs5BmPMF6kJodSnyJr5ZnacAV.json"
            },
            "item_105": {
                "path": "app/Filament/Resources/Panel/ProviderResource/Pages",
                "name": "CreateProvider.php",
                "fullPath": "app/Filament/Resources/Panel/ProviderResource/Pages/CreateProvider.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 105,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ProviderResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\ProviderResource;\n\nclass CreateProvider extends CreateRecord\n{\n    protected static string $resource = ProviderResource::class;\n}\n"
            },
            "item_106": {
                "path": "app/Filament/Resources/Panel/ProviderResource/Pages",
                "name": "ViewProvider.php",
                "fullPath": "app/Filament/Resources/Panel/ProviderResource/Pages/ViewProvider.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 106,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ProviderResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\ProviderResource;\n\nclass ViewProvider extends ViewRecord\n{\n    protected static string $resource = ProviderResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_107": {
                "path": "app/Filament/Resources/Panel/ProviderResource/Pages",
                "name": "EditProvider.php",
                "fullPath": "app/Filament/Resources/Panel/ProviderResource/Pages/EditProvider.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 107,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ProviderResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\ProviderResource;\n\nclass EditProvider extends EditRecord\n{\n    protected static string $resource = ProviderResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_108": {
                "path": "app/Filament/Resources/Panel/ProviderResource/Pages",
                "name": "ListProviders.php",
                "fullPath": "app/Filament/Resources/Panel/ProviderResource/Pages/ListProviders.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 108,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ProviderResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\ProviderResource;\n\nclass ListProviders extends ListRecords\n{\n    protected static string $resource = ProviderResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_109": {
                "path": "app/Filament/Resources/Panel",
                "name": "ChargerLocationResource.php",
                "fullPath": "app/Filament/Resources/Panel/ChargerLocationResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 109,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\ChargerLocation;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\Checkbox;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Forms\\Components\\RichEditor;\nuse Filament\\Tables\\Columns\\CheckboxColumn;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse App\\Filament\\Resources\\Panel\\ChargerLocationResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ChargerLocationResource\\RelationManagers;\n\nclass ChargerLocationResource extends Resource\n{\n    protected static ?string $model = ChargerLocation::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 3;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.chargerLocations.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.chargerLocations.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.chargerLocations.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    TextInput::make('name')\n                        ->required()\n                        ->string(),\n\n                    Select::make('provider_id')\n                        ->required()\n                        ->relationship('provider', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('latitude')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('longitude')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1),\n\n                    Checkbox::make('parking')\n                        ->rules(['boolean'])\n                        ->required()\n                        ->inline(),\n\n                    TextInput::make('address')\n                        ->nullable()\n                        ->string(),\n\n                    Select::make('province_id')\n                        ->required()\n                        ->relationship('province', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('city_id')\n                        ->required()\n                        ->relationship('city', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('district_id')\n                        ->nullable()\n                        ->relationship('district', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('subdistrict_id')\n                        ->nullable()\n                        ->relationship('subdistrict', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('postal_code_id')\n                        ->nullable()\n                        ->relationship('postalCode', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'not verified',\n                            '2' => 'verified',\n                            '3' => 'closed',\n                        ]),\n\n                    Select::make('location_on')\n                        ->required()\n                        ->default('1')\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'public',\n                            '2' => 'private',\n                            '3' => 'dealer',\n                            '4' => 'closed',\n                        ]),\n\n                    RichEditor::make('description')\n                        ->nullable()\n                        ->string()\n                        ->fileAttachmentsVisibility('public'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('name'),\n\n                TextColumn::make('provider.name'),\n\n                TextColumn::make('latitude'),\n\n                TextColumn::make('longitude'),\n\n                CheckboxColumn::make('parking'),\n\n                TextColumn::make('address'),\n\n                TextColumn::make('province.name'),\n\n                TextColumn::make('city.name'),\n\n                TextColumn::make('status'),\n\n                TextColumn::make('location_on'),\n\n                TextColumn::make('user.name'),\n            ])\n            ->filters([Tables\\Filters\\TrashedFilter::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\ForceDeleteBulkAction::make(),\n                    Tables\\Actions\\RestoreBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListChargerLocations::route('/'),\n            'create' => Pages\\CreateChargerLocation::route('/create'),\n            'view' => Pages\\ViewChargerLocation::route('/{record}'),\n            'edit' => Pages\\EditChargerLocation::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getEloquentQuery(): Builder\n    {\n        return parent::getEloquentQuery()->withoutGlobalScopes([\n            SoftDeletingScope::class,\n        ]);\n    }\n}\n",
                "conflictFileName": "t4eoNNpBZFDYcNGE4kqP7A5s64Xf7rLS.json"
            },
            "item_110": {
                "path": "app/Filament/Resources/Panel/ChargerLocationResource/Pages",
                "name": "CreateChargerLocation.php",
                "fullPath": "app/Filament/Resources/Panel/ChargerLocationResource/Pages/CreateChargerLocation.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 110,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ChargerLocationResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\ChargerLocationResource;\n\nclass CreateChargerLocation extends CreateRecord\n{\n    protected static string $resource = ChargerLocationResource::class;\n}\n",
                "conflictFileName": "BDZOp3iHDeivy3cd0F8F3oy7LC9pkvtI.json"
            },
            "item_111": {
                "path": "app/Filament/Resources/Panel/ChargerLocationResource/Pages",
                "name": "ViewChargerLocation.php",
                "fullPath": "app/Filament/Resources/Panel/ChargerLocationResource/Pages/ViewChargerLocation.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 111,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ChargerLocationResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\ChargerLocationResource;\n\nclass ViewChargerLocation extends ViewRecord\n{\n    protected static string $resource = ChargerLocationResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_112": {
                "path": "app/Filament/Resources/Panel/ChargerLocationResource/Pages",
                "name": "EditChargerLocation.php",
                "fullPath": "app/Filament/Resources/Panel/ChargerLocationResource/Pages/EditChargerLocation.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 112,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ChargerLocationResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\ChargerLocationResource;\n\nclass EditChargerLocation extends EditRecord\n{\n    protected static string $resource = ChargerLocationResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_113": {
                "path": "app/Filament/Resources/Panel/ChargerLocationResource/Pages",
                "name": "ListChargerLocations.php",
                "fullPath": "app/Filament/Resources/Panel/ChargerLocationResource/Pages/ListChargerLocations.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 113,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ChargerLocationResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\ChargerLocationResource;\n\nclass ListChargerLocations extends ListRecords\n{\n    protected static string $resource = ChargerLocationResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n",
                "conflictFileName": "Y3a6BbR9WigYx55BSrHicTdn8SJsCQyx.json"
            },
            "item_119": {
                "path": "app/Filament/Resources/Panel",
                "name": "BrandVehicleResource.php",
                "fullPath": "app/Filament/Resources/Panel/BrandVehicleResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 119,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\BrandVehicle;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\BrandVehicleResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\BrandVehicleResource\\RelationManagers;\n\nclass BrandVehicleResource extends Resource\n{\n    protected static ?string $model = BrandVehicle::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Vehicles';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.brandVehicles.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.brandVehicles.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.brandVehicles.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [RelationManagers\\ModelVehiclesRelationManager::class];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListBrandVehicles::route('/'),\n            'create' => Pages\\CreateBrandVehicle::route('/create'),\n            'view' => Pages\\ViewBrandVehicle::route('/{record}'),\n            'edit' => Pages\\EditBrandVehicle::route('/{record}/edit'),\n        ];\n    }\n}\n"
            },
            "item_120": {
                "path": "app/Filament/Resources/Panel/BrandVehicleResource/Pages",
                "name": "CreateBrandVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/BrandVehicleResource/Pages/CreateBrandVehicle.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 120,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\BrandVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\BrandVehicleResource;\n\nclass CreateBrandVehicle extends CreateRecord\n{\n    protected static string $resource = BrandVehicleResource::class;\n}\n"
            },
            "item_121": {
                "path": "app/Filament/Resources/Panel/BrandVehicleResource/Pages",
                "name": "ViewBrandVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/BrandVehicleResource/Pages/ViewBrandVehicle.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 121,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\BrandVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\BrandVehicleResource;\n\nclass ViewBrandVehicle extends ViewRecord\n{\n    protected static string $resource = BrandVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_122": {
                "path": "app/Filament/Resources/Panel/BrandVehicleResource/Pages",
                "name": "EditBrandVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/BrandVehicleResource/Pages/EditBrandVehicle.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 122,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\BrandVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\BrandVehicleResource;\n\nclass EditBrandVehicle extends EditRecord\n{\n    protected static string $resource = BrandVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_123": {
                "path": "app/Filament/Resources/Panel/BrandVehicleResource/Pages",
                "name": "ListBrandVehicles.php",
                "fullPath": "app/Filament/Resources/Panel/BrandVehicleResource/Pages/ListBrandVehicles.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 123,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\BrandVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\BrandVehicleResource;\n\nclass ListBrandVehicles extends ListRecords\n{\n    protected static string $resource = BrandVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_124": {
                "path": "app/Filament/Resources/Panel",
                "name": "ModelVehicleResource.php",
                "fullPath": "app/Filament/Resources/Panel/ModelVehicleResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 124,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\ModelVehicle;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource\\RelationManagers;\n\nclass ModelVehicleResource extends Resource\n{\n    protected static ?string $model = ModelVehicle::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Vehicles';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.modelVehicles.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.modelVehicles.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.modelVehicles.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('brand_vehicle_id')\n                        ->required()\n                        ->relationship('brandVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('brandVehicle.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListModelVehicles::route('/'),\n            'create' => Pages\\CreateModelVehicle::route('/create'),\n            'view' => Pages\\ViewModelVehicle::route('/{record}'),\n            'edit' => Pages\\EditModelVehicle::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "PMPwLEn6FqH1ZDvJp9PO3RNCwVxWTb6t.json"
            },
            "item_125": {
                "path": "app/Filament/Resources/Panel/ModelVehicleResource/Pages",
                "name": "CreateModelVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/ModelVehicleResource/Pages/CreateModelVehicle.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 125,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ModelVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource;\n\nclass CreateModelVehicle extends CreateRecord\n{\n    protected static string $resource = ModelVehicleResource::class;\n}\n"
            },
            "item_126": {
                "path": "app/Filament/Resources/Panel/ModelVehicleResource/Pages",
                "name": "ViewModelVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/ModelVehicleResource/Pages/ViewModelVehicle.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 126,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ModelVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource;\n\nclass ViewModelVehicle extends ViewRecord\n{\n    protected static string $resource = ModelVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_127": {
                "path": "app/Filament/Resources/Panel/ModelVehicleResource/Pages",
                "name": "EditModelVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/ModelVehicleResource/Pages/EditModelVehicle.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 127,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ModelVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource;\n\nclass EditModelVehicle extends EditRecord\n{\n    protected static string $resource = ModelVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_128": {
                "path": "app/Filament/Resources/Panel/ModelVehicleResource/Pages",
                "name": "ListModelVehicles.php",
                "fullPath": "app/Filament/Resources/Panel/ModelVehicleResource/Pages/ListModelVehicles.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 128,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ModelVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource;\n\nclass ListModelVehicles extends ListRecords\n{\n    protected static string $resource = ModelVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_129": {
                "path": "app/Filament/Resources/Panel",
                "name": "TypeVehicleResource.php",
                "fullPath": "app/Filament/Resources/Panel/TypeVehicleResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 129,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\TypeVehicle;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\TypeVehicleResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\TypeVehicleResource\\RelationManagers;\n\nclass TypeVehicleResource extends Resource\n{\n    protected static ?string $model = TypeVehicle::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Vehicles';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.typeVehicles.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.typeVehicles.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.typeVehicles.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('model_vehicle_id')\n                        ->required()\n                        ->relationship('modelVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('battery_capacity')\n                        ->required()\n                        ->numeric()\n                        ->step(0)\n                        ->suffix('kWh')\n                        ->inputMode('decimal'),\n\n                    Select::make('type_charger')\n                        ->required()\n                        ->multiple()\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'CCS2',\n                            '2' => 'Chademo',\n                            '3' => 'DC GBT',\n                            '4' => 'Type 2',\n                            '5' => 'AC GBT',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('modelVehicle.name'),\n\n                TextColumn::make('battery_capacity'),\n\n                TextColumn::make('type_charger'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTypeVehicles::route('/'),\n            'create' => Pages\\CreateTypeVehicle::route('/create'),\n            'view' => Pages\\ViewTypeVehicle::route('/{record}'),\n            'edit' => Pages\\EditTypeVehicle::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "Pa39JP0GzgL3zJGdw5NwZLtlGdhASCkg.json"
            },
            "item_130": {
                "path": "app/Filament/Resources/Panel/TypeVehicleResource/Pages",
                "name": "CreateTypeVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/TypeVehicleResource/Pages/CreateTypeVehicle.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 130,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\TypeVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\TypeVehicleResource;\n\nclass CreateTypeVehicle extends CreateRecord\n{\n    protected static string $resource = TypeVehicleResource::class;\n}\n"
            },
            "item_131": {
                "path": "app/Filament/Resources/Panel/TypeVehicleResource/Pages",
                "name": "ViewTypeVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/TypeVehicleResource/Pages/ViewTypeVehicle.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 131,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\TypeVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\TypeVehicleResource;\n\nclass ViewTypeVehicle extends ViewRecord\n{\n    protected static string $resource = TypeVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_132": {
                "path": "app/Filament/Resources/Panel/TypeVehicleResource/Pages",
                "name": "EditTypeVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/TypeVehicleResource/Pages/EditTypeVehicle.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 132,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\TypeVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\TypeVehicleResource;\n\nclass EditTypeVehicle extends EditRecord\n{\n    protected static string $resource = TypeVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_133": {
                "path": "app/Filament/Resources/Panel/TypeVehicleResource/Pages",
                "name": "ListTypeVehicles.php",
                "fullPath": "app/Filament/Resources/Panel/TypeVehicleResource/Pages/ListTypeVehicles.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 133,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\TypeVehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\TypeVehicleResource;\n\nclass ListTypeVehicles extends ListRecords\n{\n    protected static string $resource = TypeVehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_134": {
                "path": "app/Filament/Resources/Panel",
                "name": "VehicleResource.php",
                "fullPath": "app/Filament/Resources/Panel/VehicleResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 134,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse App\\Models\\Vehicle;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse App\\Filament\\Resources\\Panel\\VehicleResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\VehicleResource\\RelationManagers;\n\nclass VehicleResource extends Resource\n{\n    protected static ?string $model = Vehicle::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.vehicles.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.vehicles.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.vehicles.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('license_plate')\n                        ->string()\n                        ->required(),\n\n                    Select::make('brand_vehicle_id')\n                        ->required()\n                        ->relationship('brandVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('model_vehicle_id')\n                        ->required()\n                        ->relationship('modelVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('type_vehicle_id')\n                        ->nullable()\n                        ->relationship('typeVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('ownership')\n                        ->rules(['date'])\n                        ->nullable()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->default('1')\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'active',\n                            '2' => 'inactive',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('license_plate'),\n\n                TextColumn::make('brandVehicle.name'),\n\n                TextColumn::make('modelVehicle.name'),\n\n                TextColumn::make('typeVehicle.name'),\n\n                TextColumn::make('ownership')->since(),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([Tables\\Filters\\TrashedFilter::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\ForceDeleteBulkAction::make(),\n                    Tables\\Actions\\RestoreBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListVehicles::route('/'),\n            'create' => Pages\\CreateVehicle::route('/create'),\n            'view' => Pages\\ViewVehicle::route('/{record}'),\n            'edit' => Pages\\EditVehicle::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getEloquentQuery(): Builder\n    {\n        return parent::getEloquentQuery()->withoutGlobalScopes([\n            SoftDeletingScope::class,\n        ]);\n    }\n}\n",
                "conflictFileName": "xDq4glHEAm2cb2bvhJMtYDoEi17ROcix.json"
            },
            "item_135": {
                "path": "app/Filament/Resources/Panel/VehicleResource/Pages",
                "name": "CreateVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/VehicleResource/Pages/CreateVehicle.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 135,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\VehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\VehicleResource;\n\nclass CreateVehicle extends CreateRecord\n{\n    protected static string $resource = VehicleResource::class;\n}\n",
                "conflictFileName": "KObQxKEMiQI74riLtTmNNLuEdBh2Q5ZL.json"
            },
            "item_136": {
                "path": "app/Filament/Resources/Panel/VehicleResource/Pages",
                "name": "ViewVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/VehicleResource/Pages/ViewVehicle.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 136,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\VehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\VehicleResource;\n\nclass ViewVehicle extends ViewRecord\n{\n    protected static string $resource = VehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_137": {
                "path": "app/Filament/Resources/Panel/VehicleResource/Pages",
                "name": "EditVehicle.php",
                "fullPath": "app/Filament/Resources/Panel/VehicleResource/Pages/EditVehicle.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 137,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\VehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\VehicleResource;\n\nclass EditVehicle extends EditRecord\n{\n    protected static string $resource = VehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_138": {
                "path": "app/Filament/Resources/Panel/VehicleResource/Pages",
                "name": "ListVehicles.php",
                "fullPath": "app/Filament/Resources/Panel/VehicleResource/Pages/ListVehicles.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 138,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\VehicleResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\VehicleResource;\n\nclass ListVehicles extends ListRecords\n{\n    protected static string $resource = VehicleResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_144": {
                "path": "app/Filament/Resources/Panel",
                "name": "PowerChargerResource.php",
                "fullPath": "app/Filament/Resources/Panel/PowerChargerResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 144,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\PowerCharger;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\PowerChargerResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\PowerChargerResource\\RelationManagers;\n\nclass PowerChargerResource extends Resource\n{\n    protected static ?string $model = PowerCharger::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 3;\n\n    protected static ?string $navigationGroup = 'Chargers';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.powerChargers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.powerChargers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.powerChargers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('type_charger_id')\n                        ->required()\n                        ->relationship('typeCharger', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('typeCharger.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListPowerChargers::route('/'),\n            'create' => Pages\\CreatePowerCharger::route('/create'),\n            'view' => Pages\\ViewPowerCharger::route('/{record}'),\n            'edit' => Pages\\EditPowerCharger::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "1ibPGWPnIgwHbb1R7YARkwqPPdGJwj4F.json"
            },
            "item_145": {
                "path": "app/Filament/Resources/Panel/PowerChargerResource/Pages",
                "name": "CreatePowerCharger.php",
                "fullPath": "app/Filament/Resources/Panel/PowerChargerResource/Pages/CreatePowerCharger.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 145,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\PowerChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\PowerChargerResource;\n\nclass CreatePowerCharger extends CreateRecord\n{\n    protected static string $resource = PowerChargerResource::class;\n}\n"
            },
            "item_146": {
                "path": "app/Filament/Resources/Panel/PowerChargerResource/Pages",
                "name": "ViewPowerCharger.php",
                "fullPath": "app/Filament/Resources/Panel/PowerChargerResource/Pages/ViewPowerCharger.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 146,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\PowerChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\PowerChargerResource;\n\nclass ViewPowerCharger extends ViewRecord\n{\n    protected static string $resource = PowerChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_147": {
                "path": "app/Filament/Resources/Panel/PowerChargerResource/Pages",
                "name": "EditPowerCharger.php",
                "fullPath": "app/Filament/Resources/Panel/PowerChargerResource/Pages/EditPowerCharger.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 147,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:52",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\PowerChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\PowerChargerResource;\n\nclass EditPowerCharger extends EditRecord\n{\n    protected static string $resource = PowerChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_148": {
                "path": "app/Filament/Resources/Panel/PowerChargerResource/Pages",
                "name": "ListPowerChargers.php",
                "fullPath": "app/Filament/Resources/Panel/PowerChargerResource/Pages/ListPowerChargers.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 148,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\PowerChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\PowerChargerResource;\n\nclass ListPowerChargers extends ListRecords\n{\n    protected static string $resource = PowerChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_149": {
                "path": "app/Filament/Resources/Panel",
                "name": "CurrentChargerResource.php",
                "fullPath": "app/Filament/Resources/Panel/CurrentChargerResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 149,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\CurrentCharger;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\CurrentChargerResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\CurrentChargerResource\\RelationManagers;\n\nclass CurrentChargerResource extends Resource\n{\n    protected static ?string $model = CurrentCharger::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 3;\n\n    protected static ?string $navigationGroup = 'Chargers';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.currentChargers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.currentChargers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.currentChargers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([TextColumn::make('name')])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCurrentChargers::route('/'),\n            'create' => Pages\\CreateCurrentCharger::route('/create'),\n            'view' => Pages\\ViewCurrentCharger::route('/{record}'),\n            'edit' => Pages\\EditCurrentCharger::route('/{record}/edit'),\n        ];\n    }\n}\n"
            },
            "item_150": {
                "path": "app/Filament/Resources/Panel/CurrentChargerResource/Pages",
                "name": "CreateCurrentCharger.php",
                "fullPath": "app/Filament/Resources/Panel/CurrentChargerResource/Pages/CreateCurrentCharger.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 150,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\CurrentChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\CurrentChargerResource;\n\nclass CreateCurrentCharger extends CreateRecord\n{\n    protected static string $resource = CurrentChargerResource::class;\n}\n"
            },
            "item_151": {
                "path": "app/Filament/Resources/Panel/CurrentChargerResource/Pages",
                "name": "ViewCurrentCharger.php",
                "fullPath": "app/Filament/Resources/Panel/CurrentChargerResource/Pages/ViewCurrentCharger.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 151,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\CurrentChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\CurrentChargerResource;\n\nclass ViewCurrentCharger extends ViewRecord\n{\n    protected static string $resource = CurrentChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_152": {
                "path": "app/Filament/Resources/Panel/CurrentChargerResource/Pages",
                "name": "EditCurrentCharger.php",
                "fullPath": "app/Filament/Resources/Panel/CurrentChargerResource/Pages/EditCurrentCharger.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 152,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\CurrentChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\CurrentChargerResource;\n\nclass EditCurrentCharger extends EditRecord\n{\n    protected static string $resource = CurrentChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_153": {
                "path": "app/Filament/Resources/Panel/CurrentChargerResource/Pages",
                "name": "ListCurrentChargers.php",
                "fullPath": "app/Filament/Resources/Panel/CurrentChargerResource/Pages/ListCurrentChargers.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 153,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\CurrentChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\CurrentChargerResource;\n\nclass ListCurrentChargers extends ListRecords\n{\n    protected static string $resource = CurrentChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_154": {
                "path": "app/Filament/Resources/Panel",
                "name": "TypeChargerResource.php",
                "fullPath": "app/Filament/Resources/Panel/TypeChargerResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 154,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\TypeCharger;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Radio;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource\\RelationManagers;\n\nclass TypeChargerResource extends Resource\n{\n    protected static ?string $model = TypeCharger::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 3;\n\n    protected static ?string $navigationGroup = 'Chargers';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.typeChargers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.typeChargers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.typeChargers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Radio::make('name')\n                        ->required()\n                        ->options([\n                            'AC' => 'AC',\n                            'DC' => 'DC',\n                        ])\n                        ->inlineLabel(),\n\n                    Select::make('current_charger_id')\n                        ->required()\n                        ->relationship('currentCharger', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('currentCharger.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTypeChargers::route('/'),\n            'create' => Pages\\CreateTypeCharger::route('/create'),\n            'view' => Pages\\ViewTypeCharger::route('/{record}'),\n            'edit' => Pages\\EditTypeCharger::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "oyaS2L8f7PiiIEeIG78xH3sVLu3oGbA9.json"
            },
            "item_155": {
                "path": "app/Filament/Resources/Panel/TypeChargerResource/Pages",
                "name": "CreateTypeCharger.php",
                "fullPath": "app/Filament/Resources/Panel/TypeChargerResource/Pages/CreateTypeCharger.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 155,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\TypeChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource;\n\nclass CreateTypeCharger extends CreateRecord\n{\n    protected static string $resource = TypeChargerResource::class;\n}\n"
            },
            "item_156": {
                "path": "app/Filament/Resources/Panel/TypeChargerResource/Pages",
                "name": "ViewTypeCharger.php",
                "fullPath": "app/Filament/Resources/Panel/TypeChargerResource/Pages/ViewTypeCharger.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 156,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\TypeChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource;\n\nclass ViewTypeCharger extends ViewRecord\n{\n    protected static string $resource = TypeChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_157": {
                "path": "app/Filament/Resources/Panel/TypeChargerResource/Pages",
                "name": "EditTypeCharger.php",
                "fullPath": "app/Filament/Resources/Panel/TypeChargerResource/Pages/EditTypeCharger.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 157,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\TypeChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource;\n\nclass EditTypeCharger extends EditRecord\n{\n    protected static string $resource = TypeChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_158": {
                "path": "app/Filament/Resources/Panel/TypeChargerResource/Pages",
                "name": "ListTypeChargers.php",
                "fullPath": "app/Filament/Resources/Panel/TypeChargerResource/Pages/ListTypeChargers.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 158,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\TypeChargerResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource;\n\nclass ListTypeChargers extends ListRecords\n{\n    protected static string $resource = TypeChargerResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_159": {
                "path": "app/Filament/Resources/Panel",
                "name": "ChargeResource.php",
                "fullPath": "app/Filament/Resources/Panel/ChargeResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 159,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\Charge;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse App\\Filament\\Resources\\Panel\\ChargeResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ChargeResource\\RelationManagers;\n\nclass ChargeResource extends Resource\n{\n    protected static ?string $model = Charge::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.charges.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.charges.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.charges.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('vehicle_id')\n                        ->required()\n                        ->relationship('vehicle', 'id')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    Select::make('charger_location_id')\n                        ->required()\n                        ->relationship('chargerLocation', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('charger_id')\n                        ->required()\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('km_now')\n                        ->required()\n                        ->numeric()\n                        ->step()\n                        ->suffix('km'),\n\n                    TextInput::make('km_before')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('km'),\n\n                    TextInput::make('start_charging_now')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('%'),\n\n                    TextInput::make('finish_charging_now')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('%'),\n\n                    TextInput::make('finish_charging_before')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('%'),\n\n                    TextInput::make('parking')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->prefix('Rp'),\n\n                    TextInput::make('kWh')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('kWh'),\n\n                    TextInput::make('street_lighting_tax')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->prefix('Rp'),\n\n                    TextInput::make('value_added_tax')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->prefix('Rp'),\n\n                    TextInput::make('admin_cost')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->prefix('Rp'),\n\n                    TextInput::make('total_cost')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->prefix('Rp'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('vehicle.id'),\n\n                TextColumn::make('date')->since(),\n\n                TextColumn::make('chargerLocation.name'),\n\n                TextColumn::make('charger_id'),\n\n                TextColumn::make('km_now')->numeric(thousandsSeparator: '.'),\n\n                TextColumn::make('km_before'),\n\n                TextColumn::make('start_charging_now'),\n\n                TextColumn::make('finish_charging_now'),\n\n                TextColumn::make('finish_charging_before'),\n\n                TextColumn::make('parking')->numeric(thousandsSeparator: '.'),\n\n                TextColumn::make('kWh')->numeric(\n                    decimalPlaces: 2,\n                    decimalSeparator: ',',\n                    thousandsSeparator: '.'\n                ),\n\n                TextColumn::make('street_lighting_tax')->numeric(\n                    thousandsSeparator: '.'\n                ),\n\n                TextColumn::make('value_added_tax')->numeric(\n                    thousandsSeparator: '.'\n                ),\n\n                TextColumn::make('admin_cost')->numeric(\n                    thousandsSeparator: '.'\n                ),\n\n                TextColumn::make('total_cost')->numeric(\n                    thousandsSeparator: '.'\n                ),\n\n                TextColumn::make('user.name'),\n            ])\n            ->filters([Tables\\Filters\\TrashedFilter::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\ForceDeleteBulkAction::make(),\n                    Tables\\Actions\\RestoreBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListCharges::route('/'),\n            'create' => Pages\\CreateCharge::route('/create'),\n            'view' => Pages\\ViewCharge::route('/{record}'),\n            'edit' => Pages\\EditCharge::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getEloquentQuery(): Builder\n    {\n        return parent::getEloquentQuery()->withoutGlobalScopes([\n            SoftDeletingScope::class,\n        ]);\n    }\n}\n",
                "conflictFileName": "w6rNj1s4Bpdzv3LPrIvhEj6kloiOCHQk.json"
            },
            "item_160": {
                "path": "app/Filament/Resources/Panel/ChargeResource/Pages",
                "name": "CreateCharge.php",
                "fullPath": "app/Filament/Resources/Panel/ChargeResource/Pages/CreateCharge.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 160,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ChargeResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\ChargeResource;\n\nclass CreateCharge extends CreateRecord\n{\n    protected static string $resource = ChargeResource::class;\n}\n",
                "conflictFileName": "I5tU0BvZbIJRhpjEDqbsryOvxO1tUCfJ.json"
            },
            "item_161": {
                "path": "app/Filament/Resources/Panel/ChargeResource/Pages",
                "name": "ViewCharge.php",
                "fullPath": "app/Filament/Resources/Panel/ChargeResource/Pages/ViewCharge.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 161,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ChargeResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\ChargeResource;\n\nclass ViewCharge extends ViewRecord\n{\n    protected static string $resource = ChargeResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_162": {
                "path": "app/Filament/Resources/Panel/ChargeResource/Pages",
                "name": "EditCharge.php",
                "fullPath": "app/Filament/Resources/Panel/ChargeResource/Pages/EditCharge.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 162,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ChargeResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\ChargeResource;\n\nclass EditCharge extends EditRecord\n{\n    protected static string $resource = ChargeResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n",
                "conflictFileName": "EBEFMBtcIeKTpNrT3iRZZNfJF4aScx6G.json"
            },
            "item_163": {
                "path": "app/Filament/Resources/Panel/ChargeResource/Pages",
                "name": "ListCharges.php",
                "fullPath": "app/Filament/Resources/Panel/ChargeResource/Pages/ListCharges.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 163,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\ChargeResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\ChargeResource;\n\nclass ListCharges extends ListRecords\n{\n    protected static string $resource = ChargeResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_164": {
                "path": "app/Filament/Resources/Panel",
                "name": "StateOfHealthResource.php",
                "fullPath": "app/Filament/Resources/Panel/StateOfHealthResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 164,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\StateOfHealth;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource\\RelationManagers;\n\nclass StateOfHealthResource extends Resource\n{\n    protected static ?string $model = StateOfHealth::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.stateOfHealths.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.stateOfHealths.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.stateOfHealths.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('vehicle_id')\n                        ->required()\n                        ->relationship('vehicle', 'id')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('km')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('km')\n                        ->inputMode('numeric'),\n\n                    TextInput::make('percentage')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('%')\n                        ->inputMode('numeric'),\n\n                    TextInput::make('remaining_battery')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('kWh')\n                        ->inputMode('numeric'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('vehicle.id'),\n\n                TextColumn::make('km'),\n\n                TextColumn::make('percentage'),\n\n                TextColumn::make('remaining_battery'),\n\n                TextColumn::make('user.name'),\n            ])\n            ->filters([Tables\\Filters\\TrashedFilter::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\ForceDeleteBulkAction::make(),\n                    Tables\\Actions\\RestoreBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListStateOfHealths::route('/'),\n            'create' => Pages\\CreateStateOfHealth::route('/create'),\n            'view' => Pages\\ViewStateOfHealth::route('/{record}'),\n            'edit' => Pages\\EditStateOfHealth::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getEloquentQuery(): Builder\n    {\n        return parent::getEloquentQuery()->withoutGlobalScopes([\n            SoftDeletingScope::class,\n        ]);\n    }\n}\n",
                "conflictFileName": "31F4Xf3RSWagrGyyey2J7Nz3GFUv55md.json"
            },
            "item_165": {
                "path": "app/Filament/Resources/Panel/StateOfHealthResource/Pages",
                "name": "CreateStateOfHealth.php",
                "fullPath": "app/Filament/Resources/Panel/StateOfHealthResource/Pages/CreateStateOfHealth.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 165,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\StateOfHealthResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource;\n\nclass CreateStateOfHealth extends CreateRecord\n{\n    protected static string $resource = StateOfHealthResource::class;\n}\n",
                "conflictFileName": "76VwM8jjDWTB0VMVCaVGATNp7eaJh5lS.json"
            },
            "item_166": {
                "path": "app/Filament/Resources/Panel/StateOfHealthResource/Pages",
                "name": "ViewStateOfHealth.php",
                "fullPath": "app/Filament/Resources/Panel/StateOfHealthResource/Pages/ViewStateOfHealth.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 166,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\StateOfHealthResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource;\n\nclass ViewStateOfHealth extends ViewRecord\n{\n    protected static string $resource = StateOfHealthResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_167": {
                "path": "app/Filament/Resources/Panel/StateOfHealthResource/Pages",
                "name": "EditStateOfHealth.php",
                "fullPath": "app/Filament/Resources/Panel/StateOfHealthResource/Pages/EditStateOfHealth.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 167,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\StateOfHealthResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource;\n\nclass EditStateOfHealth extends EditRecord\n{\n    protected static string $resource = StateOfHealthResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_168": {
                "path": "app/Filament/Resources/Panel/StateOfHealthResource/Pages",
                "name": "ListStateOfHealths.php",
                "fullPath": "app/Filament/Resources/Panel/StateOfHealthResource/Pages/ListStateOfHealths.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 168,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\StateOfHealthResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource;\n\nclass ListStateOfHealths extends ListRecords\n{\n    protected static string $resource = StateOfHealthResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_169": {
                "path": "database/seeders",
                "name": "DatabaseSeeder.php",
                "fullPath": "database/seeders/DatabaseSeeder.php",
                "template": "database/DatabaseSeeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 169,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n// use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\n\nuse App\\Models\\User;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(ProvinceSeeder::class);\n        $this->call(CitySeeder::class);\n        $this->call(DistrictSeeder::class);\n        $this->call(SubdistrictSeeder::class);\n        $this->call(PostalCodeSeeder::class);\n        $this->call(ProviderSeeder::class);\n        $this->call(ChargerLocationSeeder::class);\n        $this->call(PaymentSeeder::class);\n        $this->call(BrandVehicleSeeder::class);\n        $this->call(ModelVehicleSeeder::class);\n        $this->call(TypeVehicleSeeder::class);\n        $this->call(VehicleSeeder::class);\n        $this->call(ChargerSeeder::class);\n        $this->call(PowerChargerSeeder::class);\n        $this->call(CurrentChargerSeeder::class);\n        $this->call(TypeChargerSeeder::class);\n        $this->call(ChargeSeeder::class);\n        $this->call(StateOfHealthSeeder::class);\n        $this->call(DiscountHomeChargingSeeder::class);\n    }\n}\n",
                "conflictFileName": null
            },
            "item_170": {
                "path": "resources/views/components/layouts",
                "name": "app.blade.php",
                "fullPath": "resources/views/components/layouts/app.blade.php",
                "template": "crud/views/livewire/JetstreamLayoutComponent.vemtl",
                "projectId": 1,
                "type": "html",
                "status": "rendered",
                "id": 170,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<!DOCTYPE html>\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n\n        <title>{{ config('app.name', 'Laravel') }}</title>\n\n        <!-- Fonts -->\n        <link rel=\"preconnect\" href=\"https://fonts.bunny.net\">\n        <link href=\"https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap\" rel=\"stylesheet\" />\n\n        <!-- Scripts -->\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\n    </head>\n    <body class=\"font-sans antialiased\">\n        <x-banner />\n\n        <div class=\"min-h-screen bg-gray-100\">\n            @livewire('navigation-menu')\n\n            <!-- Page Heading -->\n            @if (isset($header))\n                <header class=\"bg-white shadow\">\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                        {{ $header }}\n                    </div>\n                </header>\n            @endif\n\n            <!-- Page Content -->\n            <main>\n                {{ $slot }}\n            </main>\n        </div>\n\n        @stack('modals')\n    </body>\n</html>\n"
            },
            "item_171": {
                "path": "/lang/en/",
                "name": "navigation.php",
                "fullPath": "/lang/en//navigation.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 171,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nreturn [\n    'home' => 'Home',\n    'apps' => 'Apps',\n];\n"
            },
            "item_172": {
                "path": "/lang/en/",
                "name": "crud.php",
                "fullPath": "/lang/en//crud.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 172,
                "createdAt": "2024-07-29 13:13:03",
                "updatedAt": "2024-08-19 09:14:47",
                "content": "<?php\n\nreturn [\n    'payments' => [\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n        ],\n    ],\n    'providers' => [\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'contact' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'address' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'province_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'city_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'district_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'subdistrict_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'payment_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'image' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'postal_code_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'user_id' => [\n                'label' => 'User',\n                'placeholder' => 'User id',\n            ],\n            'contact' => [\n                'label' => 'Contact',\n                'placeholder' => 'Contact',\n            ],\n            'address' => [\n                'label' => 'Address',\n                'placeholder' => 'Address',\n            ],\n            'province_id' => [\n                'label' => 'Province',\n                'placeholder' => 'Province id',\n            ],\n            'city_id' => [\n                'label' => 'City',\n                'placeholder' => 'City id',\n            ],\n            'district_id' => [\n                'label' => 'District',\n                'placeholder' => 'District id',\n            ],\n            'subdistrict_id' => [\n                'label' => 'Subdistrict',\n                'placeholder' => 'Subdistrict id',\n            ],\n            'payment_id' => [\n                'label' => 'Payment',\n                'placeholder' => 'Payment id',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n            'postal_code_id' => [\n                'label' => 'Postal code',\n                'placeholder' => 'Postal code id',\n            ],\n        ],\n        'itemTitle' => 'Provider',\n        'collectionTitle' => 'Providers',\n    ],\n    'chargerLocations' => [\n        'itemTitle' => 'Charger Location',\n        'collectionTitle' => 'Charger Locations',\n        'inputs' => [\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'provider_id' => [\n                'label' => 'Provider',\n                'placeholder' => 'Provider id',\n            ],\n            'location_on' => [\n                'label' => 'Location on',\n                'placeholder' => 'Location on',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'description' => [\n                'label' => 'Description',\n                'placeholder' => 'Description',\n            ],\n            'latitude' => [\n                'label' => 'Latitude',\n                'placeholder' => 'Latitude',\n            ],\n            'longitude' => [\n                'label' => 'Longitude',\n                'placeholder' => 'Longitude',\n            ],\n            'system' => [\n                'label' => 'System',\n                'placeholder' => 'System',\n            ],\n            'parking' => [\n                'label' => 'Parking',\n                'placeholder' => 'Parking',\n            ],\n            'province_id' => [\n                'label' => 'Province',\n                'placeholder' => 'Province id',\n            ],\n            'city_id' => [\n                'label' => 'City',\n                'placeholder' => 'City id',\n            ],\n            'district_id' => [\n                'label' => 'District',\n                'placeholder' => 'District id',\n            ],\n            'subdistrict_id' => [\n                'label' => 'Subdistrict',\n                'placeholder' => 'Subdistrict id',\n            ],\n            'postal_code_id' => [\n                'label' => 'Postal Code',\n                'placeholder' => 'Postal code id',\n            ],\n            'user_id' => [\n                'label' => 'User',\n                'placeholder' => 'User id',\n            ],\n            'address' => [\n                'label' => 'Address',\n                'placeholder' => 'Address',\n            ],\n        ],\n        'filament' => [\n            'image' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'provider_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'location_on' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n            ],\n            'description' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'latitude' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'longitude' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'system' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'parking' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'province_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'city_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'district_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'subdistrict_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'postal_code_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'address' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n    ],\n    'brandVehicles' => [\n        'itemTitle' => 'Brand Vehicle',\n        'collectionTitle' => 'Brand Vehicles',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'image' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'modelVehicles' => [\n        'itemTitle' => 'Model Vehicle',\n        'collectionTitle' => 'Model Vehicles',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'brand_vehicle_id' => [\n                'label' => 'Brand vehicle',\n                'placeholder' => 'Brand vehicle id',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'brand_vehicle_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'image' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'typeVehicles' => [\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'model_vehicle_id' => [\n                'label' => 'Model vehicle',\n                'placeholder' => 'Model vehicle id',\n            ],\n            'battery_capacity' => [\n                'label' => 'Battery capacity',\n                'placeholder' => 'Battery capacity',\n            ],\n            'type_charger_id' => [\n                'label' => 'Type charger',\n                'placeholder' => 'Type charger id',\n            ],\n            'type_charger' => [\n                'label' => 'Type charger',\n                'placeholder' => 'Type charger',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'model_vehicle_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'battery_capacity' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'type_charger_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'type_charger' => [\n                'helper_text' => '',\n                'label' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n            ],\n        ],\n        'itemTitle' => 'Type Vehicle',\n        'collectionTitle' => 'Type Vehicles',\n    ],\n    'vehicles' => [\n        'itemTitle' => 'Vehicle',\n        'collectionTitle' => 'Vehicles',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'brand_vehicle_id' => [\n                'label' => 'Brand',\n                'placeholder' => 'Brand vehicle id',\n            ],\n            'model_vehicle_id' => [\n                'label' => 'Model',\n                'placeholder' => 'Model vehicle id',\n            ],\n            'type_vehicle_id' => [\n                'label' => 'Type',\n                'placeholder' => 'Type vehicle id',\n            ],\n            'license_plate' => [\n                'label' => 'License Plate',\n                'placeholder' => 'License plate',\n            ],\n            'ownership' => [\n                'label' => 'Ownership',\n                'placeholder' => 'Ownership',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'brand_vehicle_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'model_vehicle_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'type_vehicle_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'license_plate' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'ownership' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n            ],\n        ],\n    ],\n    'chargers' => [\n        'itemTitle' => 'Charger',\n        'collectionTitle' => 'Chargers',\n        'inputs' => [\n            'charger_location_id' => [\n                'label' => 'Charger location',\n                'placeholder' => 'Charger location id',\n            ],\n            'current_charger_id' => [\n                'label' => 'Current charger',\n                'placeholder' => 'Current charger id',\n            ],\n            'type_charger_id' => [\n                'label' => 'Type charger',\n                'placeholder' => 'Type charger id',\n            ],\n            'power_charger_id' => [\n                'label' => 'Power charger',\n                'placeholder' => 'Power charger id',\n            ],\n            'unit' => [\n                'label' => 'Unit',\n                'placeholder' => 'Unit',\n            ],\n            'charger_cost' => [\n                'label' => 'Charger cost',\n                'placeholder' => 'Charger cost',\n            ],\n            'electric_lighting_tax' => [\n                'label' => 'Electric lighting tax',\n                'placeholder' => 'Electric lighting tax',\n            ],\n            'admin_cost' => [\n                'label' => 'Admin cost',\n                'placeholder' => 'Admin cost',\n            ],\n            'value_added_tax' => [\n                'label' => 'Value added tax',\n                'placeholder' => 'Value added tax',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'user_id' => [\n                'label' => 'User',\n                'placeholder' => 'User id',\n            ],\n        ],\n        'filament' => [\n            'charger_location_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'current_charger_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'type_charger_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'power_charger_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'unit' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'charger_cost' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'electric_lighting_tax' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'admin_cost' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'value_added_tax' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'status' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'powerChargers' => [\n        'itemTitle' => 'Power Charger',\n        'collectionTitle' => 'Power Chargers',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'type_charger_id' => [\n                'label' => 'Type charger id',\n                'placeholder' => 'Type charger id',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'type_charger_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'currentChargers' => [\n        'itemTitle' => 'Current Charger',\n        'collectionTitle' => 'Current Chargers',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n    ],\n    'typeChargers' => [\n        'itemTitle' => 'Type Charger',\n        'collectionTitle' => 'Type Chargers',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'current_charger_id' => [\n                'label' => 'Current charger',\n                'placeholder' => 'Current charger id',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'current_charger_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'charges' => [\n        'itemTitle' => 'Charge',\n        'collectionTitle' => 'Charges',\n        'inputs' => [\n            'vehicle_id' => [\n                'label' => 'Vehicle',\n                'placeholder' => 'Vehicle id',\n            ],\n            'date' => [\n                'label' => 'Date',\n                'placeholder' => 'Date',\n            ],\n            'charger_location_id' => [\n                'label' => 'Charger location',\n                'placeholder' => 'Charger location id',\n            ],\n            'charger_id' => [\n                'label' => 'Charger',\n                'placeholder' => 'Charger id',\n            ],\n            'km_now' => [\n                'label' => 'now',\n                'placeholder' => 'now',\n            ],\n            'km_before' => [\n                'label' => 'before',\n                'placeholder' => 'before',\n            ],\n            'start_charging_now' => [\n                'label' => 'Start charging now',\n                'placeholder' => 'Start charging now',\n            ],\n            'finish_charging_now' => [\n                'label' => 'Finish charging now',\n                'placeholder' => 'Finish charging now',\n            ],\n            'finish_charging_before' => [\n                'label' => 'Finish charging before',\n                'placeholder' => 'Finish charging before',\n            ],\n            'parking' => [\n                'label' => 'Parking',\n                'placeholder' => 'Parking',\n            ],\n            'kWh' => [\n                'label' => 'kWh',\n                'placeholder' => '',\n            ],\n            'street_lighting_tax' => [\n                'label' => 'Street lighting tax',\n                'placeholder' => 'Street lighting tax',\n            ],\n            'value_added_tax' => [\n                'label' => 'Value added tax',\n                'placeholder' => 'Value added tax',\n            ],\n            'admin_cost' => [\n                'label' => 'Admin cost',\n                'placeholder' => 'Admin cost',\n            ],\n            'total_cost' => [\n                'label' => 'Total cost',\n                'placeholder' => 'Total cost',\n            ],\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n            'user_id' => [\n                'label' => 'User',\n                'placeholder' => 'User id',\n            ],\n        ],\n        'filament' => [\n            'vehicle_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'date' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'charger_location_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'charger_id' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n            ],\n            'km_now' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'km_before' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'start_charging_now' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'finish_charging_now' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'finish_charging_before' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'parking' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'kWh' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'street_lighting_tax' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'value_added_tax' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'admin_cost' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'total_cost' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'image' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'stateOfHealths' => [\n        'itemTitle' => 'State Of Health',\n        'collectionTitle' => 'State Of Healths',\n        'inputs' => [\n            'image' => [\n                'label' => 'Image',\n                'placeholder' => 'Image',\n            ],\n            'vehicle_id' => [\n                'label' => 'Vehicle',\n                'placeholder' => 'Vehicle id',\n            ],\n            'km' => [\n                'label' => 'km',\n                'placeholder' => 'km',\n            ],\n            'percentage' => [\n                'label' => 'Percentage',\n                'placeholder' => 'Percentage',\n            ],\n            'remaining_battery' => [\n                'label' => 'Remaining battery',\n                'placeholder' => 'Remaining battery',\n            ],\n            'user_id' => [\n                'label' => 'User',\n                'placeholder' => 'User id',\n            ],\n        ],\n        'filament' => [\n            'image' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'vehicle_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'km' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'percentage' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'remaining_battery' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n    'users' => [\n        'itemTitle' => 'User',\n        'collectionTitle' => 'Users',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'email' => [\n                'label' => 'Email',\n                'placeholder' => 'Email',\n            ],\n            'password' => [\n                'label' => 'Password',\n                'placeholder' => 'Password',\n            ],\n        ],\n        'filament' => [\n            'name' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'email' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'password' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n        ],\n    ],\n    'discountHomeChargings' => [\n        'itemTitle' => 'Discount Home Charging',\n        'collectionTitle' => 'Discount Home Chargings',\n        'inputs' => [\n            'charger_location_id' => [\n                'label' => 'Charger location id',\n                'placeholder' => 'Charger location id',\n            ],\n            'month' => [\n                'label' => 'Month',\n                'placeholder' => 'Month',\n            ],\n            'total_kwh' => [\n                'label' => 'Total kwh',\n                'placeholder' => 'Total kwh',\n            ],\n            'discount_kwh' => [\n                'label' => 'Discount kwh',\n                'placeholder' => 'Discount kwh',\n            ],\n            'discount_total' => [\n                'label' => 'Discount total',\n                'placeholder' => 'Discount total',\n            ],\n            'user_id' => [\n                'label' => 'User id',\n                'placeholder' => 'User id',\n            ],\n        ],\n        'filament' => [\n            'charger_location_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n            'month' => [\n                'helper_text' => '',\n                'label' => '',\n            ],\n            'total_kwh' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'discount_kwh' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'discount_total' => [\n                'helper_text' => '',\n                'label' => '',\n                'description' => '',\n            ],\n            'user_id' => [\n                'helper_text' => '',\n                'loading_message' => '',\n                'no_result_message' => '',\n                'search_message' => '',\n                'label' => '',\n            ],\n        ],\n    ],\n];\n"
            },
            "item_173": {
                "path": "app/Http/Controllers/Api",
                "name": "AuthController.php",
                "fullPath": "app/Http/Controllers/Api/AuthController.php",
                "template": "api/ApiAuthController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 173,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\JsonResponse;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    public function login(Request $request): JsonResponse\n    {\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n}\n"
            },
            "item_174": {
                "path": "app/Http/Requests",
                "name": "ChargeStoreRequest.php",
                "fullPath": "app/Http/Requests/ChargeStoreRequest.php",
                "template": "api/ApiStoreRequest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 174,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass ChargeStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'vehicle_id' => ['required'],\n            'date' => ['required', 'date'],\n            'charger_location_id' => ['required'],\n            'charger_id' => ['required'],\n            'km_now' => ['required'],\n            'km_before' => ['required'],\n            'start_charging_now' => ['required'],\n            'finish_charging_now' => ['required'],\n            'finish_charging_before' => ['required'],\n            'parking' => ['required'],\n            'kWh' => ['required'],\n            'street_lighting_tax' => ['required'],\n            'value_added_tax' => ['required'],\n            'admin_cost' => ['required'],\n            'total_cost' => ['required'],\n            'image' => ['nullable', 'image', 'max:1024'],\n        ];\n    }\n}\n"
            },
            "item_175": {
                "path": "app/Http/Requests",
                "name": "ChargeUpdateRequest.php",
                "fullPath": "app/Http/Requests/ChargeUpdateRequest.php",
                "template": "api/ApiUpdateRequest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 175,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass ChargeUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'vehicle_id' => ['required'],\n            'date' => ['required', 'date'],\n            'charger_location_id' => ['required'],\n            'charger_id' => ['required'],\n            'km_now' => ['required'],\n            'km_before' => ['required'],\n            'start_charging_now' => ['required'],\n            'finish_charging_now' => ['required'],\n            'finish_charging_before' => ['required'],\n            'parking' => ['required'],\n            'kWh' => ['required'],\n            'street_lighting_tax' => ['required'],\n            'value_added_tax' => ['required'],\n            'admin_cost' => ['required'],\n            'total_cost' => ['required'],\n            'image' => ['nullable', 'image', 'max:1024'],\n        ];\n    }\n}\n"
            },
            "item_176": {
                "path": "app/Http/Resources",
                "name": "ChargeCollection.php",
                "fullPath": "app/Http/Resources/ChargeCollection.php",
                "template": "api/ApiCollection.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 176,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass ChargeCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_177": {
                "path": "app/Http/Resources",
                "name": "ChargeResource.php",
                "fullPath": "app/Http/Resources/ChargeResource.php",
                "template": "api/ApiResource.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 177,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass ChargeResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_178": {
                "path": "app/Http/Controllers/Api",
                "name": "ChargeController.php",
                "fullPath": "app/Http/Controllers/Api/ChargeController.php",
                "template": "api/ApiController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 178,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Charge;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ChargeResource;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\ChargeCollection;\nuse App\\Http\\Requests\\ChargeStoreRequest;\nuse App\\Http\\Requests\\ChargeUpdateRequest;\n\nclass ChargeController extends Controller\n{\n    public function index(Request $request): ChargeCollection\n    {\n        $search = $request->get('search', '');\n\n        $charges = $this->getSearchQuery($search)\n            ->latest()\n            ->paginate();\n\n        return new ChargeCollection($charges);\n    }\n\n    public function store(ChargeStoreRequest $request): ChargeResource\n    {\n        $validated = $request->validated();\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $charge = Charge::create($validated);\n\n        return new ChargeResource($charge);\n    }\n\n    public function show(Request $request, Charge $charge): ChargeResource\n    {\n        return new ChargeResource($charge);\n    }\n\n    public function update(\n        ChargeUpdateRequest $request,\n        Charge $charge\n    ): ChargeResource {\n        $validated = $request->validated();\n\n        if ($request->hasFile('image')) {\n            if ($charge->image) {\n                Storage::delete($charge->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $charge->update($validated);\n\n        return new ChargeResource($charge);\n    }\n\n    public function destroy(Request $request, Charge $charge): Response\n    {\n        if ($charge->image) {\n            Storage::delete($charge->image);\n        }\n\n        $charge->delete();\n\n        return response()->noContent();\n    }\n\n    public function getSearchQuery(string $search)\n    {\n        return Charge::query()->where('date', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_179": {
                "path": "tests/Feature/Api",
                "name": "ChargeTest.php",
                "fullPath": "tests/Feature/Api/ChargeTest.php",
                "template": "api/ApiTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 179,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\Charge;\nuse App\\Models\\Vehicle;\nuse App\\Models\\Charger;\nuse Laravel\\Sanctum\\Sanctum;\nuse App\\Models\\ChargerLocation;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets charges list', function () {\n    $charges = Charge::factory()\n        ->count(5)\n        ->create();\n\n    $response = $this->get(route('api.charges.index'));\n\n    $response->assertOk()->assertSee($charges[0]->id);\n});\n\ntest('it stores the charge', function () {\n    $data = Charge::factory()\n        ->make()\n        ->toArray();\n\n    $response = $this->postJson(route('api.charges.store'), $data);\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $this->assertDatabaseHas('charges', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n});\n\ntest('it updates the charge', function () {\n    $charge = Charge::factory()->create();\n\n    $vehicle = Vehicle::factory()->create();\n    $chargerLocation = ChargerLocation::factory()->create();\n    $user = User::factory()->create();\n    $charger = Charger::factory()->create();\n\n    $data = [\n        'date' => fake()->date(),\n        'km_now' => fake()->randomNumber(),\n        'km_before' => fake()->randomNumber(),\n        'start_charging_now' => fake()->randomNumber(),\n        'finish_charging_now' => fake()->randomNumber(),\n        'finish_charging_before' => fake()->randomNumber(),\n        'parking' => fake()->randomNumber(),\n        'kWh' => fake()->randomFloat(0, 9999),\n        'street_lighting_tax' => fake()->randomNumber(),\n        'value_added_tax' => fake()->randomNumber(),\n        'admin_cost' => fake()->randomNumber(),\n        'total_cost' => fake()->randomNumber(),\n        'image' => fake()->optional(),\n        'vehicle_id' => $vehicle->id,\n        'charger_location_id' => $chargerLocation->id,\n        'user_id' => $user->id,\n        'charger_id' => $charger->id,\n    ];\n\n    $response = $this->putJson(route('api.charges.update', $charge), $data);\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $data['id'] = $charge->id;\n\n    $this->assertDatabaseHas('charges', $data);\n\n    $response->assertStatus(200)->assertJsonFragment($data);\n});\n\ntest('it deletes the charge', function () {\n    $charge = Charge::factory()->create();\n\n    $response = $this->deleteJson(route('api.charges.destroy', $charge));\n\n    $this->assertSoftDeleted($charge);\n\n    $response->assertNoContent();\n});\n"
            },
            "item_180": {
                "path": "app/Http/Requests",
                "name": "VehicleStoreRequest.php",
                "fullPath": "app/Http/Requests/VehicleStoreRequest.php",
                "template": "api/ApiStoreRequest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 180,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass VehicleStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'brand_vehicle_id' => ['required'],\n            'model_vehicle_id' => ['required'],\n            'type_vehicle_id' => ['nullable'],\n            'license_plate' => ['nullable', 'string'],\n            'ownership' => ['nullable', 'date'],\n            'status' => ['required'],\n        ];\n    }\n}\n"
            },
            "item_181": {
                "path": "app/Http/Requests",
                "name": "VehicleUpdateRequest.php",
                "fullPath": "app/Http/Requests/VehicleUpdateRequest.php",
                "template": "api/ApiUpdateRequest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 181,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass VehicleUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'brand_vehicle_id' => ['required'],\n            'model_vehicle_id' => ['required'],\n            'type_vehicle_id' => ['nullable'],\n            'license_plate' => ['nullable', 'string'],\n            'ownership' => ['nullable', 'date'],\n            'status' => ['required'],\n        ];\n    }\n}\n"
            },
            "item_182": {
                "path": "app/Http/Resources",
                "name": "VehicleCollection.php",
                "fullPath": "app/Http/Resources/VehicleCollection.php",
                "template": "api/ApiCollection.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 182,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass VehicleCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_183": {
                "path": "app/Http/Resources",
                "name": "VehicleResource.php",
                "fullPath": "app/Http/Resources/VehicleResource.php",
                "template": "api/ApiResource.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 183,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass VehicleResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_184": {
                "path": "app/Http/Controllers/Api",
                "name": "VehicleController.php",
                "fullPath": "app/Http/Controllers/Api/VehicleController.php",
                "template": "api/ApiController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 184,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Vehicle;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\VehicleResource;\nuse App\\Http\\Resources\\VehicleCollection;\nuse App\\Http\\Requests\\VehicleStoreRequest;\nuse App\\Http\\Requests\\VehicleUpdateRequest;\n\nclass VehicleController extends Controller\n{\n    public function index(Request $request): VehicleCollection\n    {\n        $search = $request->get('search', '');\n\n        $vehicles = $this->getSearchQuery($search)\n            ->latest()\n            ->paginate();\n\n        return new VehicleCollection($vehicles);\n    }\n\n    public function store(VehicleStoreRequest $request): VehicleResource\n    {\n        $validated = $request->validated();\n\n        $vehicle = Vehicle::create($validated);\n\n        return new VehicleResource($vehicle);\n    }\n\n    public function show(Request $request, Vehicle $vehicle): VehicleResource\n    {\n        return new VehicleResource($vehicle);\n    }\n\n    public function update(\n        VehicleUpdateRequest $request,\n        Vehicle $vehicle\n    ): VehicleResource {\n        $validated = $request->validated();\n\n        $vehicle->update($validated);\n\n        return new VehicleResource($vehicle);\n    }\n\n    public function destroy(Request $request, Vehicle $vehicle): Response\n    {\n        $vehicle->delete();\n\n        return response()->noContent();\n    }\n\n    public function getSearchQuery(string $search)\n    {\n        return Vehicle::query();\n    }\n}\n"
            },
            "item_185": {
                "path": "tests/Feature/Api",
                "name": "VehicleTest.php",
                "fullPath": "tests/Feature/Api/VehicleTest.php",
                "template": "api/ApiTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 185,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\Vehicle;\nuse App\\Models\\TypeVehicle;\nuse App\\Models\\BrandVehicle;\nuse App\\Models\\ModelVehicle;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets vehicles list', function () {\n    $vehicles = Vehicle::factory()\n        ->count(5)\n        ->create();\n\n    $response = $this->get(route('api.vehicles.index'));\n\n    $response->assertOk()->assertSee($vehicles[0]->id);\n});\n\ntest('it stores the vehicle', function () {\n    $data = Vehicle::factory()\n        ->make()\n        ->toArray();\n\n    $response = $this->postJson(route('api.vehicles.store'), $data);\n\n    unset($data['image']);\n    unset($data['user_id']);\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $this->assertDatabaseHas('vehicles', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n});\n\ntest('it updates the vehicle', function () {\n    $vehicle = Vehicle::factory()->create();\n\n    $brandVehicle = BrandVehicle::factory()->create();\n    $modelVehicle = ModelVehicle::factory()->create();\n    $typeVehicle = TypeVehicle::factory()->create();\n    $user = User::factory()->create();\n\n    $data = [\n        'image' => fake()->word(),\n        'license_plate' => fake()->name(),\n        'ownership' => fake()->date(),\n        'status' => fake()->numberBetween(1, 2),\n        'created_at' => fake()->dateTime(),\n        'updated_at' => fake()->dateTime(),\n        'deleted_at' => fake()->dateTime(),\n        'brand_vehicle_id' => $brandVehicle->id,\n        'model_vehicle_id' => $modelVehicle->id,\n        'type_vehicle_id' => $typeVehicle->id,\n        'user_id' => $user->id,\n    ];\n\n    $response = $this->putJson(route('api.vehicles.update', $vehicle), $data);\n\n    unset($data['image']);\n    unset($data['user_id']);\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $data['id'] = $vehicle->id;\n\n    $this->assertDatabaseHas('vehicles', $data);\n\n    $response->assertStatus(200)->assertJsonFragment($data);\n});\n\ntest('it deletes the vehicle', function () {\n    $vehicle = Vehicle::factory()->create();\n\n    $response = $this->deleteJson(route('api.vehicles.destroy', $vehicle));\n\n    $this->assertSoftDeleted($vehicle);\n\n    $response->assertNoContent();\n});\n"
            },
            "item_186": {
                "path": "app/Http/Resources",
                "name": "StateOfHealthResource.php",
                "fullPath": "app/Http/Resources/StateOfHealthResource.php",
                "template": "api/ApiResource.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 186,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass StateOfHealthResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_187": {
                "path": "app/Http/Resources",
                "name": "StateOfHealthCollection.php",
                "fullPath": "app/Http/Resources/StateOfHealthCollection.php",
                "template": "api/ApiCollection.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 187,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass StateOfHealthCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_188": {
                "path": "app/Http/Controllers/Api",
                "name": "VehiclesChargeController.php",
                "fullPath": "app/Http/Controllers/Api/VehiclesChargeController.php",
                "template": "api/ApiHasManyController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 188,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Vehicle;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ChargeResource;\nuse App\\Http\\Resources\\ChargeCollection;\n\nclass VehiclesChargeController extends Controller\n{\n    public function index(Request $request, Vehicle $vehicle): ChargeCollection\n    {\n        $search = $request->get('search', '');\n\n        $charges = $this->getSearchQuery($search, $vehicle)\n            ->latest()\n            ->paginate();\n\n        return new ChargeCollection($charges);\n    }\n\n    public function store(Request $request, Vehicle $vehicle): ChargeResource\n    {\n        $validated = $request->validate([\n            'date' => ['required', 'date'],\n            'charger_location_id' => ['required'],\n            'km_now' => ['required'],\n            'km_before' => ['required'],\n            'start_charging_now' => ['required'],\n            'finish_charging_now' => ['required'],\n            'finish_charging_before' => ['required'],\n            'parking' => ['required'],\n            'kWh' => ['required'],\n            'street_lighting_tax' => ['required'],\n            'value_added_tax' => ['required'],\n            'admin_cost' => ['required'],\n            'total_cost' => ['required'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'user_id' => ['required'],\n            'charger_id' => ['required'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $charge = $vehicle->charges()->create($validated);\n\n        return new ChargeResource($charge);\n    }\n\n    public function getSearchQuery(string $search, Vehicle $vehicle)\n    {\n        return $vehicle->charges()->where('date', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_189": {
                "path": "app/Http/Controllers/Api",
                "name": "VehiclesStateOfHealthController.php",
                "fullPath": "app/Http/Controllers/Api/VehiclesStateOfHealthController.php",
                "template": "api/ApiHasManyController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 189,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Vehicle;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\StateOfHealthResource;\nuse App\\Http\\Resources\\StateOfHealthCollection;\n\nclass VehiclesStateOfHealthController extends Controller\n{\n    public function index(\n        Request $request,\n        Vehicle $vehicle\n    ): StateOfHealthCollection {\n        $search = $request->get('search', '');\n\n        $stateOfHealths = $this->getSearchQuery($search, $vehicle)\n            ->latest()\n            ->paginate();\n\n        return new StateOfHealthCollection($stateOfHealths);\n    }\n\n    public function store(\n        Request $request,\n        Vehicle $vehicle\n    ): StateOfHealthResource {\n        $validated = $request->validate([\n            'image' => ['nullable', 'image', 'max:1024'],\n            'km' => ['required'],\n            'percentage' => ['required'],\n            'remaining_battery' => ['nullable'],\n            'user_id' => ['required'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $stateOfHealth = $vehicle->stateOfHealths()->create($validated);\n\n        return new StateOfHealthResource($stateOfHealth);\n    }\n\n    public function getSearchQuery(string $search, Vehicle $vehicle)\n    {\n        return $vehicle\n            ->stateOfHealths()\n            ->where('image', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_190": {
                "path": "tests/Feature/Api",
                "name": "VehicleChargesTest.php",
                "fullPath": "tests/Feature/Api/VehicleChargesTest.php",
                "template": "api/ApiHasManyTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 190,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\Charge;\nuse App\\Models\\Vehicle;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets vehicle charges', function () {\n    $vehicle = Vehicle::factory()->create();\n    $charges = Charge::factory()\n        ->count(2)\n        ->create([\n            'vehicle_id' => $vehicle->id,\n        ]);\n\n    $response = $this->getJson(route('api.vehicles.charges.index', $vehicle));\n\n    $response->assertOk()->assertSee($charges[0]->id);\n});\n\ntest('it stores the vehicle charges', function () {\n    $vehicle = Vehicle::factory()->create();\n    $data = Charge::factory()\n        ->make([\n            'vehicle_id' => $vehicle->id,\n        ])\n        ->toArray();\n\n    $response = $this->postJson(\n        route('api.vehicles.charges.store', $vehicle),\n        $data\n    );\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $this->assertDatabaseHas('charges', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n\n    $charge = Charge::latest('id')->first();\n\n    $this->assertEquals($vehicle->id, $charge->vehicle_id);\n});\n"
            },
            "item_191": {
                "path": "tests/Feature/Api",
                "name": "VehicleStateOfHealthsTest.php",
                "fullPath": "tests/Feature/Api/VehicleStateOfHealthsTest.php",
                "template": "api/ApiHasManyTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 191,
                "createdAt": "2024-07-29 13:14:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\Vehicle;\nuse Laravel\\Sanctum\\Sanctum;\nuse App\\Models\\StateOfHealth;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets vehicle state_of_healths', function () {\n    $vehicle = Vehicle::factory()->create();\n    $stateOfHealths = StateOfHealth::factory()\n        ->count(2)\n        ->create([\n            'vehicle_id' => $vehicle->id,\n        ]);\n\n    $response = $this->getJson(\n        route('api.vehicles.state-of-healths.index', $vehicle)\n    );\n\n    $response->assertOk()->assertSee($stateOfHealths[0]->id);\n});\n\ntest('it stores the vehicle state_of_healths', function () {\n    $vehicle = Vehicle::factory()->create();\n    $data = StateOfHealth::factory()\n        ->make([\n            'vehicle_id' => $vehicle->id,\n        ])\n        ->toArray();\n\n    $response = $this->postJson(\n        route('api.vehicles.state-of-healths.store', $vehicle),\n        $data\n    );\n\n    unset($data['date']);\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $this->assertDatabaseHas('state_of_healths', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n\n    $stateOfHealth = StateOfHealth::latest('id')->first();\n\n    $this->assertEquals($vehicle->id, $stateOfHealth->vehicle_id);\n});\n"
            },
            "item_196": {
                "path": "app/Http/Requests",
                "name": "ChargerLocationStoreRequest.php",
                "fullPath": "app/Http/Requests/ChargerLocationStoreRequest.php",
                "template": "api/ApiStoreRequest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 196,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass ChargerLocationStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'image' => ['nullable', 'image', 'max:1024'],\n            'name' => ['required', 'string'],\n            'provider_id' => ['required'],\n            'location_on' => ['required'],\n            'status' => ['required'],\n            'description' => ['nullable', 'string'],\n            'latitude' => ['required'],\n            'longitude' => ['required'],\n            'parking' => ['required', 'boolean'],\n            'province_id' => ['required'],\n            'city_id' => ['required'],\n            'district_id' => ['nullable'],\n            'subdistrict_id' => ['nullable'],\n            'postal_code_id' => ['nullable'],\n            'user_id' => ['required'],\n        ];\n    }\n}\n"
            },
            "item_197": {
                "path": "app/Http/Requests",
                "name": "ChargerLocationUpdateRequest.php",
                "fullPath": "app/Http/Requests/ChargerLocationUpdateRequest.php",
                "template": "api/ApiUpdateRequest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 197,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass ChargerLocationUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'image' => ['nullable', 'image', 'max:1024'],\n            'name' => ['required', 'string'],\n            'provider_id' => ['required'],\n            'location_on' => ['required'],\n            'status' => ['required'],\n            'description' => ['nullable', 'string'],\n            'latitude' => ['required'],\n            'longitude' => ['required'],\n            'parking' => ['required', 'boolean'],\n            'province_id' => ['required'],\n            'city_id' => ['required'],\n            'district_id' => ['nullable'],\n            'subdistrict_id' => ['nullable'],\n            'postal_code_id' => ['nullable'],\n            'user_id' => ['required'],\n        ];\n    }\n}\n"
            },
            "item_198": {
                "path": "app/Http/Resources",
                "name": "ChargerLocationCollection.php",
                "fullPath": "app/Http/Resources/ChargerLocationCollection.php",
                "template": "api/ApiCollection.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 198,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass ChargerLocationCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_199": {
                "path": "app/Http/Resources",
                "name": "ChargerLocationResource.php",
                "fullPath": "app/Http/Resources/ChargerLocationResource.php",
                "template": "api/ApiResource.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 199,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass ChargerLocationResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_200": {
                "path": "app/Http/Controllers/Api",
                "name": "ChargerLocationController.php",
                "fullPath": "app/Http/Controllers/Api/ChargerLocationController.php",
                "template": "api/ApiController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 200,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Models\\ChargerLocation;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Http\\Resources\\ChargerLocationResource;\nuse App\\Http\\Resources\\ChargerLocationCollection;\nuse App\\Http\\Requests\\ChargerLocationStoreRequest;\nuse App\\Http\\Requests\\ChargerLocationUpdateRequest;\n\nclass ChargerLocationController extends Controller\n{\n    public function index(Request $request): ChargerLocationCollection\n    {\n        $search = $request->get('search', '');\n\n        $chargerLocations = $this->getSearchQuery($search)\n            ->latest()\n            ->paginate();\n\n        return new ChargerLocationCollection($chargerLocations);\n    }\n\n    public function store(\n        ChargerLocationStoreRequest $request\n    ): ChargerLocationResource {\n        $validated = $request->validated();\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $chargerLocation = ChargerLocation::create($validated);\n\n        return new ChargerLocationResource($chargerLocation);\n    }\n\n    public function show(\n        Request $request,\n        ChargerLocation $chargerLocation\n    ): ChargerLocationResource {\n        return new ChargerLocationResource($chargerLocation);\n    }\n\n    public function update(\n        ChargerLocationUpdateRequest $request,\n        ChargerLocation $chargerLocation\n    ): ChargerLocationResource {\n        $validated = $request->validated();\n\n        if ($request->hasFile('image')) {\n            if ($chargerLocation->image) {\n                Storage::delete($chargerLocation->image);\n            }\n\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $chargerLocation->update($validated);\n\n        return new ChargerLocationResource($chargerLocation);\n    }\n\n    public function destroy(\n        Request $request,\n        ChargerLocation $chargerLocation\n    ): Response {\n        if ($chargerLocation->image) {\n            Storage::delete($chargerLocation->image);\n        }\n\n        $chargerLocation->delete();\n\n        return response()->noContent();\n    }\n\n    public function getSearchQuery(string $search)\n    {\n        return ChargerLocation::query()->where('name', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_201": {
                "path": "tests/Feature/Api",
                "name": "ChargerLocationTest.php",
                "fullPath": "tests/Feature/Api/ChargerLocationTest.php",
                "template": "api/ApiTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 201,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\City;\nuse App\\Models\\Provider;\nuse App\\Models\\Province;\nuse App\\Models\\District;\nuse App\\Models\\PostalCode;\nuse App\\Models\\Subdistrict;\nuse Laravel\\Sanctum\\Sanctum;\nuse App\\Models\\ChargerLocation;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets charger_locations list', function () {\n    $chargerLocations = ChargerLocation::factory()\n        ->count(5)\n        ->create();\n\n    $response = $this->get(route('api.charger-locations.index'));\n\n    $response->assertOk()->assertSee($chargerLocations[0]->name);\n});\n\ntest('it stores the charger_location', function () {\n    $data = ChargerLocation::factory()\n        ->make()\n        ->toArray();\n\n    $response = $this->postJson(route('api.charger-locations.store'), $data);\n\n    unset($data['address']);\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n    unset($data['name']);\n    unset($data['location']);\n\n    $this->assertDatabaseHas('charger_locations', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n});\n\ntest('it updates the charger_location', function () {\n    $chargerLocation = ChargerLocation::factory()->create();\n\n    $provider = Provider::factory()->create();\n    $province = Province::factory()->create();\n    $city = City::factory()->create();\n    $district = District::factory()->create();\n    $subdistrict = Subdistrict::factory()->create();\n    $postalCode = PostalCode::factory()->create();\n    $user = User::factory()->create();\n\n    $data = [\n        'image' => fake()->optional(),\n        'name' => fake()->name(),\n        'location_on' => fake()->numberBetween(1, 2),\n        'status' => fake()->numberBetween(1, 2),\n        'description' => fake()->sentence(15),\n        'latitude' => fake()->latitude(),\n        'longitude' => fake()->longitude(),\n        'parking' => fake()->boolean(),\n        'provider_id' => $provider->id,\n        'province_id' => $province->id,\n        'city_id' => $city->id,\n        'district_id' => $district->id,\n        'subdistrict_id' => $subdistrict->id,\n        'postal_code_id' => $postalCode->id,\n        'user_id' => $user->id,\n    ];\n\n    $response = $this->putJson(\n        route('api.charger-locations.update', $chargerLocation),\n        $data\n    );\n\n    unset($data['address']);\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n    unset($data['name']);\n    unset($data['location']);\n\n    $data['id'] = $chargerLocation->id;\n\n    $this->assertDatabaseHas('charger_locations', $data);\n\n    $response->assertStatus(200)->assertJsonFragment($data);\n});\n\ntest('it deletes the charger_location', function () {\n    $chargerLocation = ChargerLocation::factory()->create();\n\n    $response = $this->deleteJson(\n        route('api.charger-locations.destroy', $chargerLocation)\n    );\n\n    $this->assertSoftDeleted($chargerLocation);\n\n    $response->assertNoContent();\n});\n"
            },
            "item_202": {
                "path": "app/Http/Resources",
                "name": "ChargerResource.php",
                "fullPath": "app/Http/Resources/ChargerResource.php",
                "template": "api/ApiResource.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 202,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass ChargerResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_203": {
                "path": "app/Http/Resources",
                "name": "ChargerCollection.php",
                "fullPath": "app/Http/Resources/ChargerCollection.php",
                "template": "api/ApiCollection.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 203,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass ChargerCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_204": {
                "path": "app/Http/Controllers/Api",
                "name": "ChargerLocationsChargerController.php",
                "fullPath": "app/Http/Controllers/Api/ChargerLocationsChargerController.php",
                "template": "api/ApiHasManyController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 204,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Models\\ChargerLocation;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ChargerResource;\nuse App\\Http\\Resources\\ChargerCollection;\n\nclass ChargerLocationsChargerController extends Controller\n{\n    public function index(\n        Request $request,\n        ChargerLocation $chargerLocation\n    ): ChargerCollection {\n        $search = $request->get('search', '');\n\n        $chargers = $this->getSearchQuery($search, $chargerLocation)\n            ->latest()\n            ->paginate();\n\n        return new ChargerCollection($chargers);\n    }\n\n    public function store(\n        Request $request,\n        ChargerLocation $chargerLocation\n    ): ChargerResource {\n        $validated = $request->validate([\n            'current_charger_id' => ['required'],\n            'type_charger_id' => ['required'],\n            'power_charger_id' => ['required'],\n            'unit' => ['required'],\n        ]);\n\n        $charger = $chargerLocation->chargers()->create($validated);\n\n        return new ChargerResource($charger);\n    }\n\n    public function getSearchQuery(\n        string $search,\n        ChargerLocation $chargerLocation\n    ) {\n        return $chargerLocation\n            ->chargers()\n            ->where('created_at', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_205": {
                "path": "app/Http/Controllers/Api",
                "name": "ChargerLocationsChargeController.php",
                "fullPath": "app/Http/Controllers/Api/ChargerLocationsChargeController.php",
                "template": "api/ApiHasManyController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 205,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Models\\ChargerLocation;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ChargeResource;\nuse App\\Http\\Resources\\ChargeCollection;\n\nclass ChargerLocationsChargeController extends Controller\n{\n    public function index(\n        Request $request,\n        ChargerLocation $chargerLocation\n    ): ChargeCollection {\n        $search = $request->get('search', '');\n\n        $charges = $this->getSearchQuery($search, $chargerLocation)\n            ->latest()\n            ->paginate();\n\n        return new ChargeCollection($charges);\n    }\n\n    public function store(\n        Request $request,\n        ChargerLocation $chargerLocation\n    ): ChargeResource {\n        $validated = $request->validate([\n            'vehicle_id' => ['required'],\n            'date' => ['required', 'date'],\n            'km_now' => ['required'],\n            'km_before' => ['required'],\n            'start_charging_now' => ['required'],\n            'finish_charging_now' => ['required'],\n            'finish_charging_before' => ['required'],\n            'parking' => ['required'],\n            'kWh' => ['required'],\n            'street_lighting_tax' => ['required'],\n            'value_added_tax' => ['required'],\n            'admin_cost' => ['required'],\n            'total_cost' => ['required'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'user_id' => ['required'],\n            'charger_id' => ['required'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $charge = $chargerLocation->charges()->create($validated);\n\n        return new ChargeResource($charge);\n    }\n\n    public function getSearchQuery(\n        string $search,\n        ChargerLocation $chargerLocation\n    ) {\n        return $chargerLocation\n            ->charges()\n            ->where('date', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_206": {
                "path": "app/Http/Requests",
                "name": "ChargerStoreRequest.php",
                "fullPath": "app/Http/Requests/ChargerStoreRequest.php",
                "template": "api/ApiStoreRequest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 206,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass ChargerStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'charger_location_id' => ['required'],\n            'current_charger_id' => ['required'],\n            'type_charger_id' => ['required'],\n            'power_charger_id' => ['required'],\n            'unit' => ['required'],\n        ];\n    }\n}\n"
            },
            "item_207": {
                "path": "tests/Feature/Api",
                "name": "ChargerLocationChargersTest.php",
                "fullPath": "tests/Feature/Api/ChargerLocationChargersTest.php",
                "template": "api/ApiHasManyTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 207,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\Charger;\nuse Laravel\\Sanctum\\Sanctum;\nuse App\\Models\\ChargerLocation;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets charger_location chargers', function () {\n    $chargerLocation = ChargerLocation::factory()->create();\n    $chargers = Charger::factory()\n        ->count(2)\n        ->create([\n            'charger_location_id' => $chargerLocation->id,\n        ]);\n\n    $response = $this->getJson(\n        route('api.charger-locations.chargers.index', $chargerLocation)\n    );\n\n    $response->assertOk()->assertSee($chargers[0]->id);\n});\n\ntest('it stores the charger_location chargers', function () {\n    $chargerLocation = ChargerLocation::factory()->create();\n    $data = Charger::factory()\n        ->make([\n            'charger_location_id' => $chargerLocation->id,\n        ])\n        ->toArray();\n\n    $response = $this->postJson(\n        route('api.charger-locations.chargers.store', $chargerLocation),\n        $data\n    );\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $this->assertDatabaseHas('chargers', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n\n    $charger = Charger::latest('id')->first();\n\n    $this->assertEquals($chargerLocation->id, $charger->charger_location_id);\n});\n"
            },
            "item_208": {
                "path": "tests/Feature/Api",
                "name": "ChargerLocationChargesTest.php",
                "fullPath": "tests/Feature/Api/ChargerLocationChargesTest.php",
                "template": "api/ApiHasManyTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 208,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\Charge;\nuse Laravel\\Sanctum\\Sanctum;\nuse App\\Models\\ChargerLocation;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets charger_location charges', function () {\n    $chargerLocation = ChargerLocation::factory()->create();\n    $charges = Charge::factory()\n        ->count(2)\n        ->create([\n            'charger_location_id' => $chargerLocation->id,\n        ]);\n\n    $response = $this->getJson(\n        route('api.charger-locations.charges.index', $chargerLocation)\n    );\n\n    $response->assertOk()->assertSee($charges[0]->id);\n});\n\ntest('it stores the charger_location charges', function () {\n    $chargerLocation = ChargerLocation::factory()->create();\n    $data = Charge::factory()\n        ->make([\n            'charger_location_id' => $chargerLocation->id,\n        ])\n        ->toArray();\n\n    $response = $this->postJson(\n        route('api.charger-locations.charges.store', $chargerLocation),\n        $data\n    );\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $this->assertDatabaseHas('charges', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n\n    $charge = Charge::latest('id')->first();\n\n    $this->assertEquals($chargerLocation->id, $charge->charger_location_id);\n});\n"
            },
            "item_209": {
                "path": "app/Http/Requests",
                "name": "ChargerUpdateRequest.php",
                "fullPath": "app/Http/Requests/ChargerUpdateRequest.php",
                "template": "api/ApiUpdateRequest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 209,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass ChargerUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'charger_location_id' => ['required'],\n            'current_charger_id' => ['required'],\n            'type_charger_id' => ['required'],\n            'power_charger_id' => ['required'],\n            'unit' => ['required'],\n        ];\n    }\n}\n"
            },
            "item_210": {
                "path": "app/Http/Controllers/Api",
                "name": "ChargerController.php",
                "fullPath": "app/Http/Controllers/Api/ChargerController.php",
                "template": "api/ApiController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 210,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Charger;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ChargerResource;\nuse App\\Http\\Resources\\ChargerCollection;\nuse App\\Http\\Requests\\ChargerStoreRequest;\nuse App\\Http\\Requests\\ChargerUpdateRequest;\n\nclass ChargerController extends Controller\n{\n    public function index(Request $request): ChargerCollection\n    {\n        $search = $request->get('search', '');\n\n        $chargers = $this->getSearchQuery($search)\n            ->latest()\n            ->paginate();\n\n        return new ChargerCollection($chargers);\n    }\n\n    public function store(ChargerStoreRequest $request): ChargerResource\n    {\n        $validated = $request->validated();\n\n        $charger = Charger::create($validated);\n\n        return new ChargerResource($charger);\n    }\n\n    public function show(Request $request, Charger $charger): ChargerResource\n    {\n        return new ChargerResource($charger);\n    }\n\n    public function update(\n        ChargerUpdateRequest $request,\n        Charger $charger\n    ): ChargerResource {\n        $validated = $request->validated();\n\n        $charger->update($validated);\n\n        return new ChargerResource($charger);\n    }\n\n    public function destroy(Request $request, Charger $charger): Response\n    {\n        $charger->delete();\n\n        return response()->noContent();\n    }\n\n    public function getSearchQuery(string $search)\n    {\n        return Charger::query()->where('created_at', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_211": {
                "path": "tests/Feature/Api",
                "name": "ChargerTest.php",
                "fullPath": "tests/Feature/Api/ChargerTest.php",
                "template": "api/ApiTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 211,
                "createdAt": "2024-07-29 13:21:17",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\Charger;\nuse App\\Models\\TypeCharger;\nuse App\\Models\\PowerCharger;\nuse Laravel\\Sanctum\\Sanctum;\nuse App\\Models\\CurrentCharger;\nuse App\\Models\\ChargerLocation;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets chargers list', function () {\n    $chargers = Charger::factory()\n        ->count(5)\n        ->create();\n\n    $response = $this->get(route('api.chargers.index'));\n\n    $response->assertOk()->assertSee($chargers[0]->id);\n});\n\ntest('it stores the charger', function () {\n    $data = Charger::factory()\n        ->make()\n        ->toArray();\n\n    $response = $this->postJson(route('api.chargers.store'), $data);\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $this->assertDatabaseHas('chargers', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n});\n\ntest('it updates the charger', function () {\n    $charger = Charger::factory()->create();\n\n    $currentCharger = CurrentCharger::factory()->create();\n    $typeCharger = TypeCharger::factory()->create();\n    $powerCharger = PowerCharger::factory()->create();\n    $chargerLocation = ChargerLocation::factory()->create();\n\n    $data = [\n        'unit' => fake()->numberBetween(1, 2),\n        'created_at' => fake()->dateTime(),\n        'updated_at' => fake()->dateTime(),\n        'deleted_at' => fake()->dateTime(),\n        'current_charger_id' => $currentCharger->id,\n        'type_charger_id' => $typeCharger->id,\n        'power_charger_id' => $powerCharger->id,\n        'charger_location_id' => $chargerLocation->id,\n    ];\n\n    $response = $this->putJson(route('api.chargers.update', $charger), $data);\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $data['id'] = $charger->id;\n\n    $this->assertDatabaseHas('chargers', $data);\n\n    $response->assertStatus(200)->assertJsonFragment($data);\n});\n\ntest('it deletes the charger', function () {\n    $charger = Charger::factory()->create();\n\n    $response = $this->deleteJson(route('api.chargers.destroy', $charger));\n\n    $this->assertSoftDeleted($charger);\n\n    $response->assertNoContent();\n});\n"
            },
            "item_212": {
                "path": "app/Filament/Resources/Panel/BrandVehicleResource/RelationManagers",
                "name": "ModelVehiclesRelationManager.php",
                "fullPath": "app/Filament/Resources/Panel/BrandVehicleResource/RelationManagers/ModelVehiclesRelationManager.php",
                "template": "crud/views/filament/RelationManager.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 212,
                "createdAt": "2024-07-30 15:50:11",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\BrandVehicleResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\BrandVehicleResource;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\n\nclass ModelVehiclesRelationManager extends RelationManager\n{\n    protected static string $relationship = 'modelVehicles';\n\n    protected static ?string $recordTitleAttribute = 'name';\n\n    public function form(Form $form): Form\n    {\n        return $form->schema([\n            Grid::make(['default' => 1])->schema([\n                FileUpload::make('image')\n                    ->rules(['image'])\n                    ->nullable()\n                    ->maxSize(1024)\n                    ->image()\n                    ->imageEditor()\n                    ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                TextInput::make('name')\n                    ->required()\n                    ->string(),\n            ]),\n        ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('name'),\n            ])\n            ->filters([])\n            ->headerActions([Tables\\Actions\\CreateAction::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
            },
            "item_213": {
                "path": "app/Filament/Resources/Panel",
                "name": "UserResource.php",
                "fullPath": "app/Filament/Resources/Panel/UserResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "id": 213,
                "createdAt": "2024-07-30 22:45:26",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\UserResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\UserResource\\RelationManagers;\n\nclass UserResource extends Resource\n{\n    protected static ?string $model = User::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Admin';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.users.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.users.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.users.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    TextInput::make('email')\n                        ->required()\n                        ->string()\n                        ->unique('users', 'email', ignoreRecord: true)\n                        ->email(),\n\n                    TextInput::make('password')\n                        ->required(\n                            fn(string $context): bool => $context === 'create'\n                        )\n                        ->dehydrated(fn($state) => filled($state))\n                        ->string()\n                        ->minLength(6)\n                        ->password(),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([TextColumn::make('name'), TextColumn::make('email')])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListUsers::route('/'),\n            'create' => Pages\\CreateUser::route('/create'),\n            'view' => Pages\\ViewUser::route('/{record}'),\n            'edit' => Pages\\EditUser::route('/{record}/edit'),\n        ];\n    }\n}\n",
                "conflictFileName": "a1nIlmer2885XG19hwhQZFxX2lV5uQNl.json"
            },
            "item_214": {
                "path": "app/Filament/Resources/Panel/UserResource/Pages",
                "name": "CreateUser.php",
                "fullPath": "app/Filament/Resources/Panel/UserResource/Pages/CreateUser.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 214,
                "createdAt": "2024-07-30 22:45:26",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\UserResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\UserResource;\n\nclass CreateUser extends CreateRecord\n{\n    protected static string $resource = UserResource::class;\n}\n"
            },
            "item_215": {
                "path": "app/Filament/Resources/Panel/UserResource/Pages",
                "name": "ViewUser.php",
                "fullPath": "app/Filament/Resources/Panel/UserResource/Pages/ViewUser.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 215,
                "createdAt": "2024-07-30 22:45:26",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\UserResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\UserResource;\n\nclass ViewUser extends ViewRecord\n{\n    protected static string $resource = UserResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_216": {
                "path": "app/Filament/Resources/Panel/UserResource/Pages",
                "name": "EditUser.php",
                "fullPath": "app/Filament/Resources/Panel/UserResource/Pages/EditUser.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 216,
                "createdAt": "2024-07-30 22:45:26",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\UserResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\UserResource;\n\nclass EditUser extends EditRecord\n{\n    protected static string $resource = UserResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_217": {
                "path": "app/Filament/Resources/Panel/UserResource/Pages",
                "name": "ListUsers.php",
                "fullPath": "app/Filament/Resources/Panel/UserResource/Pages/ListUsers.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 217,
                "createdAt": "2024-07-30 22:45:26",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\UserResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\UserResource;\n\nclass ListUsers extends ListRecords\n{\n    protected static string $resource = UserResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            },
            "item_218": {
                "path": "app/Http/Controllers/Api",
                "name": "ChargersChargeController.php",
                "fullPath": "app/Http/Controllers/Api/ChargersChargeController.php",
                "template": "api/ApiHasManyController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 218,
                "createdAt": "2024-08-09 09:55:37",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Charger;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\ChargeResource;\nuse App\\Http\\Resources\\ChargeCollection;\n\nclass ChargersChargeController extends Controller\n{\n    public function index(Request $request, Charger $charger): ChargeCollection\n    {\n        $search = $request->get('search', '');\n\n        $charges = $this->getSearchQuery($search, $charger)\n            ->latest()\n            ->paginate();\n\n        return new ChargeCollection($charges);\n    }\n\n    public function store(Request $request, Charger $charger): ChargeResource\n    {\n        $validated = $request->validate([\n            'vehicle_id' => ['required'],\n            'date' => ['required', 'date'],\n            'charger_location_id' => ['required'],\n            'km_now' => ['required'],\n            'km_before' => ['required'],\n            'start_charging_now' => ['required'],\n            'finish_charging_now' => ['required'],\n            'finish_charging_before' => ['required'],\n            'parking' => ['required'],\n            'kWh' => ['required'],\n            'street_lighting_tax' => ['required'],\n            'value_added_tax' => ['required'],\n            'admin_cost' => ['required'],\n            'total_cost' => ['required'],\n            'image' => ['nullable', 'image', 'max:1024'],\n            'user_id' => ['required'],\n            'charger_id' => ['required'],\n        ]);\n\n        if ($request->hasFile('image')) {\n            $validated['image'] = $request->file('image')->store('public');\n        }\n\n        $charge = $charger->charge()->create($validated);\n\n        return new ChargeResource($charge);\n    }\n\n    public function getSearchQuery(string $search, Charger $charger)\n    {\n        return $charger->charge()->where('date', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_219": {
                "path": "tests/Feature/Api",
                "name": "ChargerChargesTest.php",
                "fullPath": "tests/Feature/Api/ChargerChargesTest.php",
                "template": "api/ApiHasManyTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 219,
                "createdAt": "2024-08-09 09:55:37",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nuse App\\Models\\User;\nuse App\\Models\\Charge;\nuse App\\Models\\Charger;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets charger charges', function () {\n    $charger = Charger::factory()->create();\n    $charges = Charge::factory()\n        ->count(2)\n        ->create([\n            'charger_id' => $charger->id,\n        ]);\n\n    $response = $this->getJson(route('api.chargers.charges.index', $charger));\n\n    $response->assertOk()->assertSee($charges[0]->id);\n});\n\ntest('it stores the charger charges', function () {\n    $charger = Charger::factory()->create();\n    $data = Charge::factory()\n        ->make([\n            'charger_id' => $charger->id,\n        ])\n        ->toArray();\n\n    $response = $this->postJson(\n        route('api.chargers.charges.store', $charger),\n        $data\n    );\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n    unset($data['deleted_at']);\n\n    $this->assertDatabaseHas('charges', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n\n    $charge = Charge::latest('id')->first();\n\n    $this->assertEquals($charger->id, $charge->charger_id);\n});\n"
            },
            "item_220": {
                "path": "database/factories",
                "name": "DiscountHomeChargingFactory.php",
                "fullPath": "database/factories/DiscountHomeChargingFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 220,
                "createdAt": "2024-08-19 09:00:02",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Support\\Str;\nuse App\\Models\\DiscountHomeCharging;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass DiscountHomeChargingFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = DiscountHomeCharging::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'month' => fake()->date(),\n            'total_kwh' => fake()->randomFloat(2, 0, 9999),\n            'discount_kwh' => fake()->word(),\n            'discount_total' => fake()->randomFloat(2, 0, 9999),\n            'user_id' => \\App\\Models\\User::factory(),\n            'charger_location_id' => \\App\\Models\\ChargerLocation::factory(),\n        ];\n    }\n}\n"
            },
            "item_221": {
                "path": "database/seeders",
                "name": "DiscountHomeChargingSeeder.php",
                "fullPath": "database/seeders/DiscountHomeChargingSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 221,
                "createdAt": "2024-08-19 09:00:02",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\DiscountHomeCharging;\n\nclass DiscountHomeChargingSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        DiscountHomeCharging::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_222": {
                "path": "app/Policies",
                "name": "DiscountHomeChargingPolicy.php",
                "fullPath": "app/Policies/DiscountHomeChargingPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 222,
                "createdAt": "2024-08-19 09:00:02",
                "updatedAt": "2024-08-19 09:14:51",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\DiscountHomeCharging;\n\nclass DiscountHomeChargingPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, DiscountHomeCharging $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, DiscountHomeCharging $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, DiscountHomeCharging $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, DiscountHomeCharging $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, DiscountHomeCharging $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_223": {
                "path": "app/Http/Resources",
                "name": "DiscountHomeChargingResource.php",
                "fullPath": "app/Http/Resources/DiscountHomeChargingResource.php",
                "template": "api/ApiResource.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 223,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass DiscountHomeChargingResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_224": {
                "path": "app/Http/Resources",
                "name": "DiscountHomeChargingCollection.php",
                "fullPath": "app/Http/Resources/DiscountHomeChargingCollection.php",
                "template": "api/ApiCollection.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 224,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass DiscountHomeChargingCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n"
            },
            "item_225": {
                "path": "app/Http/Controllers/Api",
                "name": "ChargerLocationsDiscountHomeChargingController.php",
                "fullPath": "app/Http/Controllers/Api/ChargerLocationsDiscountHomeChargingController.php",
                "template": "api/ApiHasManyController.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 225,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Models\\ChargerLocation;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\DiscountHomeChargingResource;\nuse App\\Http\\Resources\\DiscountHomeChargingCollection;\n\nclass ChargerLocationsDiscountHomeChargingController extends Controller\n{\n    public function index(\n        Request $request,\n        ChargerLocation $chargerLocation\n    ): DiscountHomeChargingCollection {\n        $search = $request->get('search', '');\n\n        $discountHomeChargings = $this->getSearchQuery(\n            $search,\n            $chargerLocation\n        )\n            ->latest()\n            ->paginate();\n\n        return new DiscountHomeChargingCollection($discountHomeChargings);\n    }\n\n    public function store(\n        Request $request,\n        ChargerLocation $chargerLocation\n    ): DiscountHomeChargingResource {\n        $validated = $request->validate([\n            'month' => ['required', 'date'],\n            'total_kwh' => ['required'],\n            'discount_kwh' => ['required'],\n            'discount_total' => ['required'],\n            'user_id' => ['required'],\n        ]);\n\n        $discountHomeCharging = $chargerLocation\n            ->discountHomeChargings()\n            ->create($validated);\n\n        return new DiscountHomeChargingResource($discountHomeCharging);\n    }\n\n    public function getSearchQuery(\n        string $search,\n        ChargerLocation $chargerLocation\n    ) {\n        return $chargerLocation\n            ->discountHomeChargings()\n            ->where('charger_location_id', 'like', \"%{$search}%\");\n    }\n}\n"
            },
            "item_226": {
                "path": "tests/Feature/Api",
                "name": "ChargerLocationDiscountHomeChargingsTest.php",
                "fullPath": "tests/Feature/Api/ChargerLocationDiscountHomeChargingsTest.php",
                "template": "api/ApiHasManyTest.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 226,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nuse App\\Models\\User;\nuse Laravel\\Sanctum\\Sanctum;\nuse App\\Models\\ChargerLocation;\nuse App\\Models\\DiscountHomeCharging;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nuses(RefreshDatabase::class, WithFaker::class);\n\nbeforeEach(function () {\n    $this->withoutExceptionHandling();\n\n    $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n    Sanctum::actingAs($user, [], 'web');\n});\n\ntest('it gets charger_location discount_home_chargings', function () {\n    $chargerLocation = ChargerLocation::factory()->create();\n    $discountHomeChargings = DiscountHomeCharging::factory()\n        ->count(2)\n        ->create([\n            'charger_location_id' => $chargerLocation->id,\n        ]);\n\n    $response = $this->getJson(\n        route(\n            'api.charger-locations.discount-home-chargings.index',\n            $chargerLocation\n        )\n    );\n\n    $response\n        ->assertOk()\n        ->assertSee($discountHomeChargings[0]->charger_location_id);\n});\n\ntest('it stores the charger_location discount_home_chargings', function () {\n    $chargerLocation = ChargerLocation::factory()->create();\n    $data = DiscountHomeCharging::factory()\n        ->make([\n            'charger_location_id' => $chargerLocation->id,\n        ])\n        ->toArray();\n\n    $response = $this->postJson(\n        route(\n            'api.charger-locations.discount-home-chargings.store',\n            $chargerLocation\n        ),\n        $data\n    );\n\n    unset($data['created_at']);\n    unset($data['updated_at']);\n\n    $this->assertDatabaseHas('discount_home_chargings', $data);\n\n    $response->assertStatus(201)->assertJsonFragment($data);\n\n    $discountHomeCharging = DiscountHomeCharging::latest('id')->first();\n\n    $this->assertEquals(\n        $chargerLocation->id,\n        $discountHomeCharging->charger_location_id\n    );\n});\n"
            },
            "item_227": {
                "path": "app/Filament/Resources/Panel",
                "name": "DiscountHomeChargingResource.php",
                "fullPath": "app/Filament/Resources/Panel/DiscountHomeChargingResource.php",
                "template": "crud/views/filament/ResourceComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 227,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse App\\Models\\DiscountHomeCharging;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource\\RelationManagers;\n\nclass DiscountHomeChargingResource extends Resource\n{\n    protected static ?string $model = DiscountHomeCharging::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.discountHomeChargings.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.discountHomeChargings.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.discountHomeChargings.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Select::make('charger_location_id')\n                        ->required()\n                        ->relationship('chargerLocation', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('month')\n                        ->rules(['date'])\n                        ->required()\n                        ->native(false),\n\n                    TextInput::make('total_kwh')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('discount_kwh')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    TextInput::make('discount_total')\n                        ->required()\n                        ->numeric()\n                        ->step(1),\n\n                    Select::make('user_id')\n                        ->required()\n                        ->relationship('user', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('chargerLocation.name'),\n\n                TextColumn::make('month')->since(),\n\n                TextColumn::make('total_kwh'),\n\n                TextColumn::make('discount_kwh'),\n\n                TextColumn::make('discount_total'),\n\n                TextColumn::make('user.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListDiscountHomeChargings::route('/'),\n            'create' => Pages\\CreateDiscountHomeCharging::route('/create'),\n            'view' => Pages\\ViewDiscountHomeCharging::route('/{record}'),\n            'edit' => Pages\\EditDiscountHomeCharging::route('/{record}/edit'),\n        ];\n    }\n}\n"
            },
            "item_228": {
                "path": "app/Filament/Resources/Panel/DiscountHomeChargingResource/Pages",
                "name": "CreateDiscountHomeCharging.php",
                "fullPath": "app/Filament/Resources/Panel/DiscountHomeChargingResource/Pages/CreateDiscountHomeCharging.php",
                "template": "crud/views/filament/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 228,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\CreateRecord;\nuse App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource;\n\nclass CreateDiscountHomeCharging extends CreateRecord\n{\n    protected static string $resource = DiscountHomeChargingResource::class;\n}\n"
            },
            "item_229": {
                "path": "app/Filament/Resources/Panel/DiscountHomeChargingResource/Pages",
                "name": "ViewDiscountHomeCharging.php",
                "fullPath": "app/Filament/Resources/Panel/DiscountHomeChargingResource/Pages/ViewDiscountHomeCharging.php",
                "template": "crud/views/filament/ViewComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 229,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ViewRecord;\nuse App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource;\n\nclass ViewDiscountHomeCharging extends ViewRecord\n{\n    protected static string $resource = DiscountHomeChargingResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\EditAction::make()];\n    }\n}\n"
            },
            "item_230": {
                "path": "app/Filament/Resources/Panel/DiscountHomeChargingResource/Pages",
                "name": "EditDiscountHomeCharging.php",
                "fullPath": "app/Filament/Resources/Panel/DiscountHomeChargingResource/Pages/EditDiscountHomeCharging.php",
                "template": "crud/views/filament/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 230,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\EditRecord;\nuse App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource;\n\nclass EditDiscountHomeCharging extends EditRecord\n{\n    protected static string $resource = DiscountHomeChargingResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\DeleteAction::make()];\n    }\n}\n"
            },
            "item_231": {
                "path": "app/Filament/Resources/Panel/DiscountHomeChargingResource/Pages",
                "name": "ListDiscountHomeChargings.php",
                "fullPath": "app/Filament/Resources/Panel/DiscountHomeChargingResource/Pages/ListDiscountHomeChargings.php",
                "template": "crud/views/filament/ListComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "id": 231,
                "createdAt": "2024-08-19 09:00:03",
                "updatedAt": "2024-08-19 09:14:53",
                "content": "<?php\n\nnamespace App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource\\Pages;\n\nuse Filament\\Actions;\nuse Filament\\Resources\\Pages\\ListRecords;\nuse App\\Filament\\Resources\\Panel\\DiscountHomeChargingResource;\n\nclass ListDiscountHomeChargings extends ListRecords\n{\n    protected static string $resource = DiscountHomeChargingResource::class;\n\n    protected function getHeaderActions(): array\n    {\n        return [Actions\\CreateAction::make()];\n    }\n}\n"
            }
        },
        "routes": {
            "item_1": {
                "name": "charges.index",
                "method": "get",
                "path": "/charges",
                "tag": "charges.index",
                "type": "apiRoute",
                "routableId": 16,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargeController::class, 'index']",
                "id": 1,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "__tableData": {
                "count": 26,
                "lastPrimaryKey": 38,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "charges.store",
                "method": "post",
                "path": "/charges",
                "tag": "charges.store",
                "type": "apiRoute",
                "routableId": 16,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargeController::class, 'store']",
                "id": 2,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_3": {
                "name": "charges.show",
                "method": "get",
                "path": "/charges/{charge}",
                "tag": "charges.show",
                "type": "apiRoute",
                "routableId": 16,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargeController::class, 'show']",
                "id": 3,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_4": {
                "name": "charges.update",
                "method": "put",
                "path": "/charges/{charge}",
                "tag": "charges.update",
                "type": "apiRoute",
                "routableId": 16,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargeController::class, 'update']",
                "id": 4,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_5": {
                "name": "charges.destroy",
                "method": "delete",
                "path": "/charges/{charge}",
                "tag": "charges.destroy",
                "type": "apiRoute",
                "routableId": 16,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargeController::class, 'destroy']",
                "id": 5,
                "createdAt": "2024-07-29 13:14:04",
                "updatedAt": "2024-07-29 13:14:04"
            },
            "item_6": {
                "name": "vehicles.charges.index",
                "method": "get",
                "path": "/vehicles/{vehicle}/charges",
                "tag": "vehicles.charges.index",
                "type": "apiRoute",
                "routableId": 1,
                "routableType": "HasManyDetail",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehiclesChargeController::class, 'index']",
                "id": 6,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_7": {
                "name": "vehicles.charges.store",
                "method": "post",
                "path": "/vehicles/{vehicle}/charges",
                "tag": "vehicles.charges.store",
                "type": "apiRoute",
                "routableId": 1,
                "routableType": "HasManyDetail",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehiclesChargeController::class, 'store']",
                "id": 7,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_8": {
                "name": "vehicles.state-of-healths.index",
                "method": "get",
                "path": "/vehicles/{vehicle}/state-of-healths",
                "tag": "vehicles.state-of-healths.index",
                "type": "apiRoute",
                "routableId": 2,
                "routableType": "HasManyDetail",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehiclesStateOfHealthController::class, 'index']",
                "id": 8,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_9": {
                "name": "vehicles.state-of-healths.store",
                "method": "post",
                "path": "/vehicles/{vehicle}/state-of-healths",
                "tag": "vehicles.state-of-healths.store",
                "type": "apiRoute",
                "routableId": 2,
                "routableType": "HasManyDetail",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehiclesStateOfHealthController::class, 'store']",
                "id": 9,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_10": {
                "name": "vehicles.index",
                "method": "get",
                "path": "/vehicles",
                "tag": "vehicles.index",
                "type": "apiRoute",
                "routableId": 17,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehicleController::class, 'index']",
                "id": 10,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_11": {
                "name": "vehicles.store",
                "method": "post",
                "path": "/vehicles",
                "tag": "vehicles.store",
                "type": "apiRoute",
                "routableId": 17,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehicleController::class, 'store']",
                "id": 11,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_12": {
                "name": "vehicles.show",
                "method": "get",
                "path": "/vehicles/{vehicle}",
                "tag": "vehicles.show",
                "type": "apiRoute",
                "routableId": 17,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehicleController::class, 'show']",
                "id": 12,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_13": {
                "name": "vehicles.update",
                "method": "put",
                "path": "/vehicles/{vehicle}",
                "tag": "vehicles.update",
                "type": "apiRoute",
                "routableId": 17,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehicleController::class, 'update']",
                "id": 13,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_14": {
                "name": "vehicles.destroy",
                "method": "delete",
                "path": "/vehicles/{vehicle}",
                "tag": "vehicles.destroy",
                "type": "apiRoute",
                "routableId": 17,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[VehicleController::class, 'destroy']",
                "id": 14,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_20": {
                "name": "charger-locations.chargers.index",
                "method": "get",
                "path": "/charger-locations/{charger-location}/chargers",
                "tag": "charger-locations.chargers.index",
                "type": "apiRoute",
                "routableId": 3,
                "routableType": "HasManyDetail",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerLocationsChargerController::class, 'index']",
                "id": 20,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_21": {
                "name": "charger-locations.chargers.store",
                "method": "post",
                "path": "/charger-locations/{charger-location}/chargers",
                "tag": "charger-locations.chargers.store",
                "type": "apiRoute",
                "routableId": 3,
                "routableType": "HasManyDetail",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerLocationsChargerController::class, 'store']",
                "id": 21,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_24": {
                "name": "charger-locations.index",
                "method": "get",
                "path": "/charger-locations",
                "tag": "charger-locations.index",
                "type": "apiRoute",
                "routableId": 21,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerLocationController::class, 'index']",
                "id": 24,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_25": {
                "name": "charger-locations.store",
                "method": "post",
                "path": "/charger-locations",
                "tag": "charger-locations.store",
                "type": "apiRoute",
                "routableId": 21,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerLocationController::class, 'store']",
                "id": 25,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_26": {
                "name": "charger-locations.show",
                "method": "get",
                "path": "/charger-locations/{chargerLocation}",
                "tag": "charger-locations.show",
                "type": "apiRoute",
                "routableId": 21,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerLocationController::class, 'show']",
                "id": 26,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_27": {
                "name": "charger-locations.update",
                "method": "put",
                "path": "/charger-locations/{chargerLocation}",
                "tag": "charger-locations.update",
                "type": "apiRoute",
                "routableId": 21,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerLocationController::class, 'update']",
                "id": 27,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_28": {
                "name": "charger-locations.destroy",
                "method": "delete",
                "path": "/charger-locations/{chargerLocation}",
                "tag": "charger-locations.destroy",
                "type": "apiRoute",
                "routableId": 21,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerLocationController::class, 'destroy']",
                "id": 28,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_34": {
                "name": "chargers.index",
                "method": "get",
                "path": "/chargers",
                "tag": "chargers.index",
                "type": "apiRoute",
                "routableId": 27,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerController::class, 'index']",
                "id": 34,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_35": {
                "name": "chargers.store",
                "method": "post",
                "path": "/chargers",
                "tag": "chargers.store",
                "type": "apiRoute",
                "routableId": 27,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerController::class, 'store']",
                "id": 35,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_36": {
                "name": "chargers.show",
                "method": "get",
                "path": "/chargers/{charger}",
                "tag": "chargers.show",
                "type": "apiRoute",
                "routableId": 27,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerController::class, 'show']",
                "id": 36,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_37": {
                "name": "chargers.update",
                "method": "put",
                "path": "/chargers/{charger}",
                "tag": "chargers.update",
                "type": "apiRoute",
                "routableId": 27,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerController::class, 'update']",
                "id": 37,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            },
            "item_38": {
                "name": "chargers.destroy",
                "method": "delete",
                "path": "/chargers/{charger}",
                "tag": "chargers.destroy",
                "type": "apiRoute",
                "routableId": 27,
                "routableType": "Crud",
                "projectId": 1,
                "hasCustomContent": true,
                "customContent": "[ChargerController::class, 'destroy']",
                "id": 38,
                "createdAt": "2024-07-29 21:54:31",
                "updatedAt": "2024-07-29 21:54:31"
            }
        },
        "has_many_details": {
            "item_1": {
                "crudId": 17,
                "relationshipId": 73,
                "sectionId": 2,
                "detailCrudId": 18,
                "id": 1,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "__tableData": {
                "count": 5,
                "lastPrimaryKey": 6,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 17,
                "relationshipId": 81,
                "sectionId": 2,
                "detailCrudId": 19,
                "id": 2,
                "createdAt": "2024-07-29 13:14:12",
                "updatedAt": "2024-07-29 13:14:12"
            },
            "item_3": {
                "crudId": 21,
                "relationshipId": 69,
                "sectionId": 2,
                "detailCrudId": 22,
                "id": 3,
                "createdAt": "2024-07-29 13:16:55",
                "updatedAt": "2024-07-29 13:16:55"
            },
            "item_5": {
                "crudId": 6,
                "relationshipId": 41,
                "sectionId": 4,
                "detailCrudId": 30,
                "id": 5,
                "createdAt": "2024-07-30 15:49:50",
                "updatedAt": "2024-07-30 15:49:50"
            },
            "item_6": {
                "crudId": 30,
                "relationshipId": 43,
                "sectionId": 4,
                "detailCrudId": 31,
                "id": 6,
                "createdAt": "2024-07-30 15:50:00",
                "updatedAt": "2024-07-30 15:50:00"
            }
        }
    },
    "tablesNames": [
        "projects",
        "tables",
        "columns",
        "indices",
        "index_column",
        "models",
        "fillable_model_column",
        "hidden_model_column",
        "casts_model_column",
        "app_sections",
        "schema_sections",
        "navs",
        "relationships",
        "cruds",
        "crud_panels",
        "inputs",
        "renderable_files",
        "routes",
        "has_many_details"
    ]
}