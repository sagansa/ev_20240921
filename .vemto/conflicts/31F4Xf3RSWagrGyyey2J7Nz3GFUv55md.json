{
    "conflicts": [
        {
            "id": "ca6236ff-4e4f-47cb-93b5-946c0c5208c0",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\StateOfHealth;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource\\RelationManagers;\nuse App\\Models\\Vehicle;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass StateOfHealthResource extends Resource\n{\n    protected static ?string $model = StateOfHealth::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-battery-50';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.stateOfHealths.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.stateOfHealths.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.stateOfHealths.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('vehicle_id')\n                        ->label('Vehicle')\n                        ->required()\n                        ->options(function () {\n                            return Vehicle::where('user_id', Auth::id())\n                                ->where('status', 1)\n                                ->pluck('license_plate', 'id');\n                        })\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('date')\n                        ->rules(['date'])\n                        ->default(today())\n                        ->required()\n                        ->native(false),\n\n                    TextInput::make('km')\n                        ->label('km')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('km')\n                        ->inputMode('numeric'),\n\n                    TextInput::make('percentage')\n                        ->required()\n                        ->numeric()\n                        ->suffix('%')\n                        ->inputMode('decimal'),\n\n                    TextInput::make('remaining_battery')\n                        ->nullable()\n                        ->numeric()\n                        ->suffix('kWh')\n                        ->inputMode('decimal'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->modifyQueryUsing(function (Builder $query) {\n                $is_super_admin = Auth::user()->hasRole('super_admin');\n\n                if (!$is_super_admin) {\n                    $query->where('user_id', Auth::user()->id);\n                }\n            })\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('date'),\n\n                TextColumn::make('vehicle.license_plate'),\n\n                TextColumn::make('km'),\n\n                TextColumn::make('percentage'),\n\n                TextColumn::make('remaining_battery'),\n\n                TextColumn::make('user.name')\n                    ->visible(fn ($record) => auth()->user()->hasRole('super_admin')), // Kondisi visibilitas,\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                // Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListStateOfHealths::route('/'),\n            'create' => Pages\\CreateStateOfHealth::route('/create'),\n            'view' => Pages\\ViewStateOfHealth::route('/{record}'),\n            'edit' => Pages\\EditStateOfHealth::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\StateOfHealth;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\StateOfHealthResource\\RelationManagers;\n\nclass StateOfHealthResource extends Resource\n{\n    protected static ?string $model = StateOfHealth::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 1;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.stateOfHealths.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.stateOfHealths.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.stateOfHealths.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    Select::make('vehicle_id')\n                        ->required()\n                        ->relationship('vehicle', 'id')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    TextInput::make('km')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('km')\n                        ->inputMode('numeric'),\n\n                    TextInput::make('percentage')\n                        ->required()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('%')\n                        ->inputMode('numeric'),\n\n                    TextInput::make('remaining_battery')\n                        ->nullable()\n                        ->numeric()\n                        ->step(1)\n                        ->suffix('kWh')\n                        ->inputMode('numeric'),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('vehicle.id'),\n\n                TextColumn::make('km'),\n\n                TextColumn::make('percentage'),\n\n                TextColumn::make('remaining_battery'),\n\n                TextColumn::make('user.name'),\n            ])\n            ->filters([Tables\\Filters\\TrashedFilter::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\ForceDeleteBulkAction::make(),\n                    Tables\\Actions\\RestoreBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListStateOfHealths::route('/'),\n            'create' => Pages\\CreateStateOfHealth::route('/create'),\n            'view' => Pages\\ViewStateOfHealth::route('/{record}'),\n            'edit' => Pages\\EditStateOfHealth::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getEloquentQuery(): Builder\n    {\n        return parent::getEloquentQuery()->withoutGlobalScopes([\n            SoftDeletingScope::class,\n        ]);\n    }\n}\n"
        }
    ]
}