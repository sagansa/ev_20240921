{
    "conflicts": [
        {
            "id": "f4e66b8f-0186-4b50-8837-4afceb6097fd",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse App\\Filament\\Forms\\ImageFileUpload;\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\ModelVehicle;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource\\RelationManagers;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Tables\\Columns\\ImageColumn;\n\nclass ModelVehicleResource extends Resource\n{\n    protected static ?string $model = ModelVehicle::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Vehicles';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.modelVehicles.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.modelVehicles.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.modelVehicles.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n\n                    ImageFileUpload::make('image')\n                        ->directory('images/model'),\n\n                    Select::make('brand_vehicle_id')\n                        ->required()\n                        ->relationship('brandVehicle', 'name')\n                        ->searchable(),\n\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('name'),\n\n                TextColumn::make('brandVehicle.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListModelVehicles::route('/'),\n            'create' => Pages\\CreateModelVehicle::route('/create'),\n            'view' => Pages\\ViewModelVehicle::route('/{record}'),\n            'edit' => Pages\\EditModelVehicle::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\ModelVehicle;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\ModelVehicleResource\\RelationManagers;\n\nclass ModelVehicleResource extends Resource\n{\n    protected static ?string $model = ModelVehicle::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Vehicles';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.modelVehicles.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.modelVehicles.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.modelVehicles.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('name')\n                        ->required()\n                        ->string()\n                        ->autofocus(),\n\n                    Select::make('brand_vehicle_id')\n                        ->required()\n                        ->relationship('brandVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('brandVehicle.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListModelVehicles::route('/'),\n            'create' => Pages\\CreateModelVehicle::route('/create'),\n            'view' => Pages\\ViewModelVehicle::route('/{record}'),\n            'edit' => Pages\\EditModelVehicle::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}