{
    "conflicts": [
        {
            "id": "4e246913-4887-4e3d-a309-c40c0239e2f5",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\TypeCharger;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Radio;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource\\RelationManagers;\n\nclass TypeChargerResource extends Resource\n{\n    protected static ?string $model = TypeCharger::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 3;\n\n    protected static ?string $navigationGroup = 'Chargers';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.typeChargers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.typeChargers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.typeChargers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Radio::make('name')\n                        ->required()\n                        ->options([\n                            'CCS2' => 'CCS2',\n                            'Chademo' => 'Chademo',\n                            'DC GBT' => 'DC GBT',\n                            'Type 2' => 'Type 2',\n                            'AC GBT' => 'AC GBT',\n                        ])\n                        ->inlineLabel(),\n\n\n                    Select::make('current_charger_id')\n                        ->required()\n                        ->relationship('currentCharger', 'name')\n                        ,\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name')\n                    ->formatStateUsing(\n                        fn(string $state): string => match ($state) {\n                            'CCS2' => 'CCS2',\n                            'Chademo' => 'Chademo',\n                            'DC GBT' => 'DC GBT',\n                            'Type 2' => 'Type 2',\n                            'AC GBT' => 'AC GBT',\n                            default => $state,\n                        }\n                    ),\n\n                TextColumn::make('currentCharger.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTypeChargers::route('/'),\n            'create' => Pages\\CreateTypeCharger::route('/create'),\n            'view' => Pages\\ViewTypeCharger::route('/{record}'),\n            'edit' => Pages\\EditTypeCharger::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse App\\Models\\TypeCharger;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Radio;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\TypeChargerResource\\RelationManagers;\n\nclass TypeChargerResource extends Resource\n{\n    protected static ?string $model = TypeCharger::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 3;\n\n    protected static ?string $navigationGroup = 'Chargers';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.typeChargers.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.typeChargers.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.typeChargers.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    Radio::make('name')\n                        ->required()\n                        ->options([\n                            'AC' => 'AC',\n                            'DC' => 'DC',\n                        ])\n                        ->inlineLabel(),\n\n                    Select::make('current_charger_id')\n                        ->required()\n                        ->relationship('currentCharger', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('name'),\n\n                TextColumn::make('currentCharger.name'),\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListTypeChargers::route('/'),\n            'create' => Pages\\CreateTypeCharger::route('/create'),\n            'view' => Pages\\ViewTypeCharger::route('/{record}'),\n            'edit' => Pages\\EditTypeCharger::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}