{
    "conflicts": [
        {
            "id": "4a09c8da-ccce-46cc-b8ff-4bc3fa004fe1",
            "currentContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Tables;\nuse App\\Models\\Vehicle;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse App\\Filament\\Resources\\Panel\\VehicleResource\\Pages;\nuse App\\Models\\ModelVehicle;\nuse App\\Models\\TypeVehicle;\nuse App\\Tables\\Columns\\StatusActiveColumn;\nuse Filament\\Forms\\Components\\FileUpload;\nuse Filament\\Tables\\Columns\\ImageColumn;\nuse Filament\\Tables\\Columns\\Summarizers\\Sum;\nuse Illuminate\\Support\\Facades\\Auth;\n\nclass VehicleResource extends Resource\n{\n    protected static ?string $model = Vehicle::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-truck';\n\n    protected static ?int $navigationSort = 5;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.vehicles.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.vehicles.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.vehicles.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    FileUpload::make('image')\n                        ->rules(['image'])\n                        ->nullable()\n                        ->maxSize(1024)\n                        ->image()\n                        ->imageEditor()\n                        ->imageEditorAspectRatios([null, '16:9', '4:3', '1:1']),\n\n                    TextInput::make('license_plate')\n                        ->label('License Plate/Name Your Vehicle')\n                        ->string()\n                        ->required(),\n\n                    Select::make('brand_vehicle_id')\n                        ->label('Brand')\n                        ->required()\n                        ->relationship('brandVehicle', 'name')\n                        ->searchable()\n                        ->reactive()\n                        ->preload()\n                        ->afterStateUpdated(function ($state, callable $set) {\n                            $set('model_vehicle_id', null);\n                            $set('type_vehicle_id', null);\n                        }),\n\n                    Select::make('model_vehicle_id')\n                        ->label('Model')\n                        ->options(function (callable $get) {\n                            $brandVehicleId = $get('brand_vehicle_id');\n                            return ModelVehicle::where('brand_vehicle_id', $brandVehicleId)->pluck('name', 'id')->toArray();\n                        })\n                        ->required()\n                        ->searchable()\n                        ->reactive()\n                        ->afterStateUpdated(function ($state, callable $set) {\n                            $set('type_vehicle_id', null);\n                        }),\n\n                    Select::make('type_vehicle_id')\n                        ->label('Type')\n                        ->options(function (callable $get) {\n                            $modelVehicleId = $get('model_vehicle_id');\n                            return TypeVehicle::where('model_vehicle_id', $modelVehicleId)->pluck('name', 'id')->toArray();\n                        })\n                        ->nullable()\n                        ->searchable()\n                        ->reactive(),\n\n                    DatePicker::make('ownership')\n                        ->rules(['date'])\n                        ->nullable()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->default('1')\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'active',\n                            '2' => 'inactive',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->modifyQueryUsing(function (Builder $query) {\n                $is_super_admin = Auth::user()->hasRole('super_admin');\n\n                if (!$is_super_admin) {\n                    $query->where('user_id', Auth::user()->id);\n                }\n            })\n            ->poll('60s')\n            ->columns([\n                ImageColumn::make('image')->visibility('public'),\n\n                TextColumn::make('license_plate')\n                    ->label('Name Your Vehicle'),\n\n                TextColumn::make('brandVehicle.name')\n                    ->label('brand'),\n\n                TextColumn::make('modelVehicle.name')\n                    ->label('Model'),\n\n                TextColumn::make('typeVehicle.name')\n                    ->label('Type'),\n\n                TextColumn::make('max_km_now')\n                    ->label('km')\n                    ->numeric(\n                        thousandsSeparator: '.'\n                    ),\n\n                TextColumn::make('ownership'),\n\n                StatusActiveColumn::make('status'),\n\n                TextColumn::make('user.name')\n                    ->visible(fn ($record) => auth()->user()->hasRole('super_admin')), // Kondisi visibilitas,\n            ])\n            ->filters([])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                // Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListVehicles::route('/'),\n            'create' => Pages\\CreateVehicle::route('/create'),\n            'view' => Pages\\ViewVehicle::route('/{record}'),\n            'edit' => Pages\\EditVehicle::route('/{record}/edit'),\n        ];\n    }\n}\n",
            "newContent": "<?php\n\nnamespace App\\Filament\\Resources\\Panel;\n\nuse Filament\\Forms;\nuse Filament\\Tables;\nuse Livewire\\Component;\nuse App\\Models\\Vehicle;\nuse Filament\\Forms\\Form;\nuse Filament\\Tables\\Table;\nuse Filament\\Resources\\Resource;\nuse Filament\\Forms\\Components\\Grid;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Forms\\Components\\TextInput;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse App\\Filament\\Resources\\Panel\\VehicleResource\\Pages;\nuse App\\Filament\\Resources\\Panel\\VehicleResource\\RelationManagers;\n\nclass VehicleResource extends Resource\n{\n    protected static ?string $model = Vehicle::class;\n\n    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';\n\n    protected static ?int $navigationSort = 2;\n\n    protected static ?string $navigationGroup = 'Apps';\n\n    public static function getModelLabel(): string\n    {\n        return __('crud.vehicles.itemTitle');\n    }\n\n    public static function getPluralModelLabel(): string\n    {\n        return __('crud.vehicles.collectionTitle');\n    }\n\n    public static function getNavigationLabel(): string\n    {\n        return __('crud.vehicles.collectionTitle');\n    }\n\n    public static function form(Form $form): Form\n    {\n        return $form->schema([\n            Section::make()->schema([\n                Grid::make(['default' => 1])->schema([\n                    TextInput::make('license_plate')\n                        ->string()\n                        ->required(),\n\n                    Select::make('brand_vehicle_id')\n                        ->required()\n                        ->relationship('brandVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('model_vehicle_id')\n                        ->required()\n                        ->relationship('modelVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    Select::make('type_vehicle_id')\n                        ->nullable()\n                        ->relationship('typeVehicle', 'name')\n                        ->searchable()\n                        ->preload()\n                        ->native(false),\n\n                    DatePicker::make('ownership')\n                        ->rules(['date'])\n                        ->nullable()\n                        ->native(false),\n\n                    Select::make('status')\n                        ->required()\n                        ->default('1')\n                        ->searchable()\n                        ->preload()\n                        ->native(false)\n                        ->options([\n                            '1' => 'active',\n                            '2' => 'inactive',\n                        ]),\n                ]),\n            ]),\n        ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n            ->poll('60s')\n            ->columns([\n                TextColumn::make('license_plate'),\n\n                TextColumn::make('brandVehicle.name'),\n\n                TextColumn::make('modelVehicle.name'),\n\n                TextColumn::make('typeVehicle.name'),\n\n                TextColumn::make('ownership')->since(),\n\n                TextColumn::make('status'),\n            ])\n            ->filters([Tables\\Filters\\TrashedFilter::make()])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\ViewAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                    Tables\\Actions\\ForceDeleteBulkAction::make(),\n                    Tables\\Actions\\RestoreBulkAction::make(),\n                ]),\n            ])\n            ->defaultSort('id', 'desc');\n    }\n\n    public static function getRelations(): array\n    {\n        return [];\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListVehicles::route('/'),\n            'create' => Pages\\CreateVehicle::route('/create'),\n            'view' => Pages\\ViewVehicle::route('/{record}'),\n            'edit' => Pages\\EditVehicle::route('/{record}/edit'),\n        ];\n    }\n\n    public static function getEloquentQuery(): Builder\n    {\n        return parent::getEloquentQuery()->withoutGlobalScopes([\n            SoftDeletingScope::class,\n        ]);\n    }\n}\n"
        }
    ]
}